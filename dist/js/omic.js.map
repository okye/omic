{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///js/omic.js","webpack:///./src/3rd/mdui@v0.1.2/js/mdui.js","webpack:///./src/components/divider/OmicDivider.js","webpack:///./src/components/divider/index.js","webpack:///./src/components/grid/OmicCol.js","webpack:///./src/components/grid/OmicContainer.js","webpack:///./src/components/grid/OmicRow.js","webpack:///./src/components/grid/index.js","webpack:///./src/components/icon/Icons.js","webpack:///./src/components/icon/index.js","webpack:///./src/components/input/OmicNumber.js","webpack:///./src/components/input/index.js","webpack:///./src/components/other/OmicEnd.js","webpack:///./src/components/other/index.js","webpack:///./src/index.js","webpack:///./src/components/Omicx.js","webpack:///./src/components/icon/OmicIcon.js","webpack:///./src/components/input/OmicInput.js","webpack:///./src/components/utils/OmicUitls.js","webpack:///./src/3rd/artTemplate@3.1.0/template-debug.js","webpack:///./src/components/index.js","webpack:///./src/utils/Utils.js","webpack:///./src/components/Omic.js"],"names":["root","factory","exports","module","define","amd","a","i","this","webpackJsonp","109","__webpack_require__","_typeof2","_typeof3","obj","__esModule","default","window","document","undefined","mdui","$","isArray","arr","Object","prototype","toString","apply","toArray","nodeList","length","push","each","callback","prop","hasOwnProperty","unique","indexOf","_queueData","queue","name","func","dequeue","shift","extend","defaults","params","key","value","data","dom","mduiDomDataStorage","dataStorage","k","v","getStyle","style","getComputedStyle","arguments","getPropertyValue","offset","box","getBoundingClientRect","body","clientTop","clientLeft","scrollTop","pageYOffset","scrollLeft","pageXOffset","top","left","transform","webkitTransform","transformOrigin","webkitTransformOrigin","transition","duration","webkitTransitionDuration","transitionDuration","queryAll","selector","parent","querySelectorAll","query","querySelector","queryId","id","getElementById","is","compareWith","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","nodeType","parentNode","parents","contains","tmp","on","eventName","targetSelector","listener","capture","handleLiveEvent","e","target","call","events","split","addEventListener","domLiveListeners","liveListener","off","removeEventListener","j","one","proxy","trigger","eventData","evt","CustomEvent","detail","bubbles","cancelable","createEvent","initEvent","dispatchEvent","transitionEnd","fireCallback","relayout","requestAnimationFrame","raf","webkitRequestAnimationFrame","mozRequestAnimationFrame","setTimeout","cancelAnimationFrame","caf","webkitCancelAnimationFrame","mozCancelAnimationFrame","clearTimeout","tempParent","trim","toCreate","createElement","innerHTML","childNodes","match","children","child","remove","removeChild","empty","textContent","prepend","newChild","insertBefore","ready","fn","parseOptions","str","options","start","Function","substr","pluginEvent","pluginName","inst","fullEventName","jQuery","support","touch","touchEvents","move","end","screen","xs","innerWidth","sm","md","lg","xl","xsDown","smDown","mdDown","lgDown","xlDown","xsUp","smUp","mdUp","lgUp","xlUp","showOverlay","zIndex","overlay","appendChild","classList","add","hideOverlay","overlays","lockScreen","oldWindowWidth","clientWidth","oldBodyPaddingLeft","parseFloat","oldBodyPaddingRight","width","unlockScreen","throttle","delay","timer","_this","args","guid","s4","Math","floor","random","substring","Headroom","opts","headroom","oldInst","DEFAULT","tolerance","down","up","_init","initialClass","pinnedClass","unpinnedClass","state","inited","lastScrollY","_attachEvent","_scroll","animationFrameId","currentScrollY","direction","toleranceExceeded","abs","unpin","pin","enable","disable","getState","getAttribute","Collapse","classes","namespace","CLASS","NAMESPACE","collapse","header","item","toggle","accordion","itemOpen","_isOpen","_getItem","parseInt","open","temp","close","content","height","scrollHeight","openAll","closeAll","Table","table","init","checkboxHTML","tag","thRow","tdRows","tdCheckboxs","selectable","updateTdCheckbox","updateThCheckbox","updateNumericCol","td","tdCheckbox","tdRow","checkbox","checked","thCheckbox","th","row","ths","method","tables","updateTables","removeRipple","ripple","removeTimeout","translate","replace","getRippleElement","TouchHandler","allowEvent","rippleParents","element","showRipple","disabled","registerEvent","Ripple","show","hide","button","touches","touchStartX","pageX","touchStartY","pageY","center","x","y","diameter","max","pow","ripples","allow","type","eType","notInputs","classNames","field","input","focus","notEmpty","invalid","expanded","inputEvent","reInit","event","domLoadedEvent","textField","validity","valid","nodeName","toLowerCase","offsetHeight","diff","clientHeight","newAreaHeight","counter","maxlength","inputed","innerText","inputSelector","updateTextFields","textfields","textfield","updateValueStyle","slider","track","fill","thumb","min","isDisabled","isDiscrete","thumbText","percent","discrete","sliders","updateSliders","Fab","fab","btn","dial","dialBtns","index","eventType","appbar","Tab","tab","tabs","indicator","hash","location","activeIndex","_setActive","_setIndicatorPosition","preventDefault","loop","targetContent","targetId","display","activeTab","activeTabOffset","next","prev","handleUpdate","Drawer","drawer","position","closes","Dialog","dialog","append","cancels","cancel","closeOnCancel","confirms","confirm","closeOnConfirm","current","history","modal","closeOnEsc","destroyOnClosed","readjust","dialogTitle","dialogContent","dialogActions","dialogHeight","innerHeight","dialogTitleHeight","dialogActionsHeight","hashchangeEvent","overlayClick","opacity","destroy","back","keyCode","title","buttons","stackedButtons","cssClass","onOpen","onOpened","onClose","onClosed","DEFAULT_BUTTON","text","bold","onClick","buttonsHTML","HTML","alert","onConfirm","confirmText","onCancel","cancelText","prompt","label","defaultValue","Tooltip","setPosition","marginLeft","marginTop","targetProps","targetMargin","tooltipWidth","tooltip","offsetWidth","tooltipHeight","documentElement","targetOffset","openEvent","closeEvent","oldOpts","dataOpts","timeoutId","Snackbar","message","buttonColorStyle","buttonColorClass","buttonColor","tpl","buttonText","snackbar","timeout","closeOnButtonClick","closeOnOutsideClick","onButtonClick","action","bottomNav","items","curItem","layerHTML","fillHTML","spinner","layer","spinners","updateSpinners","Panel","Menu","anchorSelector","menuSelector","anchor","menu","isCascade","cascade","covered","isCovered","bindSubMenuEvent","align","gutter","fixed","subMenuTrigger","subMenuDelay","active","divider","menuLeft","menuTop","transformOriginX","transformOriginY","windowHeight","windowWidth","isFixed","menuWidth","menuHeight","anchorTmp","anchorTop","anchorLeft","anchorHeight","anchorWidth","anchorBottom","anchorRight","anchorOffsetTop","offsetTop","anchorOffsetLeft","offsetLeft","menuHeightTemp","menuWidthTemp","readjustSubmenu","submenu","submenuTop","submenuLeft","submenuWidth","submenuHeight","itemTmp","itemWidth","itemHeight","itemLeft","itemTop","openSubMenu","closeSubMenu","submenus","toggleSubMenu","tmpSubmenu","timeoutOpen","timeoutClose","relatedTarget","tmpClose","tmpOpen","110","_interopRequireDefault","defineProperty","_getPrototypeOf","_getPrototypeOf2","_assign","_assign2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_Omic2","_Omic3","OmicDivider","_Omic","inset","theme","__proto__","111","_OmicDivider","_OmicDivider2","$isPkg","112","_Omicx2","_Omicx3","OmicCol","_Omicx","$__tag_closed_","$__tag_self_","113","OmicContainer","fluid","114","OmicRow","gapless","115","_OmicContainer","_OmicContainer2","_OmicRow","_OmicRow2","_OmicCol","_OmicCol2","116","email","account_circle","117","_OmicIcon","_OmicIcon2","OmicIcon","118","_OmicInput2","_OmicInput3","OmicNumber","_OmicInput","clazz","119","_OmicNumber","_OmicNumber2","OmicInput","120","OmicEnd","$__all_closed_","sbilings","len","t","121","_OmicEnd","_OmicEnd2","122","_omi","_omi2","_templateDebug","_templateDebug2","_components","_components2","_Utils","_Utils2","template","compile","components","Components","install","Omi","eachInstall","Omic","Omicx","Utils","20","_OmicUitls","_OmicUitls2","injectEndTag","52","_Icons","_Icons2","icon","53","_get2","_get3","multiple","placeholder","floating","required","pattern","msg","refs","onchange","onblur","54","copyEvent","old","render","55","__WEBPACK_AMD_DEFINE_RESULT__","getVariable","code","REMOVE_RE","SPLIT_RE","KEYWORDS_RE","NUMBER_RE","BOUNDARY_RE","SPLIT2_RE","stringify","compiler","source","html","line","compress","replaces","logic","thisLine","parser","debug","escapeSyntax","escape","test","utils","forEach","uniq","print","include","helpers","headerCode","openTag","closeTag","$data","$filename","$utils","$helpers","$out","$line","isNewEngine","concat","mainCode","footerCode","$0","$1","Render","filename","renderFile","version","config","cache","cacheStore","get","showDebugInfo","elem","escapeMap","<",">","\"","'","&","escapeFn","s","escapeHTML","Array","$include","$string","$escape","$each","helper","onerror","console","error","KEYWORDS","RegExp","join","filtered","js","filter","parts","object","as","param","array","val","56","_icon","_icon2","_input","_input2","_grid","_grid2","_other","_other2","_divider","_divider2","OmicGrid","OmicOther","57","_keys","_keys2","toPascalCase","original","toCamelCase","slice","toUpperCase","all","letter","toHyphenCase","prefix","makeHTML","subComponent","lastIndexOf","59","60","7","_Omi$Component","round","ctor","omiId","Component"],"mappings":"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","file":"js/omic.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn webpackJsonp([1],{\n\n/***/ 109:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = __webpack_require__(25);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*!\n * mdui v0.1.2 (http://mdui.org)\n * Copyright 2016-2017 zdhxiong\n * Licensed under MIT\n */\n/* jshint ignore:start */\n;(function (window, document, undefined) {\n  'use strict';\n\n  /* jshint ignore:end */\n\n  var mdui = {};\n\n  /**\n   * =============================================================================\n   * ************   Dom 操作库   ************\n   * =============================================================================\n   *\n   * Inspired by https://github.com/nolimits4web/Framework7\n   * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n   */\n  var $ = {};\n  (function () {\n\n    /**\n     * 是否是数组\n     * @param arr\n     * @returns {boolean}\n     */\n    $.isArray = function (arr) {\n      return Object.prototype.toString.apply(arr) === '[object Array]';\n    };\n\n    /**\n     * nodeList 转换为数组\n     * @param nodeList\n     * @returns {Array}\n     */\n    $.toArray = function (nodeList) {\n      var i;\n      var arr = [];\n      for (i = 0; i < nodeList.length; i++) {\n        if (nodeList[i]) {\n          arr.push(nodeList[i]);\n        }\n      }\n\n      return arr;\n    };\n\n    /**\n     * 循环数组或对象\n     * @param obj\n     * @param callback\n     */\n    $.each = function (obj, callback) {\n      var i;\n      var prop;\n      if (!obj) {\n        return;\n      }\n\n      if ($.isArray(obj)) {\n        // Array\n        for (i = 0; i < obj.length; i++) {\n          if (callback(i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        // Object\n        for (prop in obj) {\n          if (obj.hasOwnProperty(prop)) {\n            if (callback(prop, obj[prop]) === false) {\n              break;\n            }\n          }\n        }\n      }\n    };\n\n    /**\n     * 去除数组中的重复值\n     * @param arr\n     * @returns {Array}\n     */\n    $.unique = function (arr) {\n      var unique = [];\n      for (var i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) === -1) {\n          unique.push(arr[i]);\n        }\n      }\n\n      return unique;\n    };\n\n    var _queueData = [];\n    /**\n     * 写入队列\n     * @param name 队列名\n     * @param func 函数名，没有函数名时，返回所有队列\n     */\n    $.queue = function (name, func) {\n      if (typeof _queueData[name] === 'undefined') {\n        _queueData[name] = [];\n      }\n\n      if (typeof func === 'undefined') {\n        return _queueData[name];\n      }\n\n      _queueData[name].push(func);\n    };\n\n    /**\n     * 从队列中移除一个函数，并执行该函数\n     * @param name 队列名\n     */\n    $.dequeue = function (name) {\n      if (typeof _queueData[name] !== 'undefined' && _queueData[name].length) {\n        _queueData[name].shift()();\n      }\n    };\n\n    /**\n     * 合并参数\n     * @param defaults\n     * @param params\n     * @returns {*}\n     */\n    $.extend = function (defaults, params) {\n      $.each(defaults, function (key, value) {\n        if (typeof params[key] === 'undefined') {\n          params[key] = value;\n        }\n      });\n\n      return params;\n    };\n\n    /**\n     * 在 dom 元素上存储、读取数据\n     * @param dom\n     * @param key\n     * @param value\n     *\n     * $.data(dom, key);          读取指定键名的数据\n     * $.data(dom, key, value);   写入指定键名的数据\n     * $.data(dom, key, null);    删除指定键名的数据\n     * $.data(dom, object);       批量写入数据\n     */\n    $.data = function (dom, key, value) {\n      if (!dom.mduiDomDataStorage) {\n        dom.mduiDomDataStorage = {};\n      }\n\n      var dataStorage = dom.mduiDomDataStorage;\n\n      if (typeof value === 'undefined') {\n\n        // 读取单个数据\n        if (typeof key === 'string') {\n          if (key in dataStorage) {\n            return dataStorage[key];\n          } else {\n            return null;\n          }\n        }\n\n        // 批量写入数据\n        else if ((typeof key === 'undefined' ? 'undefined' : (0, _typeof3.default)(key)) === 'object') {\n            $.each(key, function (k, v) {\n              dataStorage[k] = v;\n            });\n          }\n      }\n\n      // 删除数据\n      else if (value === null) {\n          if (dataStorage[key]) {\n            dataStorage[key] = null;\n            delete dataStorage[key];\n          }\n        }\n\n        // 写入数据\n        else {\n            dataStorage[key] = value;\n          }\n    };\n\n    /**\n     * 获取元素的最终样式\n     * @param dom\n     * @param prop 可选\n     * @returns {*}\n     */\n    $.getStyle = function (dom, prop) {\n      var style = window.getComputedStyle(dom, null);\n      if (arguments.length === 1) {\n        return style;\n      }\n\n      return style.getPropertyValue(prop);\n    };\n\n    /**\n     * 获取元素相对于 document 的偏移\n     * @param dom\n     * @returns {{top: number, left: number}}\n     */\n    $.offset = function (dom) {\n      var box = dom.getBoundingClientRect();\n      var body = document.body;\n      var clientTop = dom.clientTop || body.clientTop || 0;\n      var clientLeft = dom.clientLeft || body.clientLeft || 0;\n      var scrollTop = window.pageYOffset || dom.scrollTop;\n      var scrollLeft = window.pageXOffset || dom.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    };\n\n    /**\n     * 设置 transform 属性\n     * @param dom\n     * @param transform\n     */\n    $.transform = function (dom, transform) {\n      dom.style.webkitTransform = dom.style.transform = transform;\n    };\n\n    /**\n     * 设置 transform-origin 属性\n     * @param dom\n     * @param transformOrigin\n     */\n    $.transformOrigin = function (dom, transformOrigin) {\n      dom.style.webkitTransformOrigin = dom.style.transformOrigin = transformOrigin;\n    };\n\n    /**\n     * 设置 transition 过渡时间\n     * @param dom\n     * @param duration\n     */\n    $.transition = function (dom, duration) {\n      if (typeof duration !== 'string') {\n        duration = duration + 'ms';\n      }\n\n      dom.style.webkitTransitionDuration = dom.style.transitionDuration = duration;\n    };\n\n    /**\n     * 执行 document.querySelectorAll，并把结果转换为数组\n     * @param selector\n     * @param parent\n     * @returns {Array}\n     */\n    $.queryAll = function (selector, parent) {\n      if (arguments.length === 1) {\n        parent = document;\n      }\n\n      return $.toArray(parent.querySelectorAll(selector));\n    };\n\n    /**\n     * 执行 document.querySelector\n     * @param selector\n     * @param parent\n     * @returns {Element}\n     */\n    $.query = function (selector, parent) {\n      if (arguments.length === 1) {\n        parent = document;\n      }\n\n      return parent.querySelector(selector);\n    };\n\n    /**\n     * 执行 document.getElementById\n     * @param id\n     * @param parent\n     * @returns {Element}\n     */\n    $.queryId = function (id, parent) {\n      if (arguments.length === 1) {\n        parent = document;\n      }\n\n      return parent.getElementById(id);\n    };\n\n    /**\n     * @param dom\n     * @param selector\n     * @returns {*}\n     */\n    $.is = function (dom, selector) {\n      var compareWith;\n\n      if (typeof selector === 'string') {\n        if (dom === document) {\n          return selector === document;\n        }\n\n        if (dom === window) {\n          return selector === window;\n        }\n\n        if (dom.matches) {\n          return dom.matches(selector);\n        } else if (dom.webkitMatchesSelector) {\n          return dom.webkitMatchesSelector(selector);\n        } else if (dom.mozMatchesSelector) {\n          return dom.mozMatchesSelector(selector);\n        } else if (dom.msMatchesSelector) {\n          return dom.msMatchesSelector(selector);\n        } else {\n          compareWith = $.queryAll(selector);\n          return compareWith.indexOf(dom) !== -1;\n        }\n      } else if (selector === document) {\n        return dom === document;\n      } else if (selector === window) {\n        return dom === window;\n      } else if (selector.nodeType) {\n        return dom === selector;\n      } else if (selector[0].nodeType) {\n        compareWith = $.toArray(selector);\n        return compareWith.indexOf(dom) !== -1;\n      }\n\n      return false;\n    };\n\n    /**\n     * 查找含有指定 css 选择器的父节点\n     * @param dom\n     * @param selector\n     * @returns {*}\n     */\n    $.parent = function (dom, selector) {\n      var parent = dom.parentNode;\n      if (parent !== null) {\n        if (selector) {\n          if ($.is(parent, selector)) {\n            return parent;\n          }\n        } else {\n          return parent;\n        }\n      }\n\n      return undefined;\n    };\n\n    /**\n     * 查找含有指定选择器的所有父元素\n     * @param dom\n     * @param selector\n     * @returns {Array}\n     */\n    $.parents = function (dom, selector) {\n      var parents = [];\n      var parent = dom.parentNode;\n      while (parent) {\n        if (selector) {\n          if ($.is(parent, selector)) {\n            parents.push(parent);\n          }\n        } else {\n          parents.push(parent);\n        }\n\n        parent = parent.parentNode;\n      }\n\n      return $.unique(parents);\n    };\n\n    /**\n     * dom 元素是否包含在 parent 元素内\n     * @param parent\n     * @param dom\n     * @returns {boolean}\n     */\n    $.contains = function (parent, dom) {\n      var tmp = dom.parentNode;\n      while (tmp) {\n        if ($.is(tmp, parent)) {\n          return true;\n        }\n\n        tmp = tmp.parentNode;\n      }\n\n      return false;\n    };\n\n    /**\n     * 设置 transition 动画时间\n     * @param dom\n     * @param duration\n     */\n    $.transition = function (dom, duration) {\n      if (typeof duration !== 'string') {\n        duration = duration + 'ms';\n      }\n\n      dom.style.webkitTransitionDuration = dom.style.transitionDuration = duration;\n    };\n\n    /**\n     * 事件绑定\n     * @param dom\n     * @param eventName 多个事件用空格分割\n     * @param targetSelector\n     * @param listener\n     * @param capture\n     */\n    $.on = function (dom, eventName, targetSelector, listener, capture) {\n      // 处理委托事件\n      function handleLiveEvent(e) {\n        var target = e.target;\n        if ($.is(target, targetSelector)) {\n          listener.call(target, e);\n        } else {\n          var parents = $.parents(target);\n          for (var k = 0; k < parents.length; k++) {\n            if ($.is(parents[k], targetSelector)) {\n              listener.call(parents[k], e);\n            }\n          }\n        }\n      }\n\n      var events = eventName.split(' ');\n      var i;\n      if (typeof targetSelector === 'function' || targetSelector === false) {\n        if (typeof targetSelector === 'function') {\n          listener = arguments[2];\n          capture = arguments[3] || false;\n        }\n\n        for (i = 0; i < events.length; i++) {\n          dom.addEventListener(events[i], listener, capture);\n        }\n      } else {\n        // Live events\n        for (i = 0; i < events.length; i++) {\n          if (!dom.domLiveListeners) {\n            dom.domLiveListeners = [];\n          }\n\n          dom.domLiveListeners.push({ listener: listener, liveListener: handleLiveEvent });\n          dom.addEventListener(events[i], handleLiveEvent, capture);\n        }\n      }\n    };\n\n    /**\n     * 解除事件绑定\n     * @param dom\n     * @param eventName\n     * @param targetSelector\n     * @param listener\n     * @param capture\n     */\n    $.off = function (dom, eventName, targetSelector, listener, capture) {\n      var events = eventName.split(' ');\n      for (var i = 0; i < events.length; i++) {\n        if (typeof targetSelector === 'function') {\n          listener = arguments[2];\n          capture = arguments[3] || false;\n          dom.removeEventListener(events[i], listener, capture);\n        } else {\n          // Live event\n          if (dom.domLiveListeners) {\n            for (var j = 0; j < dom.domLiveListeners.length; j++) {\n              if (dom.domLiveListeners[j].listener === listener) {\n                dom.removeEventListener(events[i], dom.domLiveListeners[j].liveListener, capture);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    /**\n     * 事件绑定，只触发一次\n     * @param dom\n     * @param eventName\n     * @param targetSelector\n     * @param listener\n     * @param capture\n     * @returns {*}\n     */\n    $.one = function (dom, eventName, targetSelector, listener, capture) {\n      if (typeof targetSelector === 'function') {\n        listener = arguments[2];\n        capture = arguments[3];\n        targetSelector = false;\n      }\n\n      function proxy(e) {\n        listener.call(e.target, e);\n        $.off(dom, eventName, targetSelector, proxy, capture);\n      }\n\n      $.on(dom, eventName, targetSelector, proxy, capture);\n    };\n\n    /**\n     * 触发事件\n     * @param dom\n     * @param eventName\n     * @param eventData\n     */\n    $.trigger = function (dom, eventName, eventData) {\n      var events = eventName.split(' ');\n      for (var i = 0; i < events.length; i++) {\n        var evt;\n        try {\n          evt = new CustomEvent(events[i], { detail: eventData, bubbles: true, cancelable: true });\n        } catch (e) {\n          evt = document.createEvent('Event');\n          evt.initEvent(events[i], true, true);\n          evt.detail = eventData;\n        }\n\n        dom.dispatchEvent(evt);\n      }\n    };\n\n    /**\n     * transition 动画结束回调\n     * @param dom\n     * @param callback\n     */\n    $.transitionEnd = function (dom, callback) {\n      var events = ['webkitTransitionEnd', 'transitionend'];\n      var i;\n      function fireCallback(e) {\n        if (e.target !== dom) {\n          return;\n        }\n\n        callback.call(dom, e);\n        for (i = 0; i < events.length; i++) {\n          $.off(dom, events[i], fireCallback);\n        }\n      }\n\n      if (callback) {\n        for (i = 0; i < events.length; i++) {\n          $.on(dom, events[i], fireCallback);\n        }\n      }\n    };\n\n    /**\n     * 重绘\n     * @param dom\n     * @returns {number}\n     */\n    $.relayout = function (dom) {\n      return dom.clientLeft;\n    };\n\n    $.requestAnimationFrame = function (callback) {\n      var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n      if (raf) {\n        return raf(callback);\n      } else {\n        return window.setTimeout(callback, 1000 / 60);\n      }\n    };\n\n    $.cancelAnimationFrame = function (id) {\n      var caf = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n      if (caf) {\n        return caf(id);\n      } else {\n        return window.clearTimeout(id);\n      }\n    };\n\n    /**\n     * 创建 Node 数组\n     * @param selector 选择器或 html 字符串\n     * @returns {Array}\n     */\n    $.dom = function (selector) {\n      var tempParent;\n\n      if (!selector) {\n        return [];\n      }\n\n      // String\n      if (typeof selector === 'string') {\n        selector = selector.trim();\n        if (selector.indexOf('<') >= 0 && selector.indexOf('>') >= 0) {\n          // HTML\n          var toCreate = 'div';\n          if (selector.indexOf('<li') === 0) {\n            toCreate = 'ul';\n          }\n\n          if (selector.indexOf('<tr') === 0) {\n            toCreate = 'tbody';\n          }\n\n          if (selector.indexOf('<td') === 0 || selector.indexOf('<th') === 0) {\n            toCreate = 'tr';\n          }\n\n          if (selector.indexOf('<tbody') === 0) {\n            toCreate = 'table';\n          }\n\n          if (selector.indexOf('<option') === 0) {\n            toCreate = 'select';\n          }\n\n          tempParent = document.createElement(toCreate);\n          tempParent.innerHTML = selector;\n          return $.toArray(tempParent.childNodes);\n        } else {\n          if (selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // ID 选择器\n            return [$.queryId(selector.split('#')[1])];\n          } else {\n            // 其他选择器\n            return $.queryAll(selector);\n          }\n        }\n      }\n\n      // Node\n      else if (selector.nodeType || selector === window || selector === document) {\n          return [selector];\n        }\n\n        // Array of elements\n        else if (selector.length > 0 && selector[0].nodeType) {\n            return $.toArray(selector);\n          }\n\n      return [];\n    };\n\n    /**\n     * 获取含指定 css 的直接子元素数组\n     * @param dom\n     * @param selector\n     * @returns {Array}\n     */\n    $.children = function (dom, selector) {\n      var children = [];\n      var childNodes = dom.childNodes;\n\n      if (!selector) {\n        return $.toArray(childNodes);\n      }\n\n      for (var i = 0; i < childNodes.length; i++) {\n        if (childNodes[i].nodeType === 1 && $.is(childNodes[i], selector)) {\n          children.push(childNodes[i]);\n        }\n      }\n\n      return children.length ? children : null;\n    };\n\n    /**\n     * 获取含指定 css 的第一个直接子元素\n     * @param dom\n     * @param selector\n     * @returns {*}\n     */\n    $.child = function (dom, selector) {\n      var childNodes = dom.childNodes;\n\n      if (!selector) {\n        return childNodes[0];\n      }\n\n      for (var i = 0; i < childNodes.length; i++) {\n        if (childNodes[i].nodeType === 1 && $.is(childNodes[i], selector)) {\n          return childNodes[i];\n        }\n      }\n\n      return null;\n    };\n\n    /**\n     * 移除 dom 元素\n     * @param dom\n     */\n    $.remove = function (dom) {\n      if (dom) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n\n    /**\n     * 移除 dom 元素中所有的子元素\n     * @param dom\n     */\n    $.empty = function (dom) {\n      if (!dom) {\n        return;\n      }\n\n      if (dom.nodeType !== 1) {\n        return;\n      }\n\n      for (var i = 0; i < dom.childNodes.length; i++) {\n        $.remove(dom.childNodes[i]);\n      }\n\n      dom.textContent = '';\n    };\n\n    /**\n     * 把 newChild 添加到 dom 元素内的最前面\n     * @param dom\n     * @param newChild\n     */\n    $.prepend = function (dom, newChild) {\n      dom.insertBefore(newChild, dom.childNodes[0]);\n    };\n\n    /**\n     * Dom 加载完毕后\n     * @param fn\n     */\n    $.ready = function (fn) {\n      document.addEventListener('DOMContentLoaded', function () {\n        fn();\n      });\n    };\n\n    /**\n     * 解析 DATA API 参数\n     * @param str\n     * @returns {{}}\n     */\n    $.parseOptions = function (str) {\n      var options = {};\n\n      if (str === null || !str) {\n        return options;\n      }\n\n      if ((typeof str === 'undefined' ? 'undefined' : (0, _typeof3.default)(str)) === 'object') {\n        return str;\n      }\n\n      /* jshint ignore:start */\n      var start = str.indexOf('{');\n      try {\n        options = new Function('', 'var json = ' + str.substr(start) + '; return JSON.parse(JSON.stringify(json));')();\n      } catch (e) {}\n      /* jshint ignore:end */\n\n      return options;\n    };\n\n    /**\n     * 触发插件的事件\n     * @param eventName 事件名\n     * @param pluginName 插件名\n     * @param inst 插件实例\n     * @param trigger 在该元素上触发\n     * @param obj 事件参数\n     */\n    $.pluginEvent = function (eventName, pluginName, inst, trigger, obj) {\n      if (typeof obj === 'undefined') {\n        obj = {};\n      }\n\n      obj.inst = inst;\n\n      var fullEventName = eventName + '.mdui.' + pluginName;\n\n      // jQuery 事件\n      if (typeof jQuery !== 'undefined') {\n        jQuery(trigger).trigger(fullEventName, obj);\n      }\n\n      // 原生js事件\n      $.trigger(trigger, fullEventName, obj);\n    };\n  })();\n\n  /**\n   * =============================================================================\n   * ************   检测支持的特性   ************\n   * =============================================================================\n   */\n\n  (function () {\n    mdui.support = {\n      touch: !!('ontouchstart' in window)\n    };\n  })();\n\n  /**\n   * 触摸或鼠标事件\n   */\n  mdui.touchEvents = {\n    start: mdui.support.touch ? 'touchstart' : 'mousedown',\n    move: mdui.support.touch ? 'touchmove' : 'mousemove',\n    end: mdui.support.touch ? 'touchend' : 'mouseup'\n  };\n\n  /**\n   * 判断窗口大小\n   */\n  mdui.screen = {\n    xs: function xs() {\n      return window.innerWidth < 600;\n    },\n\n    sm: function sm() {\n      return window.innerWidth >= 600 && window.innerWidth < 1024;\n    },\n\n    md: function md() {\n      return window.innerWidth >= 1024 && window.innerWidth < 1440;\n    },\n\n    lg: function lg() {\n      return window.innerWidth >= 1440 && window.innerWidth < 1920;\n    },\n\n    xl: function xl() {\n      return window.innerWidth >= 1920;\n    },\n\n    xsDown: function xsDown() {\n      return window.innerWidth < 600;\n    },\n\n    smDown: function smDown() {\n      return window.innerWidth < 1024;\n    },\n\n    mdDown: function mdDown() {\n      return window.innerWidth < 1440;\n    },\n\n    lgDown: function lgDown() {\n      return window.innerWidth < 1920;\n    },\n\n    xlDown: function xlDown() {\n      return true;\n    },\n\n    xsUp: function xsUp() {\n      return true;\n    },\n\n    smUp: function smUp() {\n      return window.innerWidth >= 600;\n    },\n\n    mdUp: function mdUp() {\n      return window.innerWidth >= 1024;\n    },\n\n    lgUp: function lgUp() {\n      return window.innerWidth >= 1440;\n    },\n\n    xlUp: function xlUp() {\n      return window.innerWidth >= 1920;\n    }\n\n  };\n\n  /**\n   * 创建遮罩层并显示\n   * @param zIndex 遮罩层的 z_index\n   * @returns {Element}\n   */\n  mdui.showOverlay = function (zIndex) {\n    var overlay = $.dom('<div class=\"mdui-overlay\">')[0];\n    document.body.appendChild(overlay);\n\n    $.relayout(overlay);\n\n    if (typeof zIndex === 'undefined') {\n      zIndex = 2000;\n    }\n\n    overlay.style['z-index'] = zIndex;\n    overlay.classList.add('mdui-overlay-show');\n\n    return overlay;\n  };\n\n  /**\n   * 隐藏遮罩层\n   * @param overlay 指定遮罩层元素，若没有该参数，则移除所有遮罩层\n   */\n  mdui.hideOverlay = function (overlay) {\n    var overlays;\n    if (typeof overlay === 'undefined') {\n      overlays = $.queryAll('.mdui-overlay');\n    } else {\n      overlays = [overlay];\n    }\n\n    $.each(overlays, function (i, overlay) {\n      overlay.classList.remove('mdui-overlay-show');\n      $.transitionEnd(overlay, function () {\n        $.remove(overlay);\n      });\n    });\n  };\n\n  /**\n   * 锁定屏幕\n   */\n  mdui.lockScreen = function () {\n    var body = document.body;\n    var oldWindowWidth = body.clientWidth;\n\n    // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n    var oldBodyPaddingLeft = parseFloat($.getStyle(body, 'padding-left'));\n    var oldBodyPaddingRight = parseFloat($.getStyle(body, 'padding-right'));\n\n    document.body.classList.add('mdui-locked');\n    document.body.style.width = oldWindowWidth - oldBodyPaddingLeft - oldBodyPaddingRight + 'px';\n  };\n\n  /**\n   * 解除屏幕锁定\n   */\n  mdui.unlockScreen = function () {\n    document.body.classList.remove('mdui-locked');\n    document.body.style.width = '';\n  };\n\n  /**\n   * 函数节流\n   * @param fn\n   * @param delay\n   * @returns {Function}\n   */\n  mdui.throttle = function (fn, delay) {\n    var timer = null;\n\n    return function () {\n      var _this = this;\n      var args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          fn.apply(_this, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  };\n\n  /**\n   * 生成唯一 id\n   * @param pluginName 插件名，若传入该参数，guid 将以该参数作为前缀\n   * @returns {string}\n   */\n  mdui.guid = function (pluginName) {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    var guid = s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    if (pluginName) {\n      guid = 'mdui-' + pluginName + '-' + guid;\n    }\n\n    return guid;\n  };\n\n  $.ready(function () {\n    // 避免页面加载完后直接执行css动画\n    // https://css-tricks.com/transitions-only-after-page-load/\n\n    setTimeout(function () {\n      document.body.classList.add('mdui-loaded');\n    }, 0);\n\n    // 支持触摸时在 body 添加 mdui-support-touch\n    if (mdui.support.touch) {\n      document.body.classList.add('mdui-support-touch');\n    }\n  });\n\n  /**\n   * =============================================================================\n   * ************   Headroom.js   ************\n   * =============================================================================\n   */\n\n  mdui.Headroom = function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      tolerance: 5, // 滚动条滚动多少距离开始隐藏或显示元素，{down: num, up: num}，或数字\n      offset: 0, // 在页面顶部多少距离内滚动不会隐藏元素\n      initialClass: 'mdui-headroom', // 初始化时添加的类\n      pinnedClass: 'mdui-headroom-pinned-top', // 元素固定时添加的类\n      unpinnedClass: 'mdui-headroom-unpinned-top' };\n\n    /**\n     * Headroom\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n    function Headroom(selector, opts) {\n      var _this = this;\n\n      _this.headroom = $.dom(selector)[0];\n      if (typeof _this.headroom === 'undefined') {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.headroom, 'mdui.headroom');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, opts || {});\n\n      // 数值转为 {down: bum, up: num}\n      var tolerance = _this.options.tolerance;\n      if (tolerance !== Object(tolerance)) {\n        _this.options.tolerance = {\n          down: tolerance,\n          up: tolerance\n        };\n      }\n\n      _this._init();\n    }\n\n    /**\n     * 初始化\n     * @private\n     */\n    Headroom.prototype._init = function () {\n      var _this = this;\n\n      _this.state = 'pinned';\n      _this.headroom.classList.add(_this.options.initialClass);\n      _this.headroom.classList.remove(_this.options.pinnedClass, _this.options.unpinnedClass);\n\n      _this.inited = false;\n      _this.lastScrollY = 0;\n\n      _this._attachEvent();\n    };\n\n    /**\n     * 监听滚动事件\n     * @private\n     */\n    Headroom.prototype._attachEvent = function () {\n      var _this = this;\n\n      if (!_this.inited) {\n        _this.lastScrollY = window.pageYOffset;\n        _this.inited = true;\n        $.on(window, 'scroll', function () {\n          _this._scroll();\n        });\n      }\n    };\n\n    /**\n     * 滚动时的处理\n     * @private\n     */\n    Headroom.prototype._scroll = function () {\n      var _this = this;\n      _this.animationFrameId = $.requestAnimationFrame(function () {\n        var currentScrollY = window.pageYOffset;\n        var direction = currentScrollY > _this.lastScrollY ? 'down' : 'up';\n        var toleranceExceeded = Math.abs(currentScrollY - _this.lastScrollY) >= _this.options.tolerance[direction];\n\n        if (currentScrollY > _this.lastScrollY && currentScrollY >= _this.options.offset && toleranceExceeded) {\n          _this.unpin();\n        } else if (currentScrollY < _this.lastScrollY && toleranceExceeded || currentScrollY <= _this.options.offset) {\n          _this.pin();\n        }\n\n        _this.lastScrollY = currentScrollY;\n      });\n    };\n\n    /**\n     * 固定住\n     */\n    Headroom.prototype.pin = function () {\n      var _this = this;\n\n      if (_this.state === 'pinning' || _this.state === 'pinned' || !_this.headroom.classList.contains(_this.options.initialClass)) {\n        return;\n      }\n\n      _this.state = 'pinning';\n      _this.headroom.classList.remove(_this.options.unpinnedClass);\n      _this.headroom.classList.add(_this.options.pinnedClass);\n      $.pluginEvent('pin', 'headroom', _this, _this.headroom);\n\n      $.transitionEnd(_this.headroom, function () {\n        if (_this.state === 'pinning') {\n          _this.state = 'pinned';\n          $.pluginEvent('pinned', 'headroom', _this, _this.headroom);\n        }\n      });\n    };\n\n    /**\n     * 不固定住\n     */\n    Headroom.prototype.unpin = function () {\n      var _this = this;\n\n      if (_this.state === 'unpinning' || _this.state === 'unpinned' || !_this.headroom.classList.contains(_this.options.initialClass)) {\n        return;\n      }\n\n      _this.state = 'unpinning';\n      _this.headroom.classList.remove(_this.options.pinnedClass);\n      _this.headroom.classList.add(_this.options.unpinnedClass);\n      $.pluginEvent('unpin', 'headroom', _this, _this.headroom);\n\n      $.transitionEnd(_this.headroom, function () {\n        if (_this.state === 'unpinning') {\n          _this.state = 'unpinned';\n          $.pluginEvent('unpinned', 'headroom', _this, _this.headroom);\n        }\n      });\n    };\n\n    /**\n     * 启用\n     */\n    Headroom.prototype.enable = function () {\n      var _this = this;\n\n      if (!_this.inited) {\n        _this._init();\n      }\n    };\n\n    /**\n     * 禁用\n     */\n    Headroom.prototype.disable = function () {\n      var _this = this;\n\n      if (_this.inited) {\n        _this.inited = false;\n        _this.headroom.classList.remove(_this.options.initialClass, _this.options.pinnedClass, _this.options.unpinnedClass);\n        $.off(window, 'scroll', function () {\n          _this._scroll();\n        });\n\n        $.cancelAnimationFrame(_this.animationFrameId);\n      }\n    };\n\n    /**\n     * 获取当前状态 pinning | pinned | unpinning | unpinned\n     */\n    Headroom.prototype.getState = function () {\n      return this.state;\n    };\n\n    return Headroom;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Headroom 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    $.each($.queryAll('[mdui-headroom]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-headroom'));\n\n      var inst = $.data(target, 'mdui.headroom');\n      if (!inst) {\n        inst = new mdui.Headroom(target, options);\n        $.data(target, 'mdui.headroom', inst);\n      }\n    });\n  });\n\n  /**\n   * =============================================================================\n   * ************   供 Collapse、 Panel 调用的折叠内容块插件   ************\n   * =============================================================================\n   */\n  $.Collapse = function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      accordion: false };\n\n    // 类名\n    var CLASS = {\n      item: 'mdui-collapse-item', // item 类名\n      itemOpen: 'mdui-collapse-item-open', // 打开状态的 item\n      header: 'mdui-collapse-item-header', // item 中的 header 类名\n      body: 'mdui-collapse-item-body' };\n\n    // 命名空间\n    var NAMESPACE = 'collapse';\n\n    /**\n     * 折叠内容块\n     * @param selector\n     * @param opts\n     * @param classes\n     * @param namespace\n     * @constructor\n     */\n    function Collapse(selector, opts, classes, namespace) {\n      var _this = this;\n\n      _this.classes = $.extend(CLASS, classes || {});\n      _this.namespace = typeof namespace === 'undefined' || !namespace ? NAMESPACE : namespace;\n\n      // 折叠面板元素\n      _this.collapse = $.dom(selector)[0];\n      if (typeof _this.collapse === 'undefined') {\n        return;\n      }\n\n      _this.options = $.extend(DEFAULT, opts || {});\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.collapse, 'mdui.' + _this.namespace);\n      if (oldInst) {\n        return oldInst;\n      }\n\n      $.on(_this.collapse, 'click', '.' + _this.classes.header, function (e) {\n        var item = $.parent(this, '.' + _this.classes.item);\n        if ($.child(_this.collapse, item)) {\n          _this.toggle(item);\n        }\n      });\n    }\n\n    /**\n     * 指定 item 是否处于打开状态\n     * @param item\n     * @returns {boolean}\n     * @private\n     */\n    Collapse.prototype._isOpen = function (item) {\n      return item.classList.contains(this.classes.itemOpen);\n    };\n\n    /**\n     * 获取指定 item\n     * @param item\n     * @returns {*}\n     * @private\n     */\n    Collapse.prototype._getItem = function (item) {\n      var _this = this;\n\n      if (parseInt(item) === item) {\n        var items = $.children(_this.collapse, '.' + _this.classes.item);\n        return items[item];\n      }\n\n      return $.dom(item)[0];\n    };\n\n    /**\n     * 打开指定面板项\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n    Collapse.prototype.open = function (item) {\n      var _this = this;\n      item = _this._getItem(item);\n\n      if (_this._isOpen(item)) {\n        return;\n      }\n\n      // 关闭其他项\n      if (_this.options.accordion) {\n        $.each($.children(_this.collapse, '.' + _this.classes.itemOpen), function (i, temp) {\n          if (temp !== item) {\n            _this.close(temp);\n          }\n        });\n      }\n\n      var content = $.child(item, '.' + _this.classes.body);\n      content.style.height = content.scrollHeight + 'px';\n\n      $.transitionEnd(content, function () {\n        if (_this._isOpen(item)) {\n          $.transition(content, 0);\n          content.style.height = 'auto';\n          $.relayout(content);\n          $.transition(content, '');\n          $.pluginEvent('opened', _this.namespace, _this, item);\n        } else {\n          content.style.height = '';\n        }\n      });\n\n      $.pluginEvent('open', _this.namespace, _this, item);\n      item.classList.add(_this.classes.itemOpen);\n    };\n\n    /**\n     * 关闭指定项\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n    Collapse.prototype.close = function (item) {\n      var _this = this;\n      item = _this._getItem(item);\n\n      if (!_this._isOpen(item)) {\n        return;\n      }\n\n      var content = $.child(item, '.' + _this.classes.body);\n      item.classList.remove(_this.classes.itemOpen);\n      $.transition(content, 0);\n      content.style.height = content.scrollHeight + 'px';\n      $.relayout(content);\n\n      $.transition(content, '');\n      content.style.height = '';\n      $.pluginEvent('close', _this.namespace, _this, item);\n\n      $.transitionEnd(content, function () {\n        if (_this._isOpen(item)) {\n          $.transition(content, 0);\n          content.style.height = 'auto';\n          $.relayout(content);\n          $.transition(content, '');\n        } else {\n          content.style.height = '';\n          $.pluginEvent('closed', _this.namespace, _this, item);\n        }\n      });\n    };\n\n    /**\n     * 切换指定项的状态\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n    Collapse.prototype.toggle = function (item) {\n      var _this = this;\n      item = _this._getItem(item);\n\n      if (_this._isOpen(item)) {\n        _this.close(item);\n      } else {\n        _this.open(item);\n      }\n    };\n\n    /**\n     * 打开所有项\n     */\n    Collapse.prototype.openAll = function () {\n      var _this = this;\n\n      $.each($.children(_this.collapse, '.' + _this.classes.item), function (i, item) {\n        if (!_this._isOpen(item)) {\n          _this.open(item);\n        }\n      });\n    };\n\n    /**\n     * 关闭所有项\n     */\n    Collapse.prototype.closeAll = function () {\n      var _this = this;\n\n      $.each($.children(_this.collapse, '.' + _this.classes.item), function (i, item) {\n        if (_this._isOpen(item)) {\n          _this.close(item);\n        }\n      });\n    };\n\n    return Collapse;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Collapse 折叠内容块插件   ************\n   * =============================================================================\n   */\n  mdui.Collapse = function () {\n\n    function Collapse(selector, opts) {\n      return new $.Collapse(selector, opts);\n    }\n\n    return Collapse;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Collapse 自定义属性   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // 实例化插件\n    $.each($.queryAll('[mdui-collapse]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-collapse'));\n\n      var inst = $.data(target, 'mdui.collapse');\n      if (!inst) {\n        inst = new mdui.Collapse(target, options);\n        $.data(target, 'mdui.collapse', inst);\n      }\n    });\n  });\n\n  /**\n   * =============================================================================\n   * ************   Table 表格   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 生成 checkbox 的 HTML 结构\n     * @param tag\n     * @returns {string}\n     */\n    var checkboxHTML = function checkboxHTML(tag) {\n      return '<' + tag + ' class=\"mdui-table-cell-checkbox\">' + '<label class=\"mdui-checkbox\">' + '<input type=\"checkbox\"/>' + '<i class=\"mdui-checkbox-icon\"></i>' + '</label>' + '</' + tag + '>';\n    };\n\n    /**\n     * Table 表格\n     * @param selector\n     * @constructor\n     */\n    function Table(selector) {\n      var _this = this;\n      _this.table = $.dom(selector)[0];\n      _this.init();\n    }\n\n    /**\n     * 初始化\n     */\n    Table.prototype.init = function () {\n      var _this = this;\n\n      _this.thRow = $.query('thead tr', _this.table);\n      _this.tdRows = $.queryAll('tbody tr', _this.table);\n      _this.tdCheckboxs = [];\n      _this.selectable = _this.table.classList.contains('mdui-table-selectable');\n\n      _this.updateTdCheckbox();\n      _this.updateThCheckbox();\n      _this.updateNumericCol();\n    };\n\n    /**\n     * 更新表格行的 checkbox\n     */\n    Table.prototype.updateTdCheckbox = function () {\n      var _this = this;\n      var td;\n      var tdCheckbox;\n      _this.tdCheckboxs = [];\n\n      $.each(_this.tdRows, function (i, tdRow) {\n        // 移除旧的 checkbox\n        tdCheckbox = $.query('.mdui-table-cell-checkbox', tdRow);\n        if (tdCheckbox) {\n          $.remove(tdCheckbox);\n        }\n\n        // 创建新的 checkbox\n        if (_this.selectable) {\n          // 创建 DOM\n          td = $.dom(checkboxHTML('td'))[0];\n          $.prepend(tdRow, td);\n\n          var checkbox = $.query('input[type=\"checkbox\"]', td);\n\n          // 默认选中的行\n          if (tdRow.classList.contains('mdui-table-row-selected')) {\n            checkbox.checked = true;\n          }\n\n          // 绑定事件\n          $.on(checkbox, 'change', function () {\n            tdRow.classList[checkbox.checked ? 'add' : 'remove']('mdui-table-row-selected');\n          });\n\n          _this.tdCheckboxs.push(checkbox);\n        }\n      });\n    };\n\n    /**\n     * 更新表头的 checkbox\n     */\n    Table.prototype.updateThCheckbox = function () {\n      var _this = this;\n      var thCheckbox;\n\n      // 移除旧的 checkbox\n      thCheckbox = $.query('.mdui-table-cell-checkbox', _this.thRow);\n      if (thCheckbox) {\n        $.remove(thCheckbox);\n      }\n\n      if (!_this.selectable) {\n        return;\n      }\n\n      // 创建 DOM\n      var th = $.dom(checkboxHTML('th'))[0];\n      $.prepend(_this.thRow, th);\n\n      // 绑定事件\n      thCheckbox = $.query('input[type=\"checkbox\"]', th);\n      $.on(thCheckbox, 'change', function () {\n\n        $.each(_this.tdCheckboxs, function (i, checkbox) {\n          checkbox.checked = thCheckbox.checked;\n        });\n\n        $.each(_this.tdRows, function (i, row) {\n          row.classList[thCheckbox.checked ? 'add' : 'remove']('mdui-table-row-selected');\n        });\n      });\n    };\n\n    /**\n     * 更新数值列\n     */\n    Table.prototype.updateNumericCol = function () {\n      var _this = this;\n\n      var ths = $.queryAll('th', _this.thRow);\n      $.each(ths, function (i, th) {\n        $.each(_this.tdRows, function (j, tdRow) {\n          var method = th.classList.contains('mdui-table-col-numeric') ? 'add' : 'remove';\n          var td = $.queryAll('td', tdRow)[i];\n          if (td) {\n            td.classList[method]('mdui-table-col-numeric');\n          }\n        });\n      });\n    };\n\n    $.ready(function () {\n      // 实例化表格\n      var tables = $.queryAll('.mdui-table');\n      $.each(tables, function (i, table) {\n        var inst = new Table(table);\n        $.data(table, 'mdui.table', inst);\n      });\n    });\n\n    /**\n     * 更新表格\n     */\n    mdui.updateTables = function () {\n      var tables;\n\n      if (arguments.length === 1) {\n        tables = $.dom(arguments[0]);\n      } else {\n        tables = $.queryAll('.mdui-table');\n      }\n\n      $.each(tables, function (i, table) {\n        var inst = $.data(table, 'mdui.table');\n        inst.init();\n      });\n    };\n  })();\n\n  /**\n   * =============================================================================\n   * ************   涟漪   ************\n   * =============================================================================\n   *\n   * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n   * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n   *\n   * Inspired by https://github.com/fians/Waves\n   */\n\n  (function () {\n\n    var Ripple = {\n\n      /**\n       * 显示涟漪动画\n       * @param e\n       * @param element\n       */\n      show: function show(e, element) {\n\n        // 鼠标右键不产生涟漪\n        if (e.button === 2) {\n          return;\n        }\n\n        // 点击位置坐标\n        var tmp;\n        if ('touches' in e && e.touches.length) {\n          tmp = e.touches[0];\n        } else {\n          tmp = e;\n        }\n\n        var touchStartX = tmp.pageX;\n        var touchStartY = tmp.pageY;\n\n        // 涟漪位置\n        var box = element.getBoundingClientRect();\n        var offset = $.offset(element);\n        var center = {\n          x: touchStartX - offset.left,\n          y: touchStartY - offset.top\n        };\n\n        var height = box.height;\n        var width = box.width;\n        var diameter = Math.max(Math.pow(Math.pow(height, 2) + Math.pow(width, 2), 0.5), 48);\n\n        // 涟漪扩散动画\n        var translate = 'translate3d(' + (-center.x + width / 2) + 'px, ' + (-center.y + height / 2) + 'px, 0) ' + 'scale(1)';\n\n        // 涟漪的 DOM 结构\n        var ripple = $.dom('<div class=\"mdui-ripple-wave\" style=\"' + 'width: ' + diameter + 'px; ' + 'height: ' + diameter + 'px; ' + 'margin-top:-' + diameter / 2 + 'px; ' + 'margin-left:-' + diameter / 2 + 'px; ' + 'left:' + center.x + 'px; ' + 'top:' + center.y + 'px;\">' + '</div>')[0];\n\n        // 缓存动画效果\n        $.data(ripple, {\n          translate: translate\n        });\n\n        $.prepend(element, ripple);\n        $.relayout(ripple);\n        $.transform(ripple, translate);\n      },\n\n      /**\n       * 隐藏涟漪动画\n       * @param e\n       * @param element\n       */\n      hide: function hide(e, element) {\n        element = element || this;\n\n        var ripples = $.children(element, '.mdui-ripple-wave');\n\n        $.each(ripples, function (i, ripple) {\n          removeRipple(ripple);\n        });\n\n        if (mdui.support.touch) {\n          $.off(element, 'touchmove touchend touchcancel', Ripple.hide);\n        }\n\n        $.off(element, 'mousemove mouseup mouseleave', Ripple.hide);\n      }\n    };\n\n    /**\n     * 隐藏并移除涟漪\n     * @param ripple\n     */\n    function removeRipple(ripple) {\n      if (!ripple || $.data(ripple, 'isRemoved')) {\n        return;\n      }\n\n      $.data(ripple, 'isRemoved', true);\n\n      var removeTimeout = setTimeout(function () {\n        $.remove(ripple);\n      }, 400);\n\n      ripple.classList.add('mdui-ripple-wave-fill');\n      var translate = $.data(ripple, 'translate');\n      $.transform(ripple, translate.replace('scale(1)', 'scale(1.01)'));\n      $.transitionEnd(ripple, function (e) {\n        clearTimeout(removeTimeout);\n\n        var ripple = e.target;\n        ripple.classList.add('mdui-ripple-wave-out');\n        $.transform(ripple, translate.replace('scale(1)', 'scale(1.01)'));\n\n        removeTimeout = setTimeout(function () {\n          $.remove(ripple);\n        }, 700);\n\n        setTimeout(function () {\n          $.transitionEnd(ripple, function (e) {\n            clearTimeout(removeTimeout);\n            $.remove(e.target);\n          });\n        }, 0);\n      });\n    }\n\n    /**\n     * touch 事件后的 500ms 内禁用 mousedown 事件\n     */\n    var TouchHandler = {\n      touches: 0,\n\n      allowEvent: function allowEvent(e) {\n        var allow = true;\n\n        if (e.type === 'mousedown' && TouchHandler.touches) {\n          allow = false;\n        }\n\n        return allow;\n      },\n\n      registerEvent: function registerEvent(e) {\n        var eType = e.type;\n\n        if (eType === 'touchstart') {\n          TouchHandler.touches += 1;\n        } else if (['touchmove', 'touchend', 'touchcancel'].indexOf(eType) > -1) {\n          setTimeout(function () {\n            if (TouchHandler.touches) {\n              TouchHandler.touches -= 1;\n            }\n          }, 500);\n        }\n      }\n    };\n\n    /**\n     * 找到含 .mdui-ripple 类的元素\n     * @param e\n     * @returns {*}\n     */\n    function getRippleElement(e) {\n      if (TouchHandler.allowEvent(e) === false) {\n        return null;\n      }\n\n      var element = null;\n      var target = e.target;\n      var rippleParents;\n\n      if (target.classList.contains('mdui-ripple')) {\n        element = target;\n      } else {\n        rippleParents = $.parents(target, '.mdui-ripple');\n        if (rippleParents.length) {\n          element = rippleParents[0];\n        }\n      }\n\n      return element;\n    }\n\n    /**\n     * 显示涟漪，并绑定 touchend 等事件\n     * @param e\n     */\n    function showRipple(e) {\n      var element = getRippleElement(e);\n\n      if (element !== null) {\n\n        // 禁用状态的元素上不产生涟漪效果\n        if (element.disabled || element.getAttribute('disabled')) {\n          return;\n        }\n\n        TouchHandler.registerEvent(e);\n\n        Ripple.show(e, element);\n\n        if (mdui.support.touch) {\n          $.on(element, 'touchmove touchend touchcancel', Ripple.hide);\n        }\n\n        $.on(element, 'mousemove mouseup mouseleave', Ripple.hide);\n      }\n    }\n\n    // 初始化绑定的事件\n    if (mdui.support.touch) {\n      $.on(document, 'touchstart', showRipple);\n      $.on(document, 'touchmove touchend touchcancel', TouchHandler.registerEvent);\n    }\n\n    $.on(document, 'mousedown', showRipple);\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Text Field 文本框   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    var notInputs = ['checkbox', 'button', 'submit', 'range', 'radio', 'image'];\n\n    var classNames = {\n      field: 'mdui-textfield',\n      input: 'mdui-textfield-input',\n      focus: 'mdui-textfield-focus',\n      notEmpty: 'mdui-textfield-not-empty',\n      disabled: 'mdui-textfield-disabled',\n      invalid: 'mdui-textfield-invalid',\n      expanded: 'mdui-textfield-expanded'\n    };\n\n    /**\n     * 输入框事件\n     * @param e\n     */\n    var inputEvent = function inputEvent(e) {\n      var input = e.target;\n      var event = e.type;\n      var value = input.value;\n\n      // reInit 为 true 时，需要重新初始化文本框\n      var reInit;\n      if ((0, _typeof3.default)(e.detail) === 'object' && typeof e.detail.reInit !== 'undefined' && e.detail.reInit) {\n        reInit = e.detail.reInit;\n      } else {\n        reInit = false;\n      }\n\n      // domLoadedEvent 为 true 时，为 DOM 加载完毕后自动触发的事件\n      var domLoadedEvent;\n      if ((0, _typeof3.default)(e.detail) === 'object' && typeof e.detail.domLoadedEvent !== 'undefined' && e.detail.domLoadedEvent) {\n        domLoadedEvent = e.detail.domLoadedEvent;\n      } else {\n        domLoadedEvent = false;\n      }\n\n      // 文本框类型\n      var type = input.getAttribute('type') || '';\n      if (notInputs.indexOf(type) >= 0) {\n        return;\n      }\n\n      var textField = $.parents(input, '.' + classNames.field)[0];\n\n      // 输入框是否聚焦\n      if (event === 'focus') {\n        textField.classList.add(classNames.focus);\n      }\n\n      if (event === 'blur') {\n        textField.classList.remove(classNames.focus);\n      }\n\n      // 输入框是否为空\n      if (event === 'blur' || event === 'input') {\n        if (value && value !== '') {\n          textField.classList.add(classNames.notEmpty);\n        } else {\n          textField.classList.remove(classNames.notEmpty);\n        }\n      }\n\n      // 输入框是否禁用\n      if (input.disabled) {\n        textField.classList.add(classNames.disabled);\n      } else {\n        textField.classList.remove(classNames.disabled);\n      }\n\n      // 表单验证\n      if ((event === 'input' || event === 'blur') && !domLoadedEvent) {\n        if (input.validity) {\n          if (input.validity.valid) {\n            textField.classList.remove(classNames.invalid);\n          } else {\n            textField.classList.add(classNames.invalid);\n          }\n        }\n      }\n\n      // textarea 高度自动调整\n      if (e.target.nodeName.toLowerCase() === 'textarea') {\n        input.style.height = '';\n        var height = input.offsetHeight;\n        var diff = height - input.clientHeight;\n        var scrollHeight = input.scrollHeight;\n\n        if (scrollHeight + diff > height) {\n          var newAreaHeight = scrollHeight + diff;\n          input.style.height = newAreaHeight + 'px';\n        }\n      }\n\n      // 实时字数统计\n      var counter;\n      if (reInit) {\n        textField.classList.remove('mdui-textfield-has-counter');\n        counter = $.query('.mdui-textfield-counter', textField);\n        if (counter) {\n          $.remove(counter);\n        }\n      }\n\n      var maxlength = input.getAttribute('maxlength');\n      if (maxlength) {\n        if (reInit || domLoadedEvent) {\n          counter = $.dom('<div class=\"mdui-textfield-counter\">' + '<span class=\"mdui-textfield-counter-inputed\"></span> / ' + maxlength + '</div>')[0];\n          textField.appendChild(counter);\n\n          // 如果没有 .mdui-textfield-error 作为占位，需要增加 .mdui-textfield 的下边距，\n          // 使 .mdui-textfield-counter 不会覆盖在文本框上\n          if (!$.query('.mdui-textfield-error', textField)) {\n            textField.classList.add('mdui-textfield-has-counter');\n          }\n        }\n\n        // 字符长度，确保统计方式和 maxlength 一致\n        var inputed = input.value.length + input.value.split('\\n').length - 1;\n        $.query('.mdui-textfield-counter-inputed', textField).innerText = inputed.toString();\n      }\n    };\n\n    // 绑定事件\n    var inputSelector = '.' + classNames.field + ' input, .' + classNames.field + ' textarea';\n    $.on(document, 'input focus blur', inputSelector, inputEvent, true);\n\n    // 可展开文本框展开\n    $.on(document, 'click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n      var _this = this;\n      var textField = $.parents(_this, '.' + classNames.field)[0];\n      var input = $.query('.' + classNames.input, textField);\n\n      textField.classList.add(classNames.expanded);\n      input.focus();\n    });\n\n    // 可展开文本框关闭\n    $.on(document, 'click', '.mdui-textfield-expandable .mdui-textfield-close', function () {\n      var _this = this;\n      var textField = $.parents(_this, '.' + classNames.field)[0];\n      var input = $.query('.' + classNames.input, textField);\n\n      textField.classList.remove(classNames.expanded);\n      input.value = '';\n    });\n\n    /**\n     * 通过 JS 更新了表单内容，需要重新进行表单处理\n     * @param dom 如果传入了 .mdui-textfield 所在的 DOM 元素，则更新该文本框；否则，更新所有文本框\n     */\n    mdui.updateTextFields = function () {\n      var textfields;\n      var input;\n\n      if (arguments.length === 1) {\n        textfields = $.dom(arguments[0]);\n      } else {\n        textfields = $.queryAll('.mdui-textfield');\n      }\n\n      $.each(textfields, function (i, textfield) {\n        input = $.query('.mdui-textfield-input', textfield);\n        if (input) {\n          $.trigger(input, 'input', {\n            reInit: true\n          });\n        }\n      });\n    };\n\n    $.ready(function () {\n\n      // DOM 加载完后自动执行\n      $.each($.queryAll('.mdui-textfield-input'), function (i, input) {\n        $.trigger(input, 'input', {\n          domLoadedEvent: true\n        });\n      });\n    });\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Slider 滑块   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 滑块的值变更后修改滑块样式\n     * @param slider\n     */\n    var updateValueStyle = function updateValueStyle(slider) {\n      var track = $.data(slider, 'track');\n      var fill = $.data(slider, 'fill');\n      var thumb = $.data(slider, 'thumb');\n      var input = $.data(slider, 'input');\n      var min = $.data(slider, 'min');\n      var max = $.data(slider, 'max');\n      var isDisabled = $.data(slider, 'disabled');\n      var isDiscrete = $.data(slider, 'discrete');\n      var thumbText = $.data(slider, 'thumbText');\n      var percent = (input.value - min) / (max - min) * 100;\n\n      fill.style.width = percent + '%';\n      track.style.width = 100 - percent + '%';\n\n      if (isDisabled) {\n        fill.style['padding-right'] = '6px';\n        track.style['padding-left'] = '6px';\n      }\n\n      thumb.style.left = percent + '%';\n\n      if (isDiscrete) {\n        thumbText.textContent = input.value;\n      }\n\n      slider.classList[parseFloat(percent) === 0 ? 'add' : 'remove']('mdui-slider-zero');\n    };\n\n    /**\n     * 重新初始化\n     * @param slider\n     */\n    var reInit = function reInit(slider) {\n      var track = $.dom('<div class=\"mdui-slider-track\"></div>')[0];\n      var fill = $.dom('<div class=\"mdui-slider-fill\"></div>')[0];\n      var thumb = $.dom('<div class=\"mdui-slider-thumb\"></div>')[0];\n      var input = $.query('input[type=\"range\"]', slider);\n\n      // 禁用状态\n      var isDisabled = input.disabled;\n      slider.classList[isDisabled ? 'add' : 'remove']('mdui-slider-disabled');\n\n      // 重新填充 HTML\n      $.remove($.query('.mdui-slider-track', slider));\n      slider.appendChild(track);\n\n      $.remove($.query('.mdui-slider-fill', slider));\n      slider.appendChild(fill);\n\n      $.remove($.query('.mdui-slider-thumb', slider));\n      slider.appendChild(thumb);\n\n      // 间续型滑块\n      var isDiscrete = slider.classList.contains('mdui-slider-discrete');\n\n      var thumbText;\n      if (isDiscrete) {\n        thumbText = $.dom('<span></span>')[0];\n\n        $.empty(thumb);\n        thumb.appendChild(thumbText);\n      }\n\n      $.data(slider, {\n        track: track,\n        fill: fill,\n        thumb: thumb,\n        input: input,\n        min: input.getAttribute('min'), // 滑块最小值\n        max: input.getAttribute('max'), // 滑块最大值\n        disabled: isDisabled, // 是否禁用状态\n        discrete: isDiscrete, // 是否是间续型滑块\n        thumbText: thumbText });\n\n      // 设置默认值\n      updateValueStyle(slider);\n    };\n\n    /**\n     * 滑动滑块事件\n     */\n    $.on(document, 'input change', '.mdui-slider input[type=\"range\"]', function () {\n      var slider = $.parent(this, '.mdui-slider');\n      updateValueStyle(slider);\n    });\n\n    /**\n     * 开始触摸滑块事件\n     */\n    $.on(document, mdui.touchEvents.start, '.mdui-slider input[type=\"range\"]', function () {\n      var slider = $.parent(this, '.mdui-slider');\n      if (!this.disabled) {\n        slider.classList.add('mdui-slider-focus');\n      }\n    });\n\n    /**\n     * 结束触摸滑块事件\n     */\n    $.on(document, mdui.touchEvents.end, '.mdui-slider input[type=\"range\"]', function () {\n      var slider = $.parent(this, '.mdui-slider');\n      if (!this.disabled) {\n        slider.classList.remove('mdui-slider-focus');\n      }\n    });\n\n    /**\n     * 页面加载完后自动初始化\n     */\n    $.ready(function () {\n      var sliders = $.queryAll('.mdui-slider');\n      $.each(sliders, function (i, slider) {\n        reInit(slider);\n      });\n    });\n\n    /**\n     * 重新初始化滑块\n     */\n    mdui.updateSliders = function () {\n      var sliders;\n\n      if (arguments.length === 1) {\n        sliders = $.dom(arguments[0]);\n      } else {\n        sliders = $.queryAll('.mdui-slider');\n      }\n\n      $.each(sliders, function (i, slider) {\n        reInit(slider);\n      });\n    };\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Fab 浮动操作按钮   ************\n   * =============================================================================\n   */\n\n  mdui.Fab = function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      trigger: 'hover' };\n\n    /**\n     * 浮动操作按钮实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n    function Fab(selector, opts) {\n      var _this = this;\n\n      _this.fab = $.dom(selector)[0];\n      if (typeof _this.fab === 'undefined') {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.fab, 'mdui.fab');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, opts || {});\n      _this.state = 'closed';\n\n      _this.btn = $.child(_this.fab, '.mdui-fab');\n      _this.dial = $.child(_this.fab, '.mdui-fab-dial');\n      _this.dialBtns = $.queryAll('.mdui-fab', _this.dial);\n\n      // 支持 touch 时，始终在 touchstart 时切换，不受 trigger 参数影响\n      if (mdui.support.touch) {\n        $.on(_this.btn, 'touchstart', function () {\n          _this.open();\n        });\n\n        $.on(document, 'touchend', function (e) {\n          if (!$.parents(e.target, '.mdui-fab-wrapper').length) {\n            _this.close();\n          }\n        });\n      }\n\n      // 不支持touch\n      else {\n\n          // 点击切换\n          if (_this.options.trigger === 'click') {\n            $.on(_this.btn, 'click', function () {\n              _this.toggle();\n            });\n          }\n\n          // 鼠标悬浮切换\n          if (_this.options.trigger === 'hover') {\n            $.on(_this.fab, 'mouseenter', function () {\n              _this.open();\n            });\n\n            $.on(_this.fab, 'mouseleave', function () {\n              _this.close();\n            });\n          }\n        }\n    }\n\n    /**\n     * 打开菜单\n     */\n    Fab.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 为菜单中的按钮添加不同的 transition-delay\n      $.each(_this.dialBtns, function (index, btn) {\n        btn.style['transition-delay'] = 15 * (_this.dialBtns.length - index) + 'ms';\n      });\n\n      _this.dial.classList.add('mdui-fab-dial-show');\n\n      // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n      if ($.query('.mdui-fab-opened', _this.btn)) {\n        _this.btn.classList.add('mdui-fab-opened');\n      }\n\n      _this.state = 'opening';\n      $.pluginEvent('open', 'fab', _this, _this.fab);\n\n      // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n      $.transitionEnd(_this.dialBtns[0], function () {\n        if (_this.btn.classList.contains('mdui-fab-opened')) {\n          _this.state = 'opened';\n          $.pluginEvent('opened', 'fab', _this, _this.fab);\n        }\n      });\n    };\n\n    /**\n     * 关闭菜单\n     */\n    Fab.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      // 为菜单中的按钮添加不同的 transition-delay\n      $.each(_this.dialBtns, function (index, btn) {\n        btn.style['transition-delay'] = 15 * index + 'ms';\n      });\n\n      _this.dial.classList.remove('mdui-fab-dial-show');\n      _this.btn.classList.remove('mdui-fab-opened');\n      _this.state = 'closing';\n      $.pluginEvent('close', 'fab', _this, _this.fab);\n\n      // 从上往下依次关闭，最后一个关闭后才表示动画完成\n      $.transitionEnd(_this.dialBtns[_this.dialBtns.length - 1], function () {\n        if (!_this.btn.classList.contains('mdui-fab-opened')) {\n          _this.state = 'closed';\n          $.pluginEvent('closed', 'fab', _this, _this.fab);\n        }\n      });\n    };\n\n    /**\n     * 切换菜单的打开状态\n     */\n    Fab.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取当前菜单状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Fab.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 以动画的形式显示浮动操作按钮\n     */\n    Fab.prototype.show = function () {\n      this.fab.classList.remove('mdui-fab-hide');\n    };\n\n    /**\n     * 以动画的形式隐藏浮动操作按钮\n     */\n    Fab.prototype.hide = function () {\n      this.fab.classList.add('mdui-fab-hide');\n    };\n\n    return Fab;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Fab DATA API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n    // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n    var event = mdui.support.touch ? 'touchstart' : 'click mouseover';\n\n    $.on(document, event, '[mdui-fab]', function (e) {\n      var _this = this;\n      var eventType = e.type;\n\n      var inst = $.data(_this, 'mdui.fab');\n      if (!inst) {\n        var options = $.parseOptions(_this.getAttribute('mdui-fab'));\n        inst = new mdui.Fab(_this, options);\n        $.data(_this, 'mdui.fab', inst);\n\n        // 判断当前事件\n        if (eventType === 'touchstart') {\n          inst.open();\n        } else if (inst.options.trigger === 'click' && eventType === 'click' || inst.options.trigger === 'hover' && eventType === 'mouseover') {\n          inst.open();\n        }\n      }\n    });\n  });\n\n  /**\n   * =============================================================================\n   * ************   Appbar   ************\n   * =============================================================================\n   * 滚动时自动隐藏应用栏\n   * mdui-appbar-scroll-hide\n   * mdui-appbar-scroll-toolbar-hide\n   */\n\n  $.ready(function () {\n\n    // 滚动时隐藏应用栏\n    $.each($.queryAll('.mdui-appbar-scroll-hide'), function (i, appbar) {\n      $.data(appbar, 'mdui.headroom', new mdui.Headroom(appbar));\n    });\n\n    // 滚动时只隐藏应用栏中的工具栏\n    $.each($.queryAll('.mdui-appbar-scroll-toolbar-hide'), function (i, appbar) {\n      var inst = new mdui.Headroom('.mdui-appbar-scroll-toolbar-hide', {\n        pinnedClass: 'mdui-headroom-pinned-toolbar',\n        unpinnedClass: 'mdui-headroom-unpinned-toolbar'\n      });\n      $.data(appbar, 'mdui.headroom', inst);\n    });\n  });\n\n  /**\n   * =============================================================================\n   * ************   Tab   ************\n   * =============================================================================\n   */\n\n  mdui.Tab = function () {\n\n    var DEFAULT = {\n      trigger: 'click', // 触发方式 click: 鼠标点击切换 hover: 鼠标悬浮切换\n      //animation: false,       // 切换时是否显示动画\n      loop: false };\n\n    /**\n     * 选项卡\n     * @param selector\n     * @param opts\n     * @returns {*}\n     * @constructor\n     */\n    function Tab(selector, opts) {\n      var _this = this;\n      var trigger;\n\n      _this.tab = $.dom(selector)[0];\n      if (typeof _this.tab === 'undefined') {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.tab, 'mdui.tab');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, opts || {});\n      _this.tabs = $.children(_this.tab, 'a');\n\n      _this.indicator = $.dom('<div class=\"mdui-tab-indicator\"></div>')[0];\n\n      // 选项卡下面添加的指示符\n      _this.tab.appendChild(_this.indicator);\n\n      // 触发方式\n      if (mdui.support.touch) {\n        trigger = 'touchend';\n      } else if (_this.options.trigger === 'hover') {\n        trigger = 'mouseenter';\n      } else {\n        trigger = 'click';\n      }\n\n      // 根据 url hash 获取默认激活的选项卡\n      var hash = location.hash;\n      if (hash) {\n        $.each(_this.tabs, function (i, tab) {\n          if (tab.getAttribute('href') === hash) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      // 含 mdui-tab-active 的元素默认激活\n      if (typeof _this.activeIndex === 'undefined') {\n        $.each(_this.tabs, function (i, tab) {\n          if (tab.classList.contains('mdui-tab-active')) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      // 默认激活第一个选项卡\n      if (typeof _this.activeIndex === 'undefined') {\n        _this.activeIndex = 0;\n      }\n\n      // 设置激活状态选项卡\n      _this._setActive();\n\n      // 监听窗口大小变化事件，调整指示器位置\n      $.on(window, 'resize', mdui.throttle(function () {\n        _this._setIndicatorPosition();\n      }, 100));\n\n      // 监听点击选项卡事件\n      $.each(_this.tabs, function (i, tab) {\n        $.on(tab, trigger, function (e) {\n          if (tab.getAttribute('disabled') !== null) {\n            e.preventDefault();\n            return;\n          }\n\n          _this.activeIndex = i;\n          _this._setActive();\n        });\n\n        $.on(tab, 'click', function (e) {\n          // 阻止链接的默认点击动作\n          if (tab.getAttribute('href').indexOf('#') === 0) {\n            e.preventDefault();\n          }\n        });\n      });\n    }\n\n    /**\n     * 设置激活状态的选项卡\n     */\n    Tab.prototype._setActive = function () {\n      var _this = this;\n\n      $.each(_this.tabs, function (i, tab) {\n        var targetId = tab.getAttribute('href');\n        var targetContent;\n\n        if (tab.getAttribute('disabled') !== null) {\n          if (targetId.indexOf('#') === 0) {\n            targetContent = $.query(targetId);\n            if (targetContent) {\n              targetContent.style.display = 'none';\n            }\n          }\n\n          return;\n        }\n\n        // 选项卡激活状态\n        if (i === _this.activeIndex) {\n          $.pluginEvent('change', 'tab', _this, _this.tab, {\n            index: _this.activeIndex,\n            target: tab\n          });\n          $.pluginEvent('show', 'tab', _this, tab);\n\n          if (!tab.classList.contains('mdui-tab-active')) {\n            tab.classList.add('mdui-tab-active');\n          }\n        } else {\n          if (tab.classList.contains('mdui-tab-active')) {\n            tab.classList.remove('mdui-tab-active');\n          }\n        }\n\n        // 选项卡内容显示切换\n        if (targetId.indexOf('#') === 0) {\n          targetContent = $.query(targetId);\n          if (targetContent) {\n            if (i === _this.activeIndex) {\n              targetContent.style.display = 'block';\n            } else {\n              targetContent.style.display = 'none';\n            }\n          }\n        }\n      });\n\n      _this._setIndicatorPosition();\n    };\n\n    /**\n     * 设置选项卡指示器的位置\n     */\n    Tab.prototype._setIndicatorPosition = function () {\n      var _this = this;\n\n      var activeTab = _this.tabs[_this.activeIndex];\n      if (activeTab.getAttribute('disabled') !== null) {\n        return;\n      }\n\n      var activeTabOffset = $.offset(activeTab);\n      _this.indicator.style.left = activeTabOffset.left + _this.tab.scrollLeft - _this.tab.getBoundingClientRect().left + 'px';\n      _this.indicator.style.width = $.getStyle(activeTab, 'width');\n    };\n\n    /**\n     * 切换到下一个选项卡\n     */\n    Tab.prototype.next = function () {\n      var _this = this;\n\n      if (_this.tabs.length > _this.activeIndex + 1) {\n        _this.activeIndex++;\n      } else if (_this.options.loop) {\n        _this.activeIndex = 0;\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 切换到上一个选项卡\n     */\n    Tab.prototype.prev = function () {\n      var _this = this;\n\n      if (_this.activeIndex > 0) {\n        _this.activeIndex--;\n      } else if (_this.options.loop) {\n        _this.activeIndex = _this.tabs.length - 1;\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 显示指定序号或指定id的选项卡\n     * @param index 从0开始的序号，或以#开头的id\n     */\n    Tab.prototype.show = function (index) {\n      var _this = this;\n\n      if (parseInt(index) === index) {\n        _this.activeIndex = index;\n      } else {\n        $.each(_this.tabs, function (i, tab) {\n          if (tab.id === index) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n     */\n    Tab.prototype.handleUpdate = function () {\n      this._setIndicatorPosition();\n    };\n\n    return Tab;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Tab 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // 实例化插件\n    $.each($.queryAll('[mdui-tab]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-tab'));\n\n      var inst = $.data(target, 'mdui.tab');\n      if (!inst) {\n        inst = new mdui.Tab(target, options);\n        $.data(target, 'mdui.tab', inst);\n      }\n    });\n  });\n\n  /**\n   * =============================================================================\n   * ************   Drawer 抽屉栏   ************\n   * =============================================================================\n   *\n   * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n   * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n   */\n\n  mdui.Drawer = function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      // 在桌面设备上是否显示遮罩层。手机和平板不受这个参数影响，始终会显示遮罩层\n      overlay: false\n    };\n\n    /**\n     * 抽屉栏实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n    function Drawer(selector, opts) {\n      var _this = this;\n\n      _this.drawer = $.dom(selector)[0];\n      if (typeof _this.drawer === 'undefined') {\n        return;\n      }\n\n      var oldInst = $.data(_this.drawer, 'mdui.drawer');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, opts || {});\n\n      _this.overlay = false; // 是否显示着遮罩层\n      _this.position = _this.drawer.classList.contains('mdui-drawer-right') ? 'right' : 'left';\n\n      if (_this.drawer.classList.contains('mdui-drawer-close')) {\n        _this.state = 'closed';\n      } else if (_this.drawer.classList.contains('mdui-drawer-open')) {\n        _this.state = 'opened';\n      } else if (mdui.screen.mdUp()) {\n        _this.state = 'opened';\n      } else {\n        _this.state = 'closed';\n      }\n\n      // 浏览器窗口大小调整时\n      $.on(window, 'resize', mdui.throttle(function () {\n        // 由手机平板切换到桌面时\n        if (mdui.screen.mdUp()) {\n          // 如果显示着遮罩，则隐藏遮罩\n          if (_this.overlay && !_this.options.overlay) {\n            mdui.hideOverlay();\n            _this.overlay = false;\n\n            mdui.unlockScreen();\n          }\n\n          // 没有强制关闭，则状态为打开状态\n          if (!_this.drawer.classList.contains('mdui-drawer-close')) {\n            _this.state = 'opened';\n          }\n        }\n\n        // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n        else {\n            if (!_this.overlay && _this.state === 'opened') {\n              // 抽屉栏处于强制打开状态，添加遮罩\n              if (_this.drawer.classList.contains('mdui-drawer-open')) {\n                mdui.showOverlay();\n                _this.overlay = true;\n\n                mdui.lockScreen();\n\n                $.one($.query('.mdui-overlay'), 'click', function () {\n                  _this.close();\n                });\n              } else {\n                _this.state = 'closed';\n              }\n            }\n          }\n      }, 100));\n\n      // 不支持 touch 的设备默认隐藏滚动条，鼠标移入时显示滚动条；支持 touch 的设备会自动隐藏滚动条\n      if (!mdui.support.touch) {\n        _this.drawer.style['overflow-y'] = 'hidden';\n        _this.drawer.classList.add('mdui-drawer-scrollbar');\n      }\n\n      // 绑定关闭按钮事件\n      var closes = $.queryAll('[mdui-drawer-close]', _this.drawer);\n      $.each(closes, function (i, close) {\n        $.on(close, 'click', function () {\n          _this.close();\n        });\n      });\n    }\n\n    /**\n     * 打开抽屉栏\n     */\n    Drawer.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.drawer.classList.remove('mdui-drawer-close');\n      _this.drawer.classList.add('mdui-drawer-open');\n\n      _this.state = 'opening';\n      $.pluginEvent('open', 'drawer', _this, _this.drawer);\n\n      if (!_this.options.overlay) {\n        document.body.classList.add('mdui-drawer-body-' + _this.position);\n      }\n\n      $.transitionEnd(_this.drawer, function () {\n        if (_this.drawer.classList.contains('mdui-drawer-open')) {\n          _this.state = 'opened';\n          $.pluginEvent('opened', 'drawer', _this, _this.drawer);\n        }\n      });\n\n      if (!mdui.screen.mdUp() || _this.options.overlay) {\n        mdui.showOverlay();\n        _this.overlay = true;\n\n        mdui.lockScreen();\n\n        $.one($.query('.mdui-overlay'), 'click', function () {\n          _this.close();\n        });\n      }\n    };\n\n    /**\n     * 关闭抽屉栏\n     */\n    Drawer.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.drawer.classList.add('mdui-drawer-close');\n      _this.drawer.classList.remove('mdui-drawer-open');\n      _this.state = 'closing';\n      $.pluginEvent('close', 'drawer', _this, _this.drawer);\n\n      if (!_this.options.overlay) {\n        document.body.classList.remove('mdui-drawer-body-' + _this.position);\n      }\n\n      $.transitionEnd(_this.drawer, function () {\n        if (!_this.drawer.classList.contains('mdui-drawer-open')) {\n          _this.state = 'closed';\n          $.pluginEvent('closed', 'drawer', _this, _this.drawer);\n        }\n      });\n\n      if (_this.overlay) {\n        mdui.hideOverlay();\n        _this.overlay = false;\n\n        mdui.unlockScreen();\n      }\n    };\n\n    /**\n     * 切换抽屉栏打开/关闭状态\n     */\n    Drawer.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取抽屉栏状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Drawer.prototype.getState = function () {\n      return this.state;\n    };\n\n    return Drawer;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Drawer 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // 实例化插件\n    $.each($.queryAll('[mdui-drawer]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-drawer'));\n      var selector = options.target;\n      delete options.target;\n\n      var drawer = $.dom(selector)[0];\n\n      var inst = $.data(drawer, 'mdui.drawer');\n      if (!inst) {\n        inst = new mdui.Drawer(drawer, options);\n        $.data(drawer, 'mdui.drawer', inst);\n      }\n\n      $.on(target, 'click', function () {\n        inst.toggle();\n      });\n    });\n  });\n\n  /**\n   * =============================================================================\n   * ************   Dialog 提示框   ************\n   * =============================================================================\n   */\n\n  mdui.Dialog = function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      history: true, // 监听 hashchange 事件\n      overlay: true, // 打开提示框时显示遮罩\n      modal: false, // 是否模态化提示框，为 false 时点击提示框外面区域关闭提示框，为 true 时不关闭\n      closeOnEsc: true, // 按下 esc 关闭提示框\n      closeOnCancel: true, // 按下取消按钮时关闭提示框\n      closeOnConfirm: true, // 按下确认按钮时关闭提示框\n      destroyOnClosed: false };\n\n    /**\n     * 遮罩层元素\n     */\n    var overlay;\n\n    /**\n     * 当前提示框\n     */\n    var current;\n\n    /**\n     * 队列名\n     * @type {string}\n     */\n    var queueName = '__md_dialog';\n\n    /**\n     * 窗口宽度变化，或提示框内容变化时，调整提示框位置和提示框内的滚动条\n     */\n    var readjust = function readjust() {\n      if (!current) {\n        return;\n      }\n\n      var dialog = current.dialog;\n\n      var dialogTitle = $.child(dialog, '.mdui-dialog-title');\n      var dialogContent = $.child(dialog, '.mdui-dialog-content');\n      var dialogActions = $.child(dialog, '.mdui-dialog-actions');\n\n      // 调整 dialog 的 top 和 height 值\n      dialog.style.height = '';\n      if (dialogContent) {\n        dialogContent.style.height = '';\n      }\n\n      var dialogHeight = dialog.clientHeight;\n      dialog.style.top = (window.innerHeight - dialogHeight) / 2 + 'px';\n      dialog.style.height = dialogHeight + 'px';\n\n      // 调整 mdui-dialog-content 的高度\n      var dialogTitleHeight = dialogTitle ? dialogTitle.scrollHeight : 0;\n      var dialogActionsHeight = dialogActions ? dialogActions.scrollHeight : 0;\n      if (dialogContent) {\n        dialogContent.style.height = dialogHeight - dialogTitleHeight - dialogActionsHeight + 'px';\n      }\n    };\n\n    /**\n     * hashchange 事件触发时关闭提示框\n     */\n    var hashchangeEvent = function hashchangeEvent() {\n      if (location.hash.substring(1).indexOf('&mdui-dialog') < 0) {\n        current.close(true);\n      }\n    };\n\n    /**\n     * 点击遮罩层关闭提示框\n     * @param e\n     */\n    var overlayClick = function overlayClick(e) {\n      if (e.target.classList.contains('mdui-overlay')) {\n        current.close();\n      }\n    };\n\n    /**\n     * 提示框实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n    function Dialog(selector, opts) {\n      var _this = this;\n\n      // 提示框元素\n      _this.dialog = $.dom(selector)[0];\n      if (typeof _this.dialog === 'undefined') {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.dialog, 'mdui.dialog');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      // 如果提示框元素没有在当前文档中，则需要添加\n      if (!document.body.contains(_this.dialog)) {\n        _this.append = true;\n        document.body.appendChild(_this.dialog);\n      }\n\n      _this.options = $.extend(DEFAULT, opts || {});\n      _this.state = 'closed';\n\n      // 在不支持触摸的设备上美化滚动条\n      if (!mdui.support.touch) {\n        var content = $.query('.mdui-dialog-content', _this.dialog);\n        if (content) {\n          content.classList.add('mdui-dialog-scrollbar');\n        }\n      }\n\n      // 绑定取消按钮事件\n      var cancels = $.queryAll('[mdui-dialog-cancel]', _this.dialog);\n      $.each(cancels, function (i, cancel) {\n        $.on(cancel, 'click', function () {\n          $.pluginEvent('cancel', 'dialog', _this, _this.dialog);\n          if (_this.options.closeOnCancel) {\n            _this.close();\n          }\n        });\n      });\n\n      // 绑定确认按钮事件\n      var confirms = $.queryAll('[mdui-dialog-confirm]', _this.dialog);\n      $.each(confirms, function (i, confirm) {\n        $.on(confirm, 'click', function () {\n          $.pluginEvent('confirm', 'dialog', _this, _this.dialog);\n          if (_this.options.closeOnConfirm) {\n            _this.close();\n          }\n        });\n      });\n\n      // 绑定关闭按钮事件\n      var closes = $.queryAll('[mdui-dialog-close]', _this.dialog);\n      $.each(closes, function (i, close) {\n        $.on(close, 'click', function () {\n          _this.close();\n        });\n      });\n    }\n\n    /**\n     * 打开提示框\n     */\n    Dialog.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n      if (current && (current.state === 'opening' || current.state === 'opened') || $.queue(queueName).length) {\n        $.queue(queueName, function () {\n          _this.open();\n        });\n\n        return;\n      }\n\n      current = _this;\n\n      mdui.lockScreen();\n      _this.dialog.style.display = 'block';\n\n      readjust();\n      $.on(window, 'resize', mdui.throttle(function () {\n        readjust();\n      }, 100));\n\n      // 打开消息框\n      _this.dialog.classList.add('mdui-dialog-open');\n      _this.state = 'opening';\n      $.pluginEvent('open', 'dialog', _this, _this.dialog);\n\n      // 打开提示框动画完成后\n      $.transitionEnd(_this.dialog, function () {\n        if (_this.dialog.classList.contains('mdui-dialog-open')) {\n          _this.state = 'opened';\n          $.pluginEvent('opened', 'dialog', _this, _this.dialog);\n        }\n      });\n\n      // 不存在遮罩层元素时，添加遮罩层\n      if (!overlay) {\n        overlay = mdui.showOverlay();\n      }\n\n      // 点击遮罩层时是否关闭提示框\n      $[_this.options.modal ? 'off' : 'on'](overlay, 'click', overlayClick);\n\n      // 是否显示遮罩层，不显示时，把遮罩层背景透明\n      overlay.style.opacity = _this.options.overlay ? '' : 0;\n\n      if (_this.options.history) {\n        // 如果 hash 中原来就有 &mdui-dialog，先删除，避免后退历史纪录后仍然有 &mdui-dialog 导致无法关闭\n        var hash = location.hash.substring(1);\n        if (hash.indexOf('&mdui-dialog') > -1) {\n          hash = hash.replace(/&mdui-dialog/g, '');\n        }\n\n        // 后退按钮关闭对话框\n        location.hash = hash + '&mdui-dialog';\n        $.on(window, 'hashchange', hashchangeEvent);\n      }\n    };\n\n    /**\n     * 关闭提示框\n     */\n    Dialog.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      current = null;\n      _this.dialog.classList.remove('mdui-dialog-open');\n      _this.state = 'closing';\n      $.pluginEvent('close', 'dialog', _this, _this.dialog);\n\n      // 所有提示框都关闭，且当前没有打开的提示框时，隐藏遮罩\n      if ($.queue(queueName).length === 0) {\n        mdui.hideOverlay(overlay);\n        overlay = null;\n      }\n\n      $.transitionEnd(_this.dialog, function () {\n        if (!_this.dialog.classList.contains('mdui-dialog-open')) {\n\n          _this.state = 'closed';\n          $.pluginEvent('closed', 'dialog', _this, _this.dialog);\n\n          _this.dialog.style.display = 'none';\n\n          // 所有提示框都关闭，且当前没有打开的提示框时，解锁屏幕\n          if ($.queue(queueName).length === 0 && !current) {\n            mdui.unlockScreen();\n          }\n\n          $.off(window, 'resize', readjust);\n\n          if (_this.options.destroyOnClosed) {\n            _this.destroy();\n          }\n        }\n      });\n\n      if (_this.options.history && $.queue(queueName).length === 0) {\n        // 是否需要后退历史纪录，默认为 false。\n        // 为 false 时是通过 js 关闭，需要后退一个历史记录\n        // 为 true 时是通过后退按钮关闭，不需要后退历史记录\n        if (!arguments[0]) {\n          window.history.back();\n        }\n\n        $.off(window, 'hashchange', hashchangeEvent);\n      }\n\n      // 关闭旧对话框，打开新对话框。\n      // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n      setTimeout(function () {\n        $.dequeue(queueName);\n      }, 100);\n    };\n\n    /**\n     * 切换提示框打开/关闭状态\n     */\n    Dialog.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取提示框状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Dialog.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 销毁提示框\n     */\n    Dialog.prototype.destroy = function () {\n      var _this = this;\n\n      if (_this.append) {\n        $.remove(_this.dialog);\n      }\n\n      $.data(_this.dialog, 'mdui.dialog', null);\n\n      if (current === _this) {\n        mdui.unlockScreen();\n        mdui.hideOverlay();\n      }\n    };\n\n    /**\n     * 提示框内容变化时，需要调用该方法来调整提示框位置和滚动条高度\n     */\n    Dialog.prototype.handleUpdate = function () {\n      readjust();\n    };\n\n    // esc 按下时关闭对话框\n    $.on(document, 'keydown', function (e) {\n      if (current && current.options.closeOnEsc && current.state === 'opened' && e.keyCode === 27) {\n        current.close();\n      }\n    });\n\n    return Dialog;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Dialog DATA API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    $.on(document, 'click', '[mdui-dialog]', function () {\n      var _this = this;\n      var options = $.parseOptions(_this.getAttribute('mdui-dialog'));\n      var selector = options.target;\n      delete options.target;\n\n      var dialog = $.dom(selector)[0];\n\n      var inst = $.data(dialog, 'mdui.dialog');\n      if (!inst) {\n        inst = new mdui.Dialog(dialog, options);\n        $.data(dialog, 'mdui.dialog', inst);\n      }\n\n      inst.open();\n    });\n  });\n\n  /**\n   * =============================================================================\n   * ************   mdui.dialog(options)   ************\n   * =============================================================================\n   */\n\n  mdui.dialog = function (options) {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      title: '', // 标题\n      content: '', // 文本\n      buttons: [], // 按钮\n      stackedButtons: false, // 垂直排列按钮\n      cssClass: '', // 在 Dialog 上添加的 CSS 类\n      history: true, // 监听 hashchange 事件\n      overlay: true, // 是否显示遮罩\n      modal: false, // 是否模态化提示框\n      closeOnEsc: true, // 按下 esc 时关闭提示框\n      destroyOnClosed: true, // 关闭后销毁\n      onOpen: function onOpen() {// 打开动画开始时的回调\n      },\n\n      onOpened: function onOpened() {// 打开动画结束后的回调\n      },\n\n      onClose: function onClose() {// 关闭动画开始时的回调\n      },\n\n      onClosed: function onClosed() {// 关闭动画结束时的回调\n      }\n    };\n\n    /**\n     * 按钮的默认参数\n     */\n    var DEFAULT_BUTTON = {\n      text: '', // 按钮文本\n      bold: false, // 按钮文本是否加粗\n      close: true, // 点击按钮后关闭提示框\n      onClick: function onClick(inst) {// 点击按钮的回调\n      }\n    };\n\n    // 合并参数\n    options = $.extend(DEFAULT, options || {});\n    $.each(options.buttons, function (i, button) {\n      options.buttons[i] = $.extend(DEFAULT_BUTTON, button);\n    });\n\n    // 按钮的 HTML\n    var buttonsHTML = '';\n    if (options.buttons.length) {\n      buttonsHTML = '<div class=\"mdui-dialog-actions ' + (options.stackedButtons ? 'mdui-dialog-actions-stacked' : '') + '\">';\n      $.each(options.buttons, function (i, button) {\n        buttonsHTML += '<a href=\"javascript:void(0)\" ' + 'class=\"mdui-btn mdui-ripple mdui-text-color-primary ' + (button.bold ? 'mdui-btn-bold' : '') + '\">' + button.text + '</a>';\n      });\n\n      buttonsHTML += '</div>';\n    }\n\n    // Dialog 的 HTML\n    var HTML = '<div class=\"mdui-dialog ' + options.cssClass + '\">' + (options.title ? '<div class=\"mdui-dialog-title\">' + options.title + '</div>' : '') + (options.content ? '<div class=\"mdui-dialog-content\">' + options.content + '</div>' : '') + buttonsHTML + '</div>';\n\n    // 实例化 Dialog\n    var inst = new mdui.Dialog(HTML, {\n      history: options.history,\n      overlay: options.overlay,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n      destroyOnClosed: options.destroyOnClosed\n    });\n\n    // 绑定按钮事件\n    if (options.buttons.length) {\n      var buttons = $.queryAll('.mdui-dialog-actions .mdui-btn', inst.dialog);\n      $.each(buttons, function (i, button) {\n        $.on(button, 'click', function () {\n          if (typeof options.buttons[i].onClick === 'function') {\n            options.buttons[i].onClick(inst);\n          }\n\n          if (options.buttons[i].close) {\n            inst.close();\n          }\n        });\n      });\n    }\n\n    // 绑定打开关闭事件\n    if (typeof options.onOpen === 'function') {\n      $.on(inst.dialog, 'open.mdui.dialog', function () {\n        options.onOpen(inst);\n      });\n\n      $.on(inst.dialog, 'opened.mdui.dialog', function () {\n        options.onOpened(inst);\n      });\n\n      $.on(inst.dialog, 'close.mdui.dialog', function () {\n        options.onClose(inst);\n      });\n\n      $.on(inst.dialog, 'closed.mdui.dialog', function () {\n        options.onClosed(inst);\n      });\n    }\n\n    inst.open();\n\n    return inst;\n  };\n\n  /**\n   * =============================================================================\n   * ************   mdui.alert(text, title, onConfirm, options)   ************\n   * ************   mdui.alert(text, onConfirm, options)   ************\n   * =============================================================================\n   */\n\n  mdui.alert = function (text, title, onConfirm, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      options = arguments[2];\n    }\n\n    if (typeof onConfirm === 'undefined') {\n      onConfirm = function onConfirm() {};\n    }\n\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok', // 按钮上的文本\n      history: true, // 监听 hashchange 事件\n      modal: false, // 是否模态化提示框，为 false 时点击提示框外面区域关闭提示框，为 true 时不关闭\n      closeOnEsc: true };\n\n    options = $.extend(DEFAULT, options);\n\n    return mdui.dialog({\n      title: title,\n      content: text,\n      buttons: [{\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: onConfirm\n      }],\n      cssClass: 'mdui-dialog-alert',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc\n    });\n  };\n\n  /**\n   * =============================================================================\n   * ************   mdui.confirm(text, title, onConfirm, onCancel, options)   ************\n   * ************   mdui.confirm(text, onConfirm, onCancel, options)          ************\n   * =============================================================================\n   */\n\n  mdui.confirm = function (text, title, onConfirm, onCancel, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      onCancel = arguments[2];\n      options = arguments[3];\n    }\n\n    if (typeof onConfirm === 'undefined') {\n      onConfirm = function onConfirm() {};\n    }\n\n    if (typeof onCancel === 'undefined') {\n      onCancel = function onCancel() {};\n    }\n\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok', // 确认按钮的文本\n      cancelText: 'cancel', // 取消按钮的文本\n      history: true, // 监听 hashchange 事件\n      modal: false, // 是否模态化提示框，为 false 时点击提示框外面区域关闭提示框，为 true 时不关闭\n      closeOnEsc: true };\n\n    options = $.extend(DEFAULT, options);\n\n    return mdui.dialog({\n      title: title,\n      content: text,\n      buttons: [{\n        text: options.cancelText,\n        bold: false,\n        close: true,\n        onClick: onCancel\n      }, {\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: onConfirm\n      }],\n      cssClass: 'mdui-dialog-confirm',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc\n    });\n  };\n\n  /**\n   * =============================================================================\n   * ************   mdui.prompt(label, title, onConfirm, onCancel, options)   ************\n   * ************   mdui.prompt(label, onConfirm, onCancel, options)          ************\n   * =============================================================================\n   */\n\n  mdui.prompt = function (label, title, onConfirm, onCancel, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      onCancel = arguments[2];\n      options = arguments[3];\n    }\n\n    if (typeof onConfirm === 'undefined') {\n      onConfirm = function onConfirm() {};\n    }\n\n    if (typeof onCancel === 'undefined') {\n      onCancel = function onCancel() {};\n    }\n\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok', // 确认按钮的文本\n      cancelText: 'cancel', // 取消按钮的文本\n      history: true, // 监听 hashchange 事件\n      modal: false, // 是否模态化提示框，为 false 时点击提示框外面区域关闭提示框，为 true 时不关闭\n      closeOnEsc: true, // 按下 esc 关闭提示框\n      type: 'text', // 输入框类型，text: 单行文本框 textarea: 多行文本框\n      maxlength: '', // 最大输入字符数\n      defaultValue: '' };\n\n    options = $.extend(DEFAULT, options);\n\n    var content = '<div class=\"mdui-textfield\">' + (label ? '<label class=\"mdui-textfield-label\">' + label + '</label>' : '') + (options.type === 'text' ? '<input class=\"mdui-textfield-input\" type=\"text\" ' + 'value=\"' + options.defaultValue + '\" ' + (options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : '') + '/>' : '') + (options.type === 'textarea' ? '<textarea class=\"mdui-textfield-input\" ' + (options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : '') + '>' + options.defaultValue + '</textarea>' : '') + '</div>';\n\n    return mdui.dialog({\n      title: title,\n      content: content,\n      buttons: [{\n        text: options.cancelText,\n        bold: false,\n        close: true,\n        onClick: function onClick(inst) {\n          var value = $.query('.mdui-textfield-input', inst.dialog).value;\n          onCancel(value, inst);\n        }\n      }, {\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: function onClick(inst) {\n          var value = $.query('.mdui-textfield-input', inst.dialog).value;\n          onConfirm(value, inst);\n        }\n      }],\n      cssClass: 'mdui-dialog-prompt',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n      onOpen: function onOpen(inst) {\n\n        // 初始化输入框\n        var input = $.query('.mdui-textfield-input', inst.dialog);\n        mdui.updateTextFields(input);\n\n        // 聚焦到输入框\n        input.focus();\n\n        // 如果是多行输入框，监听输入框的 input 事件，更新提示框高度\n        if (options.type === 'textarea') {\n          $.on(input, 'input', function () {\n            inst.handleUpdate();\n          });\n        }\n\n        // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新提示框高度\n        if (options.maxlength) {\n          inst.handleUpdate();\n        }\n      }\n    });\n  };\n\n  /**\n   * =============================================================================\n   * ************   ToolTip 工具提示   ************\n   * =============================================================================\n   */\n\n  mdui.Tooltip = function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto', // 提示所在位置\n      delay: 0, // 延迟，单位毫秒\n      content: '' };\n\n    /**\n     * 设置 Tooltip 的位置\n     * @param inst\n     */\n    function setPosition(inst) {\n      var marginLeft;\n      var marginTop;\n      var position;\n\n      // 触发的元素\n      var targetProps = inst.target.getBoundingClientRect();\n\n      // 触发的元素和 Tooltip 之间的距离\n      var targetMargin = mdui.support.touch ? 24 : 14;\n\n      // Tooltip 的宽度和高度\n      var tooltipWidth = inst.tooltip.offsetWidth;\n      var tooltipHeight = inst.tooltip.offsetHeight;\n\n      // Tooltip 的方向\n      position = inst.options.position;\n\n      // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n      if (['bottom', 'top', 'left', 'right'].indexOf(position) === -1) {\n        if (targetProps.top + targetProps.height + targetMargin + tooltipHeight + 2 < document.documentElement.clientHeight) {\n          position = 'bottom';\n        } else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n          position = 'top';\n        } else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n          position = 'left';\n        } else if (targetProps.width + targetMargin + tooltipWidth + 2 < document.documentElement.clientWidth - targetProps.left) {\n          position = 'right';\n        } else {\n          position = 'bottom';\n        }\n      }\n\n      // 设置位置\n      switch (position) {\n        case 'bottom':\n          marginLeft = -1 * (tooltipWidth / 2);\n          marginTop = targetProps.height / 2 + targetMargin;\n          $.transformOrigin(inst.tooltip, 'top center');\n          break;\n        case 'top':\n          marginLeft = -1 * (tooltipWidth / 2);\n          marginTop = -1 * (tooltipHeight + targetProps.height / 2 + targetMargin);\n          $.transformOrigin(inst.tooltip, 'bottom center');\n          break;\n        case 'left':\n          marginLeft = -1 * (tooltipWidth + targetProps.width / 2 + targetMargin);\n          marginTop = -1 * (tooltipHeight / 2);\n          $.transformOrigin(inst.tooltip, 'center right');\n          break;\n        case 'right':\n          marginLeft = targetProps.width / 2 + targetMargin;\n          marginTop = -1 * (tooltipHeight / 2);\n          $.transformOrigin(inst.tooltip, 'center left');\n          break;\n      }\n\n      var targetOffset = $.offset(inst.target);\n      inst.tooltip.style.top = targetOffset.top + targetProps.height / 2 + 'px';\n      inst.tooltip.style.left = targetOffset.left + targetProps.width / 2 + 'px';\n      inst.tooltip.style['margin-left'] = marginLeft + 'px';\n      inst.tooltip.style['margin-top'] = marginTop + 'px';\n    }\n\n    /**\n     * Tooltip 实例\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n    function Tooltip(selector, opts) {\n      var _this = this;\n\n      _this.target = $.dom(selector)[0];\n      if (typeof _this.target === 'undefined') {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.target, 'mdui.tooltip');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, opts || {});\n      _this.state = 'closed';\n\n      // 创建 Tooltip HTML\n      var guid = mdui.guid();\n      _this.tooltip = $.dom('<div class=\"mdui-tooltip ' + (mdui.support.touch ? 'mdui-tooltip-mobile' : 'mdui-tooltip-desktop') + '\" id=\"mdui-tooltip-' + guid + '\">' + _this.options.content + '</div>')[0];\n      document.body.appendChild(_this.tooltip);\n\n      // 绑定事件\n      var openEvent = mdui.support.touch ? 'touchstart' : 'mouseenter';\n      var closeEvent = mdui.support.touch ? 'touchend' : 'mouseleave';\n      $.on(_this.target, openEvent, function () {\n        _this.open();\n      });\n\n      $.on(_this.target, closeEvent, function () {\n        _this.close();\n      });\n    }\n\n    /**\n     * 打开 Tooltip\n     * @param opts 允许每次打开时设置不同的参数\n     */\n    Tooltip.prototype.open = function (opts) {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      var oldOpts = _this.options;\n\n      // 合并 data 属性参数\n      var dataOpts = $.parseOptions(_this.target.getAttribute('mdui-tooltip'));\n      _this.options = $.extend(_this.options, dataOpts);\n\n      if (opts) {\n        _this.options = $.extend(_this.options, opts);\n      }\n\n      if (oldOpts.content !== _this.options.content) {\n        _this.tooltip.innerHTML = _this.options.content;\n      }\n\n      setPosition(_this);\n\n      _this.timeoutId = setTimeout(function () {\n        _this.tooltip.classList.add('mdui-tooltip-open');\n        _this.state = 'opening';\n        $.pluginEvent('open', 'tooltip', _this, _this.target);\n\n        $.transitionEnd(_this.tooltip, function () {\n          if (_this.tooltip.classList.contains('mdui-tooltip-open')) {\n            _this.state = 'opened';\n            $.pluginEvent('opened', 'tooltip', _this, _this.target);\n          }\n        });\n      }, _this.options.delay);\n    };\n\n    /**\n     * 关闭 Tooltip\n     */\n    Tooltip.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      clearTimeout(_this.timeoutId);\n      _this.tooltip.classList.remove('mdui-tooltip-open');\n      _this.state = 'closing';\n      $.pluginEvent('close', 'tooltip', _this, _this.target);\n\n      $.transitionEnd(_this.tooltip, function () {\n        if (!_this.tooltip.classList.contains('mdui-tooltip-open')) {\n          _this.state = 'closed';\n          $.pluginEvent('closed', 'tooltip', _this, _this.target);\n        }\n      });\n    };\n\n    /**\n     * 切换 Tooltip 状态\n     */\n    Tooltip.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取 Tooltip 状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Tooltip.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 销毁 Tooltip\n     */\n    /*Tooltip.prototype.destroy = function () {\n      var _this = this;\n      clearTimeout(_this.timeoutId);\n      $.data(_this.target, 'mdui.tooltip', null);\n      $.remove(_this.tooltip);\n    };*/\n\n    return Tooltip;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Tooltip DATA API   ************\n   * =============================================================================\n   */\n\n  (function () {\n    // mouseenter 不能冒泡，所以这里用 mouseover 代替\n    var event = mdui.support.touch ? 'touchstart' : 'mouseover';\n\n    $.on(document, event, '[mdui-tooltip]', function () {\n      var _this = this;\n\n      var inst = $.data(_this, 'mdui.tooltip');\n      if (!inst) {\n        var options = $.parseOptions(_this.getAttribute('mdui-tooltip'));\n        inst = new mdui.Tooltip(_this, options);\n        $.data(_this, 'mdui.tooltip', inst);\n\n        inst.open();\n      }\n    });\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Snackbar   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 当前打开着的 Snackbar\n     */\n    var current;\n\n    /**\n     * 对列名\n     * @type {string}\n     */\n    var queueName = '__md_snackbar';\n\n    var DEFAULT = {\n      message: '', // 文本内容\n      timeout: 4000, // 在用户没有操作时多长时间自动隐藏\n      buttonText: '', // 按钮的文本\n      buttonColor: '', // 按钮的颜色，支持 blue #90caf9 rgba(...)\n      closeOnButtonClick: true, // 点击按钮时关闭\n      closeOnOutsideClick: true, // 触摸或点击屏幕其他地方时关闭\n      onClick: function onClick() {// 在 Snackbar 上点击的回调\n      },\n\n      onButtonClick: function onButtonClick() {// 点击按钮的回调\n      },\n\n      onClose: function onClose() {// 关闭动画开始时的回调\n      }\n    };\n\n    /**\n     * 点击 Snackbar 外面的区域关闭\n     * @param e\n     */\n    var closeOnOutsideClick = function closeOnOutsideClick(e) {\n      if (!e.target.classList.contains('mdui-snackbar') && !$.parents(e.target, '.mdui-snackbar').length) {\n        current.close();\n      }\n    };\n\n    /**\n     * Snackbar 实例\n     * @param opts\n     * @constructor\n     */\n    function Snackbar(opts) {\n      var _this = this;\n\n      _this.options = $.extend(DEFAULT, opts || {});\n\n      // message 参数必须\n      if (!_this.options.message) {\n        return;\n      }\n\n      _this.state = 'closed';\n\n      // 按钮颜色\n      var buttonColorStyle = '';\n      var buttonColorClass = '';\n\n      if (_this.options.buttonColor.indexOf('#') === 0 || _this.options.buttonColor.indexOf('rgb') === 0) {\n        buttonColorStyle = 'style=\"color:' + _this.options.buttonColor + '\"';\n      } else if (_this.options.buttonColor !== '') {\n        buttonColorClass = 'mdui-text-color-' + _this.options.buttonColor;\n      }\n\n      // 添加 HTML\n      var tpl = '<div class=\"mdui-snackbar ' + (mdui.screen.mdUp() ? 'mdui-snackbar-desktop' : 'mdui-snackbar-mobile') + '\">' + '<div class=\"mdui-snackbar-text\">' + _this.options.message + '</div>' + (_this.options.buttonText ? '<a href=\"javascript:void(0)\" ' + 'class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ' + buttonColorClass + '\" ' + buttonColorStyle + '>' + _this.options.buttonText + '</a>' : '') + '</div>';\n      _this.snackbar = $.dom(tpl)[0];\n      document.body.appendChild(_this.snackbar);\n\n      // 设置位置\n      $.transform(_this.snackbar, 'translateY(' + _this.snackbar.clientHeight + 'px)');\n      _this.snackbar.style.left = (document.body.clientWidth - _this.snackbar.clientWidth) / 2 + 'px';\n      _this.snackbar.classList.add('mdui-snackbar-transition');\n    }\n\n    /**\n     * 打开 Snackbar\n     */\n    Snackbar.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n      if (current) {\n        $.queue(queueName, function () {\n          _this.open();\n        });\n\n        return;\n      }\n\n      current = _this;\n\n      // 开始打开\n      _this.state = 'opening';\n      $.transform(_this.snackbar, 'translateY(0)');\n\n      $.transitionEnd(_this.snackbar, function () {\n        if (_this.state !== 'opening') {\n          return;\n        }\n\n        _this.state = 'opened';\n\n        // 有按钮时绑定事件\n        if (_this.options.buttonText) {\n          var action = $.query('.mdui-snackbar-action', _this.snackbar);\n          $.on(action, 'click', function () {\n            _this.options.onButtonClick();\n            if (_this.options.closeOnButtonClick) {\n              _this.close();\n            }\n          });\n        }\n\n        // 点击 Snackbar 的事件\n        $.on(_this.snackbar, 'click', function (e) {\n          if (!e.target.classList.contains('mdui-snackbar-action')) {\n            _this.options.onClick();\n          }\n        });\n\n        // 点击 Snackbar 外面的区域关闭\n        if (_this.options.closeOnOutsideClick) {\n          $.on(document, mdui.support.touch ? 'touchstart' : 'click', closeOnOutsideClick);\n        }\n\n        // 超时后自动关闭\n        _this.timeoutId = setTimeout(function () {\n          _this.close();\n        }, _this.options.timeout);\n      });\n    };\n\n    /**\n     * 关闭 Snackbar\n     */\n    Snackbar.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      if (typeof _this.timeoutId !== 'undefined') {\n        clearTimeout(_this.timeoutId);\n      }\n\n      if (_this.options.closeOnOutsideClick) {\n        $.off(document, mdui.support.touch ? 'touchstart' : 'click', closeOnOutsideClick);\n      }\n\n      _this.state = 'closing';\n      $.transform(_this.snackbar, 'translateY(' + _this.snackbar.clientHeight + 'px)');\n      _this.options.onClose();\n\n      $.transitionEnd(_this.snackbar, function () {\n        if (_this.state !== 'closing') {\n          return;\n        }\n\n        current = null;\n        _this.state = 'closed';\n        $.remove(_this.snackbar);\n        $.dequeue(queueName);\n      });\n    };\n\n    /**\n     * 打开 Snackbar\n     * @param params\n     */\n    mdui.snackbar = function (params) {\n      var inst = new Snackbar(params);\n\n      inst.open();\n      return inst;\n    };\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Bottom navigation 底部导航栏   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    // 切换导航项\n    $.on(document, 'click', '.mdui-bottom-nav>a', function () {\n      var _this = this;\n      var bottomNav = $.parent(_this, '.mdui-bottom-nav');\n      var items = $.children(bottomNav, 'a');\n\n      $.each(items, function (i, curItem) {\n        if (_this === curItem) {\n          $.pluginEvent('change', 'bottomNav', null, bottomNav, {\n            index: i\n          });\n\n          curItem.classList.add('mdui-bottom-nav-active');\n        } else {\n          curItem.classList.remove('mdui-bottom-nav-active');\n        }\n      });\n    });\n\n    // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n    $.each($.queryAll('.mdui-bottom-nav-scroll-hide'), function (i, bottomNav) {\n      var inst = new mdui.Headroom(bottomNav, {\n        pinnedClass: 'mdui-headroom-pinned-down',\n        unpinnedClass: 'mdui-headroom-unpinned-down'\n      });\n      $.data(bottomNav, 'mdui.headroom', inst);\n    });\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Spinner 圆形进度条   ************\n   * =============================================================================\n   */\n\n  (function () {\n    /**\n     * layer 的 HTML 结构\n     */\n    var layerHTML = function layerHTML() {\n      var i = arguments.length === 1 ? arguments[0] : false;\n\n      return '<div class=\"mdui-spinner-layer ' + (i ? 'mdui-spinner-layer-' + i : '') + '\">' + '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' + '<div class=\"mdui-spinner-circle\"></div>' + '</div>' + '<div class=\"mdui-spinner-gap-patch\">' + '<div class=\"mdui-spinner-circle\"></div>' + '</div>' + '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' + '<div class=\"mdui-spinner-circle\"></div>' + '</div>' + '</div>';\n    };\n\n    /**\n     * 填充 HTML\n     * @param spinner\n     */\n    var fillHTML = function fillHTML(spinner) {\n      var layer;\n      if (spinner.classList.contains('mdui-spinner-colorful')) {\n        layer = layerHTML('1') + layerHTML('2') + layerHTML('3') + layerHTML('4');\n      } else {\n        layer = layerHTML();\n      }\n\n      spinner.innerHTML = layer;\n    };\n\n    /**\n     * 页面加载完后自动填充 HTML 结构\n     */\n    $.ready(function () {\n      var spinners = $.queryAll('.mdui-spinner');\n      $.each(spinners, function (i, spinner) {\n        fillHTML(spinner);\n      });\n    });\n\n    /**\n     * 更新圆形进度条\n     */\n    mdui.updateSpinners = function () {\n      var spinners;\n\n      if (arguments.length === 1) {\n        spinners = $.dom(arguments[0]);\n      } else {\n        spinners = $.queryAll('.mdui-spinner');\n      }\n\n      $.each(spinners, function (i, spinner) {\n        fillHTML(spinner);\n      });\n    };\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Expansion panel 可扩展面板   ************\n   * =============================================================================\n   */\n\n  mdui.Panel = function () {\n\n    function Panel(selector, opts) {\n      return new $.Collapse(selector, opts, {\n        item: 'mdui-panel-item',\n        itemOpen: 'mdui-panel-item-open',\n        header: 'mdui-panel-item-header',\n        body: 'mdui-panel-item-body'\n      }, 'panel');\n    }\n\n    return Panel;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Expansion panel 自定义属性   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // 实例化插件\n    $.each($.queryAll('[mdui-panel]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-panel'));\n\n      var inst = $.data(target, 'mdui.panel');\n      if (!inst) {\n        inst = new mdui.Panel(target, options);\n        $.data(target, 'mdui.panel', inst);\n      }\n    });\n  });\n\n  /**\n   * =============================================================================\n   * ************   Menu 菜单   ************\n   * =============================================================================\n   */\n\n  mdui.Menu = function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto', // 菜单位置 top、bottom、center、auto\n      align: 'auto', // 菜单和触发它的元素的对齐方式 left、right、center、auto\n      gutter: 16, // 菜单距离窗口边缘的最小距离，单位 px\n      fixed: false, // 是否使菜单固定在窗口，不随滚动条滚动\n      covered: 'auto', // 菜单是否覆盖在触发它的元素上，true、false。auto 时简单菜单覆盖，级联菜单不覆盖\n      subMenuTrigger: 'hover', // 子菜单的触发方式 hover、click\n      subMenuDelay: 200 };\n\n    /**\n     * 类名\n     */\n    var CLASS = {\n      menu: 'mdui-menu', // 菜单基础类\n      cascade: 'mdui-menu-cascade', // 级联菜单\n      open: 'mdui-menu-open', // 打开状态的菜单\n      item: 'mdui-menu-item', // 菜单条目\n      active: 'mdui-menu-item-active', // 激活状态的菜单\n      divider: 'mdui-divider' };\n\n    /**\n     * 调整主菜单位置\n     * @param _this 实例\n     */\n    var readjust = function readjust(_this) {\n      var menuLeft;\n      var menuTop;\n\n      // 菜单位置和方向\n      var position;\n      var align;\n\n      // window 窗口的宽度和高度\n      var windowHeight = document.documentElement.clientHeight;\n      var windowWidth = document.documentElement.clientWidth;\n\n      // 配置参数\n      var gutter = _this.options.gutter;\n      var isCovered = _this.isCovered;\n      var isFixed = _this.options.fixed;\n\n      // 动画方向参数\n      var transformOriginX;\n      var transformOriginY;\n\n      // 菜单的原始宽度和高度\n      var menuWidth = parseFloat($.getStyle(_this.menu, 'width'));\n      var menuHeight = parseFloat($.getStyle(_this.menu, 'height'));\n\n      var anchor = _this.anchor;\n\n      // 触发菜单的元素在窗口中的位置\n      var anchorTmp = anchor.getBoundingClientRect();\n      var anchorTop = anchorTmp.top;\n      var anchorLeft = anchorTmp.left;\n      var anchorHeight = anchorTmp.height;\n      var anchorWidth = anchorTmp.width;\n      var anchorBottom = windowHeight - anchorTop - anchorHeight;\n      var anchorRight = windowWidth - anchorLeft - anchorWidth;\n\n      // 触发元素相对其拥有定位属性的父元素的位置\n      var anchorOffsetTop = anchor.offsetTop;\n      var anchorOffsetLeft = anchor.offsetLeft;\n\n      // ===============================\n      // ================= 自动判断菜单位置\n      // ===============================\n      if (_this.options.position === 'auto') {\n\n        // 判断下方是否放得下菜单\n        if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n          position = 'bottom';\n        }\n\n        // 判断上方是否放得下菜单\n        else if (anchorTop + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n            position = 'top';\n          }\n\n          // 上下都放不下，居中显示\n          else {\n              position = 'center';\n            }\n      } else {\n        position = _this.options.position;\n      }\n\n      // ===============================\n      // ============== 自动判断菜单对齐方式\n      // ===============================\n      if (_this.options.align === 'auto') {\n\n        // 判断右侧是否放得下菜单\n        if (anchorRight + anchorWidth > menuWidth + gutter) {\n          align = 'left';\n        }\n\n        // 判断左侧是否放得下菜单\n        else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n            align = 'right';\n          }\n\n          // 左右都放不下，居中显示\n          else {\n              align = 'center';\n            }\n      } else {\n        align = _this.options.align;\n      }\n\n      // ===============================\n      // ==================== 设置菜单位置\n      // ===============================\n      if (position === 'bottom') {\n        transformOriginY = '0';\n\n        menuTop = (isCovered ? 0 : anchorHeight) + (isFixed ? anchorTop : anchorOffsetTop);\n      } else if (position === 'top') {\n        transformOriginY = '100%';\n\n        menuTop = (isCovered ? anchorHeight : 0) + (isFixed ? anchorTop - menuHeight : anchorOffsetTop - menuHeight);\n      } else {\n        transformOriginY = '50%';\n\n        // =====================在窗口中居中\n        // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n        // 级联菜单内部不允许出现滚动条\n        var menuHeightTemp = menuHeight;\n\n        // 简单菜单比窗口高时，限制菜单高度\n        if (!_this.menu.classList.contains('mdui-menu-cascade')) {\n          if (menuHeight + gutter * 2 > windowHeight) {\n            menuHeightTemp = windowHeight - gutter * 2;\n            _this.menu.style.height = menuHeightTemp + 'px';\n          }\n        }\n\n        menuTop = (windowHeight - menuHeightTemp) / 2 + (isFixed ? 0 : anchorOffsetTop - anchorTop);\n      }\n\n      _this.menu.style.top = menuTop + 'px';\n\n      // ===============================\n      // ================= 设置菜单对齐方式\n      // ===============================\n      if (align === 'left') {\n        transformOriginX = '0';\n\n        menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n      } else if (align === 'right') {\n        transformOriginX = '100%';\n\n        menuLeft = isFixed ? anchorLeft + anchorWidth - menuWidth : anchorOffsetLeft + anchorWidth - menuWidth;\n      } else {\n        transformOriginX = '50%';\n\n        //=======================在窗口中居中\n        // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n        var menuWidthTemp = menuWidth;\n\n        // 菜单比窗口宽，限制菜单宽度\n        if (menuWidth + gutter * 2 > windowWidth) {\n          menuWidthTemp = windowWidth - gutter * 2;\n          _this.menu.style.width = menuWidthTemp + 'px';\n        }\n\n        menuLeft = (windowWidth - menuWidthTemp) / 2 + (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n      }\n\n      _this.menu.style.left = menuLeft + 'px';\n\n      // 设置菜单动画方向\n      $.transformOrigin(_this.menu, transformOriginX + ' ' + transformOriginY);\n    };\n\n    /**\n     * 调整子菜单的位置\n     * @param submenu\n     */\n    var readjustSubmenu = function readjustSubmenu(submenu) {\n      var item = $.parent(submenu, '.' + CLASS.item);\n\n      var submenuTop;\n      var submenuLeft;\n\n      // 子菜单位置和方向\n      var position; // top、bottom\n      var align; // left、right\n\n      // window 窗口的宽度和高度\n      var windowHeight = document.documentElement.clientHeight;\n      var windowWidth = document.documentElement.clientWidth;\n\n      // 动画方向参数\n      var transformOriginX;\n      var transformOriginY;\n\n      // 子菜单的原始宽度和高度\n      var submenuWidth = parseFloat($.getStyle(submenu, 'width'));\n      var submenuHeight = parseFloat($.getStyle(submenu, 'height'));\n\n      // 触发子菜单的菜单项的宽度高度\n      var itemTmp = item.getBoundingClientRect();\n      var itemWidth = itemTmp.width;\n      var itemHeight = itemTmp.height;\n      var itemLeft = itemTmp.left;\n      var itemTop = itemTmp.top;\n\n      // ===================================\n      // ===================== 判断菜单上下位置\n      // ===================================\n\n      // 判断下方是否放得下菜单\n      if (windowHeight - itemTop > submenuHeight) {\n        position = 'bottom';\n      }\n\n      // 判断上方是否放得下菜单\n      else if (itemTop + itemHeight > submenuHeight) {\n          position = 'top';\n        }\n\n        // 默认放在下方\n        else {\n            position = 'bottom';\n          }\n\n      // ====================================\n      // ====================== 判断菜单左右位置\n      // ====================================\n\n      // 判断右侧是否放得下菜单\n      if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n        align = 'left';\n      }\n\n      // 判断左侧是否放得下菜单\n      else if (itemLeft > submenuWidth) {\n          align = 'right';\n        }\n\n        // 默认放在右侧\n        else {\n            align = 'left';\n          }\n\n      // ===================================\n      // ======================== 设置菜单位置\n      // ===================================\n      if (position === 'bottom') {\n        transformOriginY = '0';\n        submenuTop = '0';\n      } else if (position === 'top') {\n        transformOriginY = '100%';\n        submenuTop = -submenuHeight + itemHeight;\n      }\n\n      submenu.style.top = submenuTop + 'px';\n\n      // ===================================\n      // ===================== 设置菜单对齐方式\n      // ===================================\n      if (align === 'left') {\n        transformOriginX = '0';\n        submenuLeft = itemWidth;\n      } else if (align === 'right') {\n        transformOriginX = '100%';\n        submenuLeft = -submenuWidth;\n      }\n\n      submenu.style.left = submenuLeft + 'px';\n\n      // 设置菜单动画方向\n      $.transformOrigin(submenu, transformOriginX + ' ' + transformOriginY);\n    };\n\n    /**\n     * 打开子菜单\n     * @param submenu\n     */\n    var openSubMenu = function openSubMenu(submenu) {\n      readjustSubmenu(submenu);\n      submenu.classList.add(CLASS.open);\n\n      // 菜单项上添加激活状态的样式\n      var item = $.parent(submenu, '.' + CLASS.item);\n      item.classList.add(CLASS.active);\n    };\n\n    /**\n     * 关闭子菜单，及其嵌套的子菜单\n     * @param submenu\n     */\n    var closeSubMenu = function closeSubMenu(submenu) {\n      var item;\n\n      // 关闭子菜单\n      submenu.classList.remove(CLASS.open);\n\n      // 移除激活状态的样式\n      item = $.parent(submenu, '.' + CLASS.item);\n      item.classList.remove(CLASS.active);\n\n      // 循环关闭嵌套的子菜单\n      var submenus = $.queryAll('.' + CLASS.menu, submenu);\n      $.each(submenus, function (i, tmp) {\n        tmp.classList.remove(CLASS.open);\n\n        // 移除激活状态的样式\n        item = $.parent(tmp, '.' + CLASS.item);\n        item.classList.remove(CLASS.active);\n      });\n    };\n\n    /**\n     * 切换子菜单状态\n     * @param submenu\n     */\n    var toggleSubMenu = function toggleSubMenu(submenu) {\n      if (submenu.classList.contains(CLASS.open)) {\n        closeSubMenu(submenu);\n      } else {\n        openSubMenu(submenu);\n      }\n    };\n\n    /**\n     * 绑定子菜单事件\n     * @param inst 实例\n     */\n    var bindSubMenuEvent = function bindSubMenuEvent(inst) {\n      var trigger;\n      var delay;\n\n      if (inst.options.subMenuTrigger === 'hover' && !mdui.support.touch) {\n        trigger = 'mouseover mouseout';\n        delay = inst.options.subMenuDelay;\n      } else {\n        trigger = 'click';\n        delay = 0;\n      }\n\n      // subMneuTrigger: 'click'\n      if (trigger === 'click') {\n        $.on(inst.menu, trigger, '.' + CLASS.item, function (e) {\n          var _this = this;\n\n          // 禁用状态菜单不操作\n          if (_this.getAttribute('disabled') !== null) {\n            return;\n          }\n\n          // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n          if ($.is(e.target, '.' + CLASS.menu) || $.is(e.target, '.' + CLASS.divider)) {\n            return;\n          }\n\n          // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n          if ($.parents(e.target, '.' + CLASS.item)[0] !== _this) {\n            return;\n          }\n\n          var submenu = $.child(_this, '.' + CLASS.menu);\n\n          // 先关闭除当前子菜单外的所有同级子菜单\n          var menu = $.parent(_this, '.' + CLASS.menu);\n          var items = $.children(menu, '.' + CLASS.item);\n          $.each(items, function (i, item) {\n            var tmpSubmenu = $.child(item, '.' + CLASS.menu);\n            if (tmpSubmenu && (!submenu || !$.is(tmpSubmenu, submenu))) {\n              closeSubMenu(tmpSubmenu);\n            }\n          });\n\n          // 切换当前子菜单\n          if (submenu) {\n            toggleSubMenu(submenu);\n          }\n        });\n      }\n\n      // subMenuTrigger: 'hover'\n      else {\n\n          // 临时存储 setTimeout 对象\n          var timeout;\n\n          var timeoutOpen;\n          var timeoutClose;\n\n          $.on(inst.menu, trigger, '.' + CLASS.item, function (e) {\n            var _this = this;\n            var eventType = e.type;\n            var relatedTarget = e.relatedTarget;\n\n            // 禁用状态的菜单不操作\n            if (_this.getAttribute('disabled') !== null) {\n              return;\n            }\n\n            // 用 mouseover 模拟 mouseenter\n            if (eventType === 'mouseover') {\n              if (_this !== relatedTarget && $.contains(_this, relatedTarget)) {\n                return;\n              }\n            }\n\n            // 用 mouseout 模拟 mouseleave\n            else if (eventType === 'mouseout') {\n                if (_this === relatedTarget || $.contains(_this, relatedTarget)) {\n                  return;\n                }\n              }\n\n            // 当前菜单项下的子菜单，未必存在\n            var submenu = $.child(_this, '.' + CLASS.menu);\n\n            // 鼠标移入菜单项时，显示菜单项下的子菜单\n            if (eventType === 'mouseover') {\n              if (submenu) {\n\n                // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n                var tmpClose = $.data(submenu, 'timeoutClose.mdui.menu');\n                if (tmpClose) {\n                  clearTimeout(tmpClose);\n                }\n\n                // 如果当前子菜单已经打开，不操作\n                if (submenu.classList.contains(CLASS.open)) {\n                  return;\n                }\n\n                // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n                clearTimeout(timeoutOpen);\n\n                // 准备打开当前子菜单\n                timeout = timeoutOpen = setTimeout(function () {\n                  openSubMenu(submenu);\n                }, delay);\n\n                $.data(submenu, 'timeoutOpen.mdui.menu', timeout);\n              }\n            }\n\n            // 鼠标移出菜单项时，关闭菜单项下的子菜单\n            else if (eventType === 'mouseout') {\n                if (submenu) {\n\n                  // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n                  var tmpOpen = $.data(submenu, 'timeoutOpen.mdui.menu');\n                  if (tmpOpen) {\n                    clearTimeout(tmpOpen);\n                  }\n\n                  // 准备关闭当前子菜单\n                  timeout = timeoutClose = setTimeout(function () {\n                    closeSubMenu(submenu);\n                  }, delay);\n\n                  $.data(submenu, 'timeoutClose.mdui.menu', timeout);\n                }\n              }\n          });\n        }\n    };\n\n    /**\n     * 菜单\n     * @param anchorSelector 点击该元素触发菜单\n     * @param menuSelector 菜单\n     * @param opts 配置项\n     * @constructor\n     */\n    function Menu(anchorSelector, menuSelector, opts) {\n      var _this = this;\n\n      // 触发菜单的元素\n      _this.anchor = $.dom(anchorSelector)[0];\n      if (typeof _this.anchor === 'undefined') {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.anchor, 'mdui.menu');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.menu = $.dom(menuSelector)[0];\n\n      // 触发菜单的元素 和 菜单必须时同级的元素，否则菜单可能不能定位\n      if (!$.child(_this.anchor.parentNode, _this.menu)) {\n        return;\n      }\n\n      _this.options = $.extend(DEFAULT, opts || {});\n      _this.state = 'closed';\n\n      // 是否是级联菜单\n      _this.isCascade = _this.menu.classList.contains(CLASS.cascade);\n\n      // covered 参数处理\n      if (_this.options.covered === 'auto') {\n        _this.isCovered = !_this.isCascade;\n      } else {\n        _this.isCovered = _this.options.covered;\n      }\n\n      // 点击触发菜单切换\n      $.on(_this.anchor, 'click', function () {\n        _this.toggle();\n      });\n\n      // 点击菜单外面区域关闭菜单\n      $.on(document, 'click touchstart', function (e) {\n        if ((_this.state === 'opening' || _this.state === 'opened') && !$.is(e.target, _this.menu) && !$.contains(_this.menu, e.target) && !$.is(e.target, _this.anchor) && !$.contains(_this.anchor, e.target)) {\n          _this.close();\n        }\n      });\n\n      // 点击不含子菜单的菜单条目关闭菜单\n      $.on(document, 'click', '.' + CLASS.item, function () {\n        if (!$.query('.' + CLASS.menu, this) && this.getAttribute('disabled') === null) {\n          _this.close();\n        }\n      });\n\n      // 绑定点击或鼠标移入含子菜单的条目的事件\n      bindSubMenuEvent(_this);\n\n      // 窗口大小变化时，重新调整菜单位置\n      $.on(window, 'resize', mdui.throttle(function () {\n        readjust(_this);\n      }, 100));\n    }\n\n    /**\n     * 切换菜单状态\n     */\n    Menu.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 打开菜单\n     */\n    Menu.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.state = 'opening';\n\n      // 调整菜单位置\n      readjust(_this);\n\n      // 菜单隐藏状态使用使用 fixed 定位。\n      _this.menu.style.position = _this.options.fixed ? 'fixed' : 'absolute';\n\n      // 打开菜单\n      _this.menu.classList.add(CLASS.open);\n      $.pluginEvent('open', 'menu', _this, _this.menu);\n\n      // 打开动画完成后\n      $.transitionEnd(_this.menu, function () {\n\n        // 如果打开动画结束前，菜单状态已经改变了，则不触发 opened 事件\n        if (_this.state !== 'opening') {\n          return;\n        }\n\n        _this.state = 'opened';\n        $.pluginEvent('opened', 'menu', _this, _this.menu);\n      });\n    };\n\n    /**\n     * 关闭菜单\n     */\n    Menu.prototype.close = function () {\n      var _this = this;\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.menu.classList.remove(CLASS.open);\n      _this.state = 'closing';\n      $.pluginEvent('close', 'menu', _this, _this.menu);\n\n      // 菜单开始关闭时，关闭所有子菜单\n      $.each($.queryAll('.mdui-menu', _this.menu), function (i, submenu) {\n        closeSubMenu(submenu);\n      });\n\n      // 关闭动画完成后\n      $.transitionEnd(_this.menu, function () {\n\n        // 如果关闭动画完成前，菜单状态又改变了，则不触发 closed 事件\n        if (_this.state !== 'closing') {\n          return;\n        }\n\n        _this.state = 'closed';\n        $.pluginEvent('closed', 'menu', _this, _this.menu);\n\n        // 关闭后，恢复菜单样式到默认状态\n        _this.menu.style.top = '';\n        _this.menu.style.left = '';\n        _this.menu.style.width = '';\n\n        // 关闭后，恢复 fixed 定位\n        _this.menu.style.position = 'fixed';\n      });\n    };\n\n    return Menu;\n  }();\n\n  /**\n   * =============================================================================\n   * ************   Menu 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    $.on(document, 'click', '[mdui-menu]', function () {\n      var _this = this;\n\n      var inst = $.data(_this, 'mdui.menu');\n      if (!inst) {\n        var options = $.parseOptions(_this.getAttribute('mdui-menu'));\n        var menuSelector = options.target;\n        delete options.target;\n\n        inst = new mdui.Menu(_this, menuSelector, options);\n        $.data(_this, 'mdui.menu', inst);\n\n        inst.toggle();\n      }\n    });\n  });\n\n  /* jshint ignore:start */\n  window.mdui = mdui;\n})(window, document);\n/* jshint ignore:end */\n\n/***/ }),\n\n/***/ 110:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _Omic2 = __webpack_require__(7);\n\nvar _Omic3 = _interopRequireDefault(_Omic2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OmicDivider = function (_Omic) {\n  (0, _inherits3.default)(OmicDivider, _Omic);\n\n  function OmicDivider(data) {\n    (0, _classCallCheck3.default)(this, OmicDivider);\n\n    data = (0, _assign2.default)({\n      inset: 'false',\n      theme: ''\n    }, data);\n    if ('light|dark'.indexOf(data.theme) < 0) {\n      data.theme = '';\n    }\n    return (0, _possibleConstructorReturn3.default)(this, (OmicDivider.__proto__ || (0, _getPrototypeOf2.default)(OmicDivider)).call(this, data));\n  }\n\n  (0, _createClass3.default)(OmicDivider, [{\n    key: 'render',\n    value: function render() {\n      return '<div class=\\'mdui-divider{{if \"true\" === inset}}-inset{{/if}}{{if theme}}-{{theme}}{{/if}}\\' style=\\'{{style}}\\'></div>';\n    }\n  }]);\n  return OmicDivider;\n}(_Omic3.default);\n\nexports.default = OmicDivider;\n\n/***/ }),\n\n/***/ 111:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _OmicDivider = __webpack_require__(110);\n\nvar _OmicDivider2 = _interopRequireDefault(_OmicDivider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  OmicDivider: _OmicDivider2.default,\n  $isPkg: true\n};\n\n/***/ }),\n\n/***/ 112:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _Omicx2 = __webpack_require__(20);\n\nvar _Omicx3 = _interopRequireDefault(_Omicx2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OmicCol = function (_Omicx) {\n  (0, _inherits3.default)(OmicCol, _Omicx);\n\n  function OmicCol(data) {\n    (0, _classCallCheck3.default)(this, OmicCol);\n\n    data = (0, _assign2.default)({\n      $__tag_closed_: false, //内部使用，标签是否闭合\n      $__tag_self_: OmicCol }, data);\n    return (0, _possibleConstructorReturn3.default)(this, (OmicCol.__proto__ || (0, _getPrototypeOf2.default)(OmicCol)).call(this, data));\n  }\n\n  (0, _createClass3.default)(OmicCol, [{\n    key: 'render',\n    value: function render() {\n      return '<div ref=\\'OmicCol-div-{{key}}\\'\\n      class=\\'mdui-col {{clazz}}\\'\\n      style=\\'{{style}}\\'\\n    >';\n    }\n  }]);\n  return OmicCol;\n}(_Omicx3.default);\n\nexports.default = OmicCol;\n\n/***/ }),\n\n/***/ 113:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _Omicx2 = __webpack_require__(20);\n\nvar _Omicx3 = _interopRequireDefault(_Omicx2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OmicContainer = function (_Omicx) {\n  (0, _inherits3.default)(OmicContainer, _Omicx);\n\n  function OmicContainer(data) {\n    (0, _classCallCheck3.default)(this, OmicContainer);\n\n    data = (0, _assign2.default)({\n      $__tag_closed_: false, //内部使用，标签是否闭合\n      $__tag_self_: OmicContainer, //内部使用，未闭合标签需设定\n      fluid: 'false'\n    }, data);\n    return (0, _possibleConstructorReturn3.default)(this, (OmicContainer.__proto__ || (0, _getPrototypeOf2.default)(OmicContainer)).call(this, data));\n  }\n\n  (0, _createClass3.default)(OmicContainer, [{\n    key: 'render',\n    value: function render() {\n      return '<div ref=\\'OmicContainer-div-{{key}}\\' class=\\'mdui-container{{if \"true\"===fluid}}-fluid{{/if}} {{clazz}}\\' style=\\'{{style}}\\'>';\n    }\n  }]);\n  return OmicContainer;\n}(_Omicx3.default);\n\nexports.default = OmicContainer;\n\n/***/ }),\n\n/***/ 114:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _Omicx2 = __webpack_require__(20);\n\nvar _Omicx3 = _interopRequireDefault(_Omicx2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OmicRow = function (_Omicx) {\n  (0, _inherits3.default)(OmicRow, _Omicx);\n\n  function OmicRow(data) {\n    (0, _classCallCheck3.default)(this, OmicRow);\n\n    data = (0, _assign2.default)({\n      $__tag_closed_: false, //内部使用，标签是否闭合\n      $__tag_self_: OmicRow, //内部使用，未闭合标签需设定\n      gapless: 'false', //消除列间距\n      xs: 0, //等分1-12，>0\n      sm: 0, //等分1-12，>600px\n      md: 0, //等分1-12，>1024px\n      lg: 0, //等分1-12，>1440px\n      xl: 0 //等分1-12，>1920px\n    }, data);\n    return (0, _possibleConstructorReturn3.default)(this, (OmicRow.__proto__ || (0, _getPrototypeOf2.default)(OmicRow)).call(this, data));\n  }\n\n  (0, _createClass3.default)(OmicRow, [{\n    key: 'render',\n    value: function render() {\n      return '<div ref=\\'OmicRow-div-{{key}}\\'\\n      class=\\'mdui-row{{if \"true\"===gapless}}mdui-row-gapless{{/if}}\\n      {{if xs > 0 && xs <= 12}}mdui-row-xs-{{xs}}{{/if}}\\n      {{if sm > 0 && sm <= 12}}mdui-row-sm-{{sm}}{{/if}}\\n      {{if md > 0 && md <= 12}}mdui-row-md-{{md}}{{/if}}\\n      {{if lg > 0 && lg <= 12}}mdui-row-lg-{{lg}}{{/if}}\\n      {{if xl > 0 && xl <= 12}}mdui-row-xl-{{xl}}{{/if}} {{clazz}}\\'\\n      style=\\'{{style}}\\'\\n    >';\n    }\n  }]);\n  return OmicRow;\n}(_Omicx3.default);\n\nexports.default = OmicRow;\n\n/***/ }),\n\n/***/ 115:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _OmicContainer = __webpack_require__(113);\n\nvar _OmicContainer2 = _interopRequireDefault(_OmicContainer);\n\nvar _OmicRow = __webpack_require__(114);\n\nvar _OmicRow2 = _interopRequireDefault(_OmicRow);\n\nvar _OmicCol = __webpack_require__(112);\n\nvar _OmicCol2 = _interopRequireDefault(_OmicCol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  OmicContainer: _OmicContainer2.default,\n  OmicRow: _OmicRow2.default,\n  OmicCol: _OmicCol2.default,\n  $isPkg: true\n};\n\n/***/ }),\n\n/***/ 116:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  email: '&#xe0be;',\n  account_circle: '&#xe853;'\n};\n\n/***/ }),\n\n/***/ 117:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _OmicIcon = __webpack_require__(52);\n\nvar _OmicIcon2 = _interopRequireDefault(_OmicIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  OmicIcon: _OmicIcon2.default,\n  $isPkg: true\n};\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _OmicInput2 = __webpack_require__(53);\n\nvar _OmicInput3 = _interopRequireDefault(_OmicInput2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OmicNumber = function (_OmicInput) {\n  (0, _inherits3.default)(OmicNumber, _OmicInput);\n\n  function OmicNumber(data) {\n    (0, _classCallCheck3.default)(this, OmicNumber);\n\n    data = data ? data : {};\n    data.type = 'number';\n    data.clazz = data.clazz ? 'mdui-text-right ' + data.clazz : 'mdui-text-right';\n    return (0, _possibleConstructorReturn3.default)(this, (OmicNumber.__proto__ || (0, _getPrototypeOf2.default)(OmicNumber)).call(this, data));\n  }\n\n  return OmicNumber;\n}(_OmicInput3.default);\n\nexports.default = OmicNumber;\n\n/***/ }),\n\n/***/ 119:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _OmicInput = __webpack_require__(53);\n\nvar _OmicInput2 = _interopRequireDefault(_OmicInput);\n\nvar _OmicNumber = __webpack_require__(118);\n\nvar _OmicNumber2 = _interopRequireDefault(_OmicNumber);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  OmicInput: _OmicInput2.default,\n  OmicNumber: _OmicNumber2.default,\n  $isPkg: true\n};\n\n/***/ }),\n\n/***/ 120:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _Omic2 = __webpack_require__(7);\n\nvar _Omic3 = _interopRequireDefault(_Omic2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OmicEnd = function (_Omic) {\n  (0, _inherits3.default)(OmicEnd, _Omic);\n\n  function OmicEnd(data) {\n    (0, _classCallCheck3.default)(this, OmicEnd);\n\n    data = (0, _assign2.default)({\n      $__all_closed_: true\n    }, data);\n    return (0, _possibleConstructorReturn3.default)(this, (OmicEnd.__proto__ || (0, _getPrototypeOf2.default)(OmicEnd)).call(this, data));\n  }\n\n  (0, _createClass3.default)(OmicEnd, [{\n    key: 'beforeRender',\n    value: function beforeRender() {\n      var sbilings = this.parent.children;\n      var len = sbilings.length;\n      for (var i = len - 1; i > 0; i--) {\n        var t = sbilings[i];\n        if (!t.data.$__tag_closed_) {\n          t.data.$__tag_closed_ = true;\n          this.data.$__all_closed_ = false;\n          break;\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return '{{if !$__all_closed_}}</div>{{/if}}';\n    }\n  }]);\n  return OmicEnd;\n}(_Omic3.default);\n\nexports.default = OmicEnd;\n\n/***/ }),\n\n/***/ 121:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _OmicEnd = __webpack_require__(120);\n\nvar _OmicEnd2 = _interopRequireDefault(_OmicEnd);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  OmicEnd: _OmicEnd2.default,\n  $isPkg: true\n};\n\n/***/ }),\n\n/***/ 122:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _omi = __webpack_require__(41);\n\nvar _omi2 = _interopRequireDefault(_omi);\n\nvar _templateDebug = __webpack_require__(55);\n\nvar _templateDebug2 = _interopRequireDefault(_templateDebug);\n\nvar _components = __webpack_require__(56);\n\nvar _components2 = _interopRequireDefault(_components);\n\nvar _Omic = __webpack_require__(7);\n\nvar _Omic2 = _interopRequireDefault(_Omic);\n\nvar _Omicx = __webpack_require__(20);\n\nvar _Omicx2 = _interopRequireDefault(_Omicx);\n\nvar _Utils = __webpack_require__(57);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_omi2.default.template = function (tpl, data) {\n  return _templateDebug2.default.compile(tpl)(data);\n};\n\nvar components = {\n  Components: _components2.default\n};\n\nvar install = function install(Omi) {\n  _Utils2.default.eachInstall(Omi, components, '');\n};\n\n// auto install\nif (typeof window !== 'undefined' && window.Omi) {\n  install(window.Omi);\n}\n\nexports.default = {\n  Omic: _Omic2.default,\n  Omicx: _Omicx2.default,\n  Utils: _Utils2.default,\n  install: install\n};\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _Omic2 = __webpack_require__(7);\n\nvar _Omic3 = _interopRequireDefault(_Omic2);\n\nvar _OmicUitls = __webpack_require__(54);\n\nvar _OmicUitls2 = _interopRequireDefault(_OmicUitls);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Omicx = function (_Omic) {\n  (0, _inherits3.default)(Omicx, _Omic);\n\n  function Omicx(data) {\n    (0, _classCallCheck3.default)(this, Omicx);\n\n    data = (0, _assign2.default)({\n      $__tag_closed_: false, //内部使用，标签是否闭合\n      $__tag_self_: Omicx //内部使用，未闭合标签需设定\n    }, data);\n    return (0, _possibleConstructorReturn3.default)(this, (Omicx.__proto__ || (0, _getPrototypeOf2.default)(Omicx)).call(this, data));\n  }\n\n  (0, _createClass3.default)(Omicx, [{\n    key: 'beforeRender',\n    value: function beforeRender() {\n      //渲染内容前调用,非自闭合标签需先执行super.beforeRender()\n      _OmicUitls2.default.injectEndTag(this); // 闭合兄弟层div\n    }\n  }]);\n  return Omicx;\n}(_Omic3.default);\n\nexports.default = Omicx;\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _Omic2 = __webpack_require__(7);\n\nvar _Omic3 = _interopRequireDefault(_Omic2);\n\nvar _Icons = __webpack_require__(116);\n\nvar _Icons2 = _interopRequireDefault(_Icons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OmicIcon = function (_Omic) {\n  (0, _inherits3.default)(OmicIcon, _Omic);\n\n  function OmicIcon(data) {\n    (0, _classCallCheck3.default)(this, OmicIcon);\n\n    data = (0, _assign2.default)({\n      icon: '',\n      align: ''\n    }, data);\n    return (0, _possibleConstructorReturn3.default)(this, (OmicIcon.__proto__ || (0, _getPrototypeOf2.default)(OmicIcon)).call(this, data));\n  }\n\n  (0, _createClass3.default)(OmicIcon, [{\n    key: 'install',\n    value: function install() {\n      if (_Icons2.default[this.data.icon]) {\n        this.data.icon = _Icons2.default[this.data.icon];\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return '{{if icon}} <i class=\\'mdui-icon material-icons {{if align}}mdui-icon-{{align}}{{/if}} {{clazz}}\\' style=\\'{{style}}\\'>{{icon}}</i> {{/if}}';\n    }\n  }]);\n  return OmicIcon;\n}(_Omic3.default);\n\nexports.default = OmicIcon;\n\n/***/ }),\n\n/***/ 53:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get2 = __webpack_require__(108);\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _Omic2 = __webpack_require__(7);\n\nvar _Omic3 = _interopRequireDefault(_Omic2);\n\nvar _OmicIcon = __webpack_require__(52);\n\nvar _OmicIcon2 = _interopRequireDefault(_OmicIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OmicInput = function (_Omic) {\n  (0, _inherits3.default)(OmicInput, _Omic);\n\n  function OmicInput(data) {\n    (0, _classCallCheck3.default)(this, OmicInput);\n\n    data = (0, _assign2.default)({\n      value: '',\n      type: 'text',\n      label: null,\n      icon: null,\n      multiple: false,\n      maxlength: null,\n      placeholder: null,\n      floating: false,\n      required: false,\n      pattern: null,\n      msg: null\n    }, data);\n    return (0, _possibleConstructorReturn3.default)(this, (OmicInput.__proto__ || (0, _getPrototypeOf2.default)(OmicInput)).call(this, data));\n  }\n\n  (0, _createClass3.default)(OmicInput, [{\n    key: 'install',\n    value: function install() {\n      (0, _get3.default)(OmicInput.prototype.__proto__ || (0, _getPrototypeOf2.default)(OmicInput.prototype), '$makeHTML', this).call(this, 'omic-icon', _OmicIcon2.default);\n    }\n  }, {\n    key: 'installed',\n    value: function installed() {\n      if (this.data.pattern) {\n        this.refs['OmicInput-input-' + this.data.key].pattern = this.data.pattern;\n      }\n    }\n  }, {\n    key: 'style',\n    value: function style() {\n      return '\\n      .icon-middle {\\n        top: 36%;\\n      }\\n    ';\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(target, event) {\n      this.data.value = target.value;\n      if (this.onchange) {\n        this.onchange(target, event, this.data);\n      }\n    }\n  }, {\n    key: 'handleBlur',\n    value: function handleBlur(target, event) {\n      if (this.onblur) {\n        this.onblur(target, event, this.data);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return '<div class=\\'mdui-textfield {{if \\'true\\'===floating}}mdui-textfield-floating-label{{/if}}\\'>\\n      {{if icon}} <omic-icon data-icon=\\'{{icon}}\\' data-clazz=\\'icon-middle\\'/> {{/if}}\\n      {{if label}} <label class=\\'mdui-textfield-label\\'>{{label}}</label> {{/if}}\\n      {{if \\'true\\'===multiple}}\\n        <textarea ref=\\'OmicInput-input-{{key}}\\' id=\\'{{id}}\\' name=\\'{{name}}\\' placeholder=\\'{{placeholder}}\\'\\n          class=\\'mdui-textfield-input {{clazz}}\\' style=\\'{{style}}\\'\\n          onchange=\\'handleChange(this, event)\\' onblur=\\'handleBlur(this,event)\\'\\n          {{if maxlength&&maxlength>0}} maxlength=\\'{{maxlength}}\\' {{/if}}\\n          {{if \\'true\\'===disabled}} disabled {{/if}}\\n          {{if \\'true\\'===required}} required {{/if}}\\n          value=\\'{{value}}\\'\\n        ></textarea>\\n      {{else}}\\n        <input ref=\\'OmicInput-input-{{key}}\\' id=\\'{{id}}\\' name=\\'{{name}}\\' value=\\'{{value}}\\'\\n          type=\\'{{type}}\\' placeholder=\\'{{placeholder}}\\' class=\\'mdui-textfield-input {{clazz}}\\'\\n          style=\\'{{style}}\\' onchange=\\'handleChange(this, event)\\' onblur=\\'handleBlur(this,event)\\'\\n          {{if maxlength&&maxlength>0}} maxlength=\\'{{maxlength}}\\' {{/if}}\\n          {{if \\'true\\'===disabled}} disabled {{/if}}\\n          {{if \\'true\\'===required}} required {{/if}}\\n        />\\n      {{/if}}\\n      {{if msg}}\\n        <div class=\"mdui-textfield-error\">{{msg}}</div>\\n      {{/if}}\\n    </div>';\n    }\n  }]);\n  return OmicInput;\n}(_Omic3.default);\n\nexports.default = OmicInput;\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Omic = __webpack_require__(7);\n\nvar _Omic2 = _interopRequireDefault(_Omic);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  copyEvent: function copyEvent(target) {\n    // data中事件方法copy到组件\n    if (target && target instanceof _Omic2.default) {\n      var data = target.data;\n      for (var key in data) {\n        if (data.hasOwnProperty(key) && key.indexOf('on') === 0 && data[key] instanceof Function) {\n          target[key] = data[key];\n        }\n      }\n    }\n  },\n  injectEndTag: function injectEndTag(target) {\n    // 插入</div>\n    if (!target.data.$__tag_closed_) {\n      var sbilings = target.parent.children;\n      var len = sbilings.length;\n      for (var i = len - 2; i > 0; i--) {\n        var t = sbilings[i];\n        if (!t.data.$__tag_closed_) {\n          if (t instanceof target.data.$__tag_self_) {\n            (function () {\n              t.data.$__tag_closed_ = true;\n              var old = target.render;\n              target.render = function () {\n                return '</div>' + old();\n              };\n            })();\n          }\n          break;\n        }\n      }\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 55:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof2 = __webpack_require__(25);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*!\n * artTemplate - Template Engine\n * https://github.com/aui/artTemplate\n * Released under the MIT, BSD, and GPL Licenses\n */\n\n!function () {\n\n    /**\n     * 模板引擎\n     * @name    template\n     * @param   {String}            模板名\n     * @param   {Object, String}    数据。如果为字符串则编译并缓存编译结果\n     * @return  {String, Function}  渲染好的HTML字符串或者渲染方法\n     */\n    var template = function template(filename, content) {\n        return typeof content === 'string' ? compile(content, {\n            filename: filename\n        }) : renderFile(filename, content);\n    };\n\n    template.version = '3.0.0';\n\n    /**\n     * 设置全局配置\n     * @name    template.config\n     * @param   {String}    名称\n     * @param   {Any}       值\n     */\n    template.config = function (name, value) {\n        defaults[name] = value;\n    };\n\n    var defaults = template.defaults = {\n        openTag: '<%', // 逻辑语法开始标签\n        closeTag: '%>', // 逻辑语法结束标签\n        escape: true, // 是否编码输出变量的 HTML 字符\n        cache: true, // 是否开启缓存（依赖 options 的 filename 字段）\n        compress: false, // 是否压缩输出\n        parser: null // 自定义语法格式器 @see: template-syntax.js\n    };\n\n    var cacheStore = template.cache = {};\n\n    /**\n     * 渲染模板\n     * @name    template.render\n     * @param   {String}    模板\n     * @param   {Object}    数据\n     * @return  {String}    渲染好的字符串\n     */\n    template.render = function (source, options) {\n        return compile(source)(options);\n    };\n\n    /**\n     * 渲染模板(根据模板名)\n     * @name    template.render\n     * @param   {String}    模板名\n     * @param   {Object}    数据\n     * @return  {String}    渲染好的字符串\n     */\n    var renderFile = template.renderFile = function (filename, data) {\n        var fn = template.get(filename) || showDebugInfo({\n            filename: filename,\n            name: 'Render Error',\n            message: 'Template not found'\n        });\n        return data ? fn(data) : fn;\n    };\n\n    /**\n     * 获取编译缓存（可由外部重写此方法）\n     * @param   {String}    模板名\n     * @param   {Function}  编译好的函数\n     */\n    template.get = function (filename) {\n\n        var cache;\n\n        if (cacheStore[filename]) {\n            // 使用内存缓存\n            cache = cacheStore[filename];\n        } else if ((typeof document === 'undefined' ? 'undefined' : (0, _typeof3.default)(document)) === 'object') {\n            // 加载模板并编译\n            var elem = document.getElementById(filename);\n\n            if (elem) {\n                var source = (elem.value || elem.innerHTML).replace(/^\\s*|\\s*$/g, '');\n                cache = compile(source, {\n                    filename: filename\n                });\n            }\n        }\n\n        return cache;\n    };\n\n    var toString = function toString(value, type) {\n\n        if (typeof value !== 'string') {\n\n            type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);\n            if (type === 'number') {\n                value += '';\n            } else if (type === 'function') {\n                value = toString(value.call(value));\n            } else {\n                value = '';\n            }\n        }\n\n        return value;\n    };\n\n    var escapeMap = {\n        \"<\": \"&#60;\",\n        \">\": \"&#62;\",\n        '\"': \"&#34;\",\n        \"'\": \"&#39;\",\n        \"&\": \"&#38;\"\n    };\n\n    var escapeFn = function escapeFn(s) {\n        return escapeMap[s];\n    };\n\n    var escapeHTML = function escapeHTML(content) {\n        return toString(content).replace(/&(?![\\w#]+;)|[<>\"']/g, escapeFn);\n    };\n\n    var isArray = Array.isArray || function (obj) {\n        return {}.toString.call(obj) === '[object Array]';\n    };\n\n    var each = function each(data, callback) {\n        var i, len;\n        if (isArray(data)) {\n            for (i = 0, len = data.length; i < len; i++) {\n                callback.call(data, data[i], i, data);\n            }\n        } else {\n            for (i in data) {\n                callback.call(data, data[i], i);\n            }\n        }\n    };\n\n    var utils = template.utils = {\n\n        $helpers: {},\n\n        $include: renderFile,\n\n        $string: toString,\n\n        $escape: escapeHTML,\n\n        $each: each\n\n    }; /**\n       * 添加模板辅助方法\n       * @name    template.helper\n       * @param   {String}    名称\n       * @param   {Function}  方法\n       */\n    template.helper = function (name, helper) {\n        helpers[name] = helper;\n    };\n\n    var helpers = template.helpers = utils.$helpers;\n\n    /**\n     * 模板错误事件（可由外部重写此方法）\n     * @name    template.onerror\n     * @event\n     */\n    template.onerror = function (e) {\n        var message = 'Template Error\\n\\n';\n        for (var name in e) {\n            message += '<' + name + '>\\n' + e[name] + '\\n\\n';\n        }\n\n        if ((typeof console === 'undefined' ? 'undefined' : (0, _typeof3.default)(console)) === 'object') {\n            console.error(message);\n        }\n    };\n\n    // 模板调试器\n    var showDebugInfo = function showDebugInfo(e) {\n\n        template.onerror(e);\n\n        return function () {\n            return '{Template Error}';\n        };\n    };\n\n    /**\n     * 编译模板\n     * 2012-6-6 @TooBug: define 方法名改为 compile，与 Node Express 保持一致\n     * @name    template.compile\n     * @param   {String}    模板字符串\n     * @param   {Object}    编译选项\n     *\n     *      - openTag       {String}\n     *      - closeTag      {String}\n     *      - filename      {String}\n     *      - escape        {Boolean}\n     *      - compress      {Boolean}\n     *      - debug         {Boolean}\n     *      - cache         {Boolean}\n     *      - parser        {Function}\n     *\n     * @return  {Function}  渲染方法\n     */\n    var compile = template.compile = function (source, options) {\n\n        // 合并默认配置\n        options = options || {};\n        for (var name in defaults) {\n            if (options[name] === undefined) {\n                options[name] = defaults[name];\n            }\n        }\n\n        var filename = options.filename;\n\n        try {\n\n            var Render = compiler(source, options);\n        } catch (e) {\n\n            e.filename = filename || 'anonymous';\n            e.name = 'Syntax Error';\n\n            return showDebugInfo(e);\n        }\n\n        // 对编译结果进行一次包装\n\n        function render(data) {\n\n            try {\n\n                return new Render(data, filename) + '';\n            } catch (e) {\n\n                // 运行时出错后自动开启调试模式重新编译\n                if (!options.debug) {\n                    options.debug = true;\n                    return compile(source, options)(data);\n                }\n\n                return showDebugInfo(e)();\n            }\n        }\n\n        render.prototype = Render.prototype;\n        render.toString = function () {\n            return Render.toString();\n        };\n\n        if (filename && options.cache) {\n            cacheStore[filename] = render;\n        }\n\n        return render;\n    };\n\n    // 数组迭代\n    var forEach = utils.$each;\n\n    // 静态分析模板变量\n    var KEYWORDS =\n    // 关键字\n    'break,case,catch,continue,debugger,default,delete,do,else,false' + ',finally,for,function,if,in,instanceof,new,null,return,switch,this' + ',throw,true,try,typeof,var,void,while,with'\n\n    // 保留字\n    + ',abstract,boolean,byte,char,class,const,double,enum,export,extends' + ',final,float,goto,implements,import,int,interface,long,native' + ',package,private,protected,public,short,static,super,synchronized' + ',throws,transient,volatile'\n\n    // ECMA 5 - use strict\n    + ',arguments,let,yield' + ',undefined';\n\n    var REMOVE_RE = /\\/\\*[\\w\\W]*?\\*\\/|\\/\\/[^\\n]*\\n|\\/\\/[^\\n]*$|\"(?:[^\"\\\\]|\\\\[\\w\\W])*\"|'(?:[^'\\\\]|\\\\[\\w\\W])*'|\\s*\\.\\s*[$\\w\\.]+/g;\n    var SPLIT_RE = /[^\\w$]+/g;\n    var KEYWORDS_RE = new RegExp([\"\\\\b\" + KEYWORDS.replace(/,/g, '\\\\b|\\\\b') + \"\\\\b\"].join('|'), 'g');\n    var NUMBER_RE = /^\\d[^,]*|,\\d[^,]*/g;\n    var BOUNDARY_RE = /^,+|,+$/g;\n    var SPLIT2_RE = /^$|,+/;\n\n    // 获取变量\n    function getVariable(code) {\n        return code.replace(REMOVE_RE, '').replace(SPLIT_RE, ',').replace(KEYWORDS_RE, '').replace(NUMBER_RE, '').replace(BOUNDARY_RE, '').split(SPLIT2_RE);\n    };\n\n    // 字符串转义\n    function stringify(code) {\n        return \"'\" + code\n        // 单引号与反斜杠转义\n        .replace(/('|\\\\)/g, '\\\\$1')\n        // 换行符转义(windows + linux)\n        .replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n') + \"'\";\n    }\n\n    function compiler(source, options) {\n\n        var debug = options.debug;\n        var openTag = options.openTag;\n        var closeTag = options.closeTag;\n        var parser = options.parser;\n        var compress = options.compress;\n        var escape = options.escape;\n\n        var line = 1;\n        var uniq = { $data: 1, $filename: 1, $utils: 1, $helpers: 1, $out: 1, $line: 1 };\n\n        var isNewEngine = ''.trim; // '__proto__' in {}\n        var replaces = isNewEngine ? [\"$out='';\", \"$out+=\", \";\", \"$out\"] : [\"$out=[];\", \"$out.push(\", \");\", \"$out.join('')\"];\n\n        var concat = isNewEngine ? \"$out+=text;return $out;\" : \"$out.push(text);\";\n\n        var print = \"function(){\" + \"var text=''.concat.apply('',arguments);\" + concat + \"}\";\n\n        var include = \"function(filename,data){\" + \"data=data||$data;\" + \"var text=$utils.$include(filename,data,$filename);\" + concat + \"}\";\n\n        var headerCode = \"'use strict';\" + \"var $utils=this,$helpers=$utils.$helpers,\" + (debug ? \"$line=0,\" : \"\");\n\n        var mainCode = replaces[0];\n\n        var footerCode = \"return new String(\" + replaces[3] + \");\";\n\n        // html与逻辑语法分离\n        forEach(source.split(openTag), function (code) {\n            code = code.split(closeTag);\n\n            var $0 = code[0];\n            var $1 = code[1];\n\n            // code: [html]\n            if (code.length === 1) {\n\n                mainCode += html($0);\n\n                // code: [logic, html]\n            } else {\n\n                mainCode += logic($0);\n\n                if ($1) {\n                    mainCode += html($1);\n                }\n            }\n        });\n\n        var code = headerCode + mainCode + footerCode;\n\n        // 调试语句\n        if (debug) {\n            code = \"try{\" + code + \"}catch(e){\" + \"throw {\" + \"filename:$filename,\" + \"name:'Render Error',\" + \"message:e.message,\" + \"line:$line,\" + \"source:\" + stringify(source) + \".split(/\\\\n/)[$line-1].replace(/^\\\\s+/,'')\" + \"};\" + \"}\";\n        }\n\n        try {\n\n            var Render = new Function(\"$data\", \"$filename\", code);\n            Render.prototype = utils;\n\n            return Render;\n        } catch (e) {\n            e.temp = \"function anonymous($data,$filename) {\" + code + \"}\";\n            throw e;\n        }\n\n        // 处理 HTML 语句\n        function html(code) {\n\n            // 记录行号\n            line += code.split(/\\n/).length - 1;\n\n            // 压缩多余空白与注释\n            if (compress) {\n                code = code.replace(/\\s+/g, ' ').replace(/<!--[\\w\\W]*?-->/g, '');\n            }\n\n            if (code) {\n                code = replaces[1] + stringify(code) + replaces[2] + \"\\n\";\n            }\n\n            return code;\n        }\n\n        // 处理逻辑语句\n        function logic(code) {\n\n            var thisLine = line;\n\n            if (parser) {\n\n                // 语法转换插件钩子\n                code = parser(code, options);\n            } else if (debug) {\n\n                // 记录行号\n                code = code.replace(/\\n/g, function () {\n                    line++;\n                    return \"$line=\" + line + \";\";\n                });\n            }\n\n            // 输出语句. 编码: <%=value%> 不编码:<%=#value%>\n            // <%=#value%> 等同 v2.0.3 之前的 <%==value%>\n            if (code.indexOf('=') === 0) {\n\n                var escapeSyntax = escape && !/^=[=#]/.test(code);\n\n                code = code.replace(/^=[=#]?|[\\s;]*$/g, '');\n\n                // 对内容编码\n                if (escapeSyntax) {\n\n                    var name = code.replace(/\\s*\\([^\\)]+\\)/, '');\n\n                    // 排除 utils.* | include | print\n\n                    if (!utils[name] && !/^(include|print)$/.test(name)) {\n                        code = \"$escape(\" + code + \")\";\n                    }\n\n                    // 不编码\n                } else {\n                    code = \"$string(\" + code + \")\";\n                }\n\n                code = replaces[1] + code + replaces[2];\n            }\n\n            if (debug) {\n                code = \"$line=\" + thisLine + \";\" + code;\n            }\n\n            // 提取模板中的变量名\n            forEach(getVariable(code), function (name) {\n\n                // name 值可能为空，在安卓低版本浏览器下\n                if (!name || uniq[name]) {\n                    return;\n                }\n\n                var value;\n\n                // 声明模板变量\n                // 赋值优先级:\n                // [include, print] > utils > helpers > data\n                if (name === 'print') {\n\n                    value = print;\n                } else if (name === 'include') {\n\n                    value = include;\n                } else if (utils[name]) {\n\n                    value = \"$utils.\" + name;\n                } else if (helpers[name]) {\n\n                    value = \"$helpers.\" + name;\n                } else {\n\n                    value = \"$data.\" + name;\n                }\n\n                headerCode += name + \"=\" + value + \",\";\n                uniq[name] = true;\n            });\n\n            return code + \"\\n\";\n        }\n    };\n\n    // 定义模板引擎的语法\n\n\n    defaults.openTag = '{{';\n    defaults.closeTag = '}}';\n\n    var filtered = function filtered(js, filter) {\n        var parts = filter.split(':');\n        var name = parts.shift();\n        var args = parts.join(':') || '';\n\n        if (args) {\n            args = ', ' + args;\n        }\n\n        return '$helpers.' + name + '(' + js + args + ')';\n    };\n\n    defaults.parser = function (code, options) {\n\n        // var match = code.match(/([\\w\\$]*)(\\b.*)/);\n        // var key = match[1];\n        // var args = match[2];\n        // var split = args.split(' ');\n        // split.shift();\n\n        code = code.replace(/^\\s/, '');\n\n        var split = code.split(' ');\n        var key = split.shift();\n        var args = split.join(' ');\n\n        switch (key) {\n\n            case 'if':\n\n                code = 'if(' + args + '){';\n                break;\n\n            case 'else':\n\n                if (split.shift() === 'if') {\n                    split = ' if(' + split.join(' ') + ')';\n                } else {\n                    split = '';\n                }\n\n                code = '}else' + split + '{';\n                break;\n\n            case '/if':\n\n                code = '}';\n                break;\n\n            case 'each':\n\n                var object = split[0] || '$data';\n                var as = split[1] || 'as';\n                var value = split[2] || '$value';\n                var index = split[3] || '$index';\n\n                var param = value + ',' + index;\n\n                if (as !== 'as') {\n                    object = '[]';\n                }\n\n                code = '$each(' + object + ',function(' + param + '){';\n                break;\n\n            case '/each':\n\n                code = '});';\n                break;\n\n            case 'echo':\n\n                code = 'print(' + args + ');';\n                break;\n\n            case 'print':\n            case 'include':\n\n                code = key + '(' + split.join(',') + ');';\n                break;\n\n            default:\n\n                // 过滤器（辅助方法）\n                // {{value | filterA:'abcd' | filterB}}\n                // >>> $helpers.filterB($helpers.filterA(value, 'abcd'))\n                // TODO: {{ddd||aaa}} 不包含空格\n                if (/^\\s*\\|\\s*[\\w\\$]/.test(args)) {\n\n                    var escape = true;\n\n                    // {{#value | link}}\n                    if (code.indexOf('#') === 0) {\n                        code = code.substr(1);\n                        escape = false;\n                    }\n\n                    var i = 0;\n                    var array = code.split('|');\n                    var len = array.length;\n                    var val = array[i++];\n\n                    for (; i < len; i++) {\n                        val = filtered(val, array[i]);\n                    }\n\n                    code = (escape ? '=' : '=#') + val;\n\n                    // 即将弃用 {{helperName value}}\n                } else if (template.helpers[key]) {\n\n                    code = '=#' + key + '(' + split.join(',') + ');';\n\n                    // 内容直接输出 {{value}}\n                } else {\n\n                    code = '=' + code;\n                }\n\n                break;\n        }\n\n        return code;\n    };\n\n    // RequireJS && SeaJS\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return template;\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n        // NodeJS\n    } else if (typeof exports !== 'undefined') {\n        module.exports = template;\n    } else {\n        this.template = template;\n    }\n}();\n\n/***/ }),\n\n/***/ 56:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _icon = __webpack_require__(117);\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _input = __webpack_require__(119);\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _grid = __webpack_require__(115);\n\nvar _grid2 = _interopRequireDefault(_grid);\n\nvar _other = __webpack_require__(121);\n\nvar _other2 = _interopRequireDefault(_other);\n\nvar _divider = __webpack_require__(111);\n\nvar _divider2 = _interopRequireDefault(_divider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  OmicIcon: _icon2.default,\n  OmicInput: _input2.default,\n  OmicGrid: _grid2.default,\n  OmicOther: _other2.default,\n  OmicDivider: _divider2.default,\n  $isPkg: true\n};\n\n/***/ }),\n\n/***/ 57:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(104);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _Omic = __webpack_require__(7);\n\nvar _Omic2 = _interopRequireDefault(_Omic);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  toPascalCase: function toPascalCase(original) {\n    // 连字符转Pascal命名\n    original = this.toCamelCase(original);\n    if (original) {\n      return original.slice(0, 1).toUpperCase() + original.slice(1);\n    }\n  },\n  toCamelCase: function toCamelCase(original) {\n    // 连字符转为驼峰命名\n    if (original) {\n      return original.replace(/-(\\w)/g, function (all, letter) {\n        return letter.toUpperCase();\n      });\n    }\n  },\n  toHyphenCase: function toHyphenCase(original) {\n    // Pascal或驼峰转为连字符\n    if (original) {\n      original = original.slice(0, 1).toLowerCase() + original.slice(1);\n      return original.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n    }\n  },\n  eachInstall: function eachInstall(Omi, components) {\n    var _this = this;\n\n    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n    if (Omi && Omi.makeHTML) {\n      (0, _keys2.default)(components).forEach(function (key) {\n        var subComponent = components[key];\n        if (subComponent.$isPkg) {\n          _this.eachInstall(Omi, subComponent, prefix);\n        } else if (subComponent instanceof Function) {\n          if (prefix && !(prefix.lastIndexOf('-') === prefix.length - 1)) {\n            prefix = prefix + '-';\n          }\n          var name = prefix + _this.toHyphenCase(key);\n          Omi.makeHTML(name, subComponent);\n        }\n      });\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 59:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 60:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(1);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _assign = __webpack_require__(5);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(6);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _omi = __webpack_require__(41);\n\nvar _omi2 = _interopRequireDefault(_omi);\n\n__webpack_require__(59);\n\n__webpack_require__(109);\n\n__webpack_require__(60);\n\nvar _OmicUitls = __webpack_require__(54);\n\nvar _OmicUitls2 = _interopRequireDefault(_OmicUitls);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Omic = function (_Omi$Component) {\n  (0, _inherits3.default)(Omic, _Omi$Component);\n\n  function Omic(data) {\n    (0, _classCallCheck3.default)(this, Omic);\n\n    //构造函数\n    var key = Math.round(10000000000000000 * Math.random()); //随机数，组件唯一标识\n    data = (0, _assign2.default)({\n      $__tag_closed_: true, //内部使用，标签是否闭合\n      $__tag_self_: Omic, //内部使用，未闭合标签需设定\n      key: key,\n      id: 'Omic-' + key,\n      name: 'Omic-' + key,\n      clazz: '',\n      style: '',\n      disabled: ''\n    }, data);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Omic.__proto__ || (0, _getPrototypeOf2.default)(Omic)).call(this, data));\n\n    _OmicUitls2.default.copyEvent(_this); //data中事件方法copy到组件\n    return _this;\n  }\n\n  (0, _createClass3.default)(Omic, [{\n    key: 'install',\n    value: function install() {} //初始化安装，传入数据处理\n\n  }, {\n    key: 'installed',\n    value: function installed() {} //安装完成，HTML插入页面后执行\n\n  }, {\n    key: 'uninstall',\n    value: function uninstall() {} //卸载，执行remove时触发\n\n  }, {\n    key: 'beforeUpdate',\n    value: function beforeUpdate() {} //更新前\n\n  }, {\n    key: 'afterUpdate',\n    value: function afterUpdate() {} //更新后\n\n  }, {\n    key: 'style',\n    value: function style() {} //样式\n\n  }, {\n    key: 'beforeRender',\n    value: function beforeRender() {} //渲染内容前调用\n\n  }, {\n    key: 'render',\n    value: function render() {} //渲染内容\n\n  }, {\n    key: '$makeHTML',\n    value: function $makeHTML(name, ctor) {\n      _omi2.default.makeHTML(name, ctor); //制作成可以声明式的标签\n    }\n  }, {\n    key: '$get',\n    value: function $get(omiId) {\n      return _omi2.default.get(omiId); //通过组件声明的omi-id获取到对应的实例\n    }\n  }]);\n  return Omic;\n}(_omi2.default.Component);\n\nexports.default = Omic;\n\n/***/ })\n\n},[122]);\n});\n\n\n// WEBPACK FOOTER //\n// js/omic.js","/*!\n * mdui v0.1.2 (http://mdui.org)\n * Copyright 2016-2017 zdhxiong\n * Licensed under MIT\n */\n/* jshint ignore:start */\n;(function (window, document, undefined) {\n  'use strict';\n\n  /* jshint ignore:end */\n  var mdui = {};\n\n  /**\n   * =============================================================================\n   * ************   Dom 操作库   ************\n   * =============================================================================\n   *\n   * Inspired by https://github.com/nolimits4web/Framework7\n   * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n   */\n  var $ = {};\n  (function () {\n\n    /**\n     * 是否是数组\n     * @param arr\n     * @returns {boolean}\n     */\n    $.isArray = function (arr) {\n      return Object.prototype.toString.apply(arr) === '[object Array]';\n    };\n\n    /**\n     * nodeList 转换为数组\n     * @param nodeList\n     * @returns {Array}\n     */\n    $.toArray = function (nodeList) {\n      var i;\n      var arr = [];\n      for (i = 0; i < nodeList.length; i++) {\n        if (nodeList[i]) {\n          arr.push(nodeList[i]);\n        }\n      }\n\n      return arr;\n    };\n\n    /**\n     * 循环数组或对象\n     * @param obj\n     * @param callback\n     */\n    $.each = function (obj, callback) {\n      var i;\n      var prop;\n      if (!obj) {\n        return;\n      }\n\n      if ($.isArray(obj)) {\n        // Array\n        for (i = 0; i < obj.length; i++) {\n          if (callback(i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        // Object\n        for (prop in obj) {\n          if (obj.hasOwnProperty(prop)) {\n            if (callback(prop, obj[prop]) === false) {\n              break;\n            }\n          }\n        }\n      }\n    };\n\n    /**\n     * 去除数组中的重复值\n     * @param arr\n     * @returns {Array}\n     */\n    $.unique = function (arr) {\n      var unique = [];\n      for (var i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) === -1) {\n          unique.push(arr[i]);\n        }\n      }\n\n      return unique;\n    };\n\n    var _queueData = [];\n    /**\n     * 写入队列\n     * @param name 队列名\n     * @param func 函数名，没有函数名时，返回所有队列\n     */\n    $.queue = function (name, func) {\n      if (typeof _queueData[name] === 'undefined') {\n        _queueData[name] = [];\n      }\n\n      if (typeof func === 'undefined') {\n        return _queueData[name];\n      }\n\n      _queueData[name].push(func);\n    };\n\n    /**\n     * 从队列中移除一个函数，并执行该函数\n     * @param name 队列名\n     */\n    $.dequeue = function (name) {\n      if (typeof _queueData[name] !== 'undefined' && _queueData[name].length) {\n        (_queueData[name].shift())();\n      }\n    };\n\n    /**\n     * 合并参数\n     * @param defaults\n     * @param params\n     * @returns {*}\n     */\n    $.extend = function (defaults, params) {\n      $.each(defaults, function (key, value) {\n        if (typeof params[key] === 'undefined') {\n          params[key] = value;\n        }\n      });\n\n      return params;\n    };\n\n    /**\n     * 在 dom 元素上存储、读取数据\n     * @param dom\n     * @param key\n     * @param value\n     *\n     * $.data(dom, key);          读取指定键名的数据\n     * $.data(dom, key, value);   写入指定键名的数据\n     * $.data(dom, key, null);    删除指定键名的数据\n     * $.data(dom, object);       批量写入数据\n     */\n    $.data = function (dom, key, value) {\n      if (!dom.mduiDomDataStorage) {\n        dom.mduiDomDataStorage = {};\n      }\n\n      var dataStorage = dom.mduiDomDataStorage;\n\n      if (typeof value === 'undefined') {\n\n        // 读取单个数据\n        if (typeof key === 'string') {\n          if (key in dataStorage) {\n            return dataStorage[key];\n          } else {\n            return null;\n          }\n        }\n\n        // 批量写入数据\n        else if (typeof key === 'object') {\n          $.each(key, function (k, v) {\n            dataStorage[k] = v;\n          });\n        }\n      }\n\n      // 删除数据\n      else if (value === null) {\n        if (dataStorage[key]) {\n          dataStorage[key] = null;\n          delete dataStorage[key];\n        }\n      }\n\n      // 写入数据\n      else {\n        dataStorage[key] = value;\n      }\n    };\n\n    /**\n     * 获取元素的最终样式\n     * @param dom\n     * @param prop 可选\n     * @returns {*}\n     */\n    $.getStyle = function (dom, prop) {\n      var style = window.getComputedStyle(dom, null);\n      if (arguments.length === 1) {\n        return style;\n      }\n\n      return style.getPropertyValue(prop);\n    };\n\n    /**\n     * 获取元素相对于 document 的偏移\n     * @param dom\n     * @returns {{top: number, left: number}}\n     */\n    $.offset = function (dom) {\n      var box = dom.getBoundingClientRect();\n      var body = document.body;\n      var clientTop  = dom.clientTop  || body.clientTop  || 0;\n      var clientLeft = dom.clientLeft || body.clientLeft || 0;\n      var scrollTop  = window.pageYOffset || dom.scrollTop;\n      var scrollLeft = window.pageXOffset || dom.scrollLeft;\n      return {\n        top: box.top  + scrollTop  - clientTop,\n        left: box.left + scrollLeft - clientLeft,\n      };\n    };\n\n    /**\n     * 设置 transform 属性\n     * @param dom\n     * @param transform\n     */\n    $.transform = function (dom, transform) {\n      dom.style.webkitTransform =\n        dom.style.transform = transform;\n    };\n\n    /**\n     * 设置 transform-origin 属性\n     * @param dom\n     * @param transformOrigin\n     */\n    $.transformOrigin = function (dom, transformOrigin) {\n      dom.style.webkitTransformOrigin =\n        dom.style.transformOrigin = transformOrigin;\n    };\n\n    /**\n     * 设置 transition 过渡时间\n     * @param dom\n     * @param duration\n     */\n    $.transition = function (dom, duration) {\n      if (typeof duration !== 'string') {\n        duration = duration + 'ms';\n      }\n\n      dom.style.webkitTransitionDuration =\n        dom.style.transitionDuration = duration;\n    };\n\n    /**\n     * 执行 document.querySelectorAll，并把结果转换为数组\n     * @param selector\n     * @param parent\n     * @returns {Array}\n     */\n    $.queryAll = function (selector, parent) {\n      if (arguments.length === 1) {\n        parent = document;\n      }\n\n      return $.toArray(parent.querySelectorAll(selector));\n    };\n\n    /**\n     * 执行 document.querySelector\n     * @param selector\n     * @param parent\n     * @returns {Element}\n     */\n    $.query = function (selector, parent) {\n      if (arguments.length === 1) {\n        parent = document;\n      }\n\n      return parent.querySelector(selector);\n    };\n\n    /**\n     * 执行 document.getElementById\n     * @param id\n     * @param parent\n     * @returns {Element}\n     */\n    $.queryId = function (id, parent) {\n      if (arguments.length === 1) {\n        parent = document;\n      }\n\n      return parent.getElementById(id);\n    };\n\n    /**\n     * @param dom\n     * @param selector\n     * @returns {*}\n     */\n    $.is = function (dom, selector) {\n      var compareWith;\n\n      if (typeof selector === 'string') {\n        if (dom === document) {\n          return selector === document;\n        }\n\n        if (dom === window) {\n          return selector === window;\n        }\n\n        if (dom.matches) {\n          return dom.matches(selector);\n        } else if (dom.webkitMatchesSelector) {\n          return dom.webkitMatchesSelector(selector);\n        } else if (dom.mozMatchesSelector) {\n          return dom.mozMatchesSelector(selector);\n        } else if (dom.msMatchesSelector) {\n          return dom.msMatchesSelector(selector);\n        } else {\n          compareWith = $.queryAll(selector);\n          return (compareWith.indexOf(dom) !== -1);\n        }\n      } else if (selector === document) {\n        return dom === document;\n      } else if (selector === window) {\n        return dom === window;\n      } else if (selector.nodeType) {\n        return dom === selector;\n      } else if (selector[0].nodeType) {\n        compareWith = $.toArray(selector);\n        return (compareWith.indexOf(dom) !== -1);\n      }\n\n      return false;\n    };\n\n    /**\n     * 查找含有指定 css 选择器的父节点\n     * @param dom\n     * @param selector\n     * @returns {*}\n     */\n    $.parent = function (dom, selector) {\n      var parent = dom.parentNode;\n      if (parent !== null) {\n        if (selector) {\n          if ($.is(parent, selector)) {\n            return parent;\n          }\n        } else {\n          return parent;\n        }\n      }\n\n      return undefined;\n    };\n\n    /**\n     * 查找含有指定选择器的所有父元素\n     * @param dom\n     * @param selector\n     * @returns {Array}\n     */\n    $.parents = function (dom, selector) {\n      var parents = [];\n      var parent = dom.parentNode;\n      while (parent) {\n        if (selector) {\n          if ($.is(parent, selector)) {\n            parents.push(parent);\n          }\n        } else {\n          parents.push(parent);\n        }\n\n        parent = parent.parentNode;\n      }\n\n      return $.unique(parents);\n    };\n\n    /**\n     * dom 元素是否包含在 parent 元素内\n     * @param parent\n     * @param dom\n     * @returns {boolean}\n     */\n    $.contains = function (parent, dom) {\n      var tmp = dom.parentNode;\n      while (tmp) {\n        if ($.is(tmp, parent)) {\n          return true;\n        }\n\n        tmp = tmp.parentNode;\n      }\n\n      return false;\n    };\n\n    /**\n     * 设置 transition 动画时间\n     * @param dom\n     * @param duration\n     */\n    $.transition = function (dom, duration) {\n      if (typeof duration !== 'string') {\n        duration = duration + 'ms';\n      }\n\n      dom.style.webkitTransitionDuration = dom.style.transitionDuration = duration;\n    };\n\n    /**\n     * 事件绑定\n     * @param dom\n     * @param eventName 多个事件用空格分割\n     * @param targetSelector\n     * @param listener\n     * @param capture\n     */\n    $.on = function (dom, eventName, targetSelector, listener, capture) {\n      // 处理委托事件\n      function handleLiveEvent(e) {\n        var target = e.target;\n        if ($.is(target, targetSelector)) {\n          listener.call(target, e);\n        } else {\n          var parents = $.parents(target);\n          for (var k = 0; k < parents.length; k++) {\n            if ($.is(parents[k], targetSelector)) {\n              listener.call(parents[k], e);\n            }\n          }\n        }\n      }\n\n      var events = eventName.split(' ');\n      var i;\n      if (typeof targetSelector === 'function' || targetSelector === false) {\n        if (typeof targetSelector === 'function') {\n          listener = arguments[2];\n          capture = arguments[3] || false;\n        }\n\n        for (i = 0; i < events.length; i++) {\n          dom.addEventListener(events[i], listener, capture);\n        }\n      } else {\n        // Live events\n        for (i = 0; i < events.length; i++) {\n          if (!dom.domLiveListeners) {\n            dom.domLiveListeners = [];\n          }\n\n          dom.domLiveListeners.push({ listener: listener, liveListener: handleLiveEvent });\n          dom.addEventListener(events[i], handleLiveEvent, capture);\n        }\n      }\n    };\n\n    /**\n     * 解除事件绑定\n     * @param dom\n     * @param eventName\n     * @param targetSelector\n     * @param listener\n     * @param capture\n     */\n    $.off = function (dom, eventName, targetSelector, listener, capture) {\n      var events = eventName.split(' ');\n      for (var i = 0; i < events.length; i++) {\n        if (typeof targetSelector === 'function') {\n          listener = arguments[2];\n          capture = arguments[3] || false;\n          dom.removeEventListener(events[i], listener, capture);\n        } else {\n          // Live event\n          if (dom.domLiveListeners) {\n            for (var j = 0; j < dom.domLiveListeners.length; j++) {\n              if (dom.domLiveListeners[j].listener === listener) {\n                dom.removeEventListener(events[i], dom.domLiveListeners[j].liveListener, capture);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    /**\n     * 事件绑定，只触发一次\n     * @param dom\n     * @param eventName\n     * @param targetSelector\n     * @param listener\n     * @param capture\n     * @returns {*}\n     */\n    $.one = function (dom, eventName, targetSelector, listener, capture) {\n      if (typeof targetSelector === 'function') {\n        listener = arguments[2];\n        capture = arguments[3];\n        targetSelector = false;\n      }\n\n      function proxy(e) {\n        listener.call(e.target, e);\n        $.off(dom, eventName, targetSelector, proxy, capture);\n      }\n\n      $.on(dom, eventName, targetSelector, proxy, capture);\n    };\n\n    /**\n     * 触发事件\n     * @param dom\n     * @param eventName\n     * @param eventData\n     */\n    $.trigger = function (dom, eventName, eventData) {\n      var events = eventName.split(' ');\n      for (var i = 0; i < events.length; i++) {\n        var evt;\n        try {\n          evt = new CustomEvent(events[i], { detail: eventData, bubbles: true, cancelable: true });\n        } catch (e) {\n          evt = document.createEvent('Event');\n          evt.initEvent(events[i], true, true);\n          evt.detail = eventData;\n        }\n\n        dom.dispatchEvent(evt);\n      }\n    };\n\n    /**\n     * transition 动画结束回调\n     * @param dom\n     * @param callback\n     */\n    $.transitionEnd = function (dom, callback) {\n      var events = [\n        'webkitTransitionEnd',\n        'transitionend',\n      ];\n      var i;\n      function fireCallback(e) {\n        if (e.target !== dom) {\n          return;\n        }\n\n        callback.call(dom, e);\n        for (i = 0; i < events.length; i++) {\n          $.off(dom, events[i], fireCallback);\n        }\n      }\n\n      if (callback) {\n        for (i = 0; i < events.length; i++) {\n          $.on(dom, events[i], fireCallback);\n        }\n      }\n    };\n\n    /**\n     * 重绘\n     * @param dom\n     * @returns {number}\n     */\n    $.relayout = function (dom) {\n      return dom.clientLeft;\n    };\n\n    $.requestAnimationFrame = function (callback) {\n      var raf = window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame;\n      if (raf) {\n        return raf(callback);\n      } else {\n        return window.setTimeout(callback, 1000 / 60);\n      }\n    };\n\n    $.cancelAnimationFrame = function (id) {\n      var caf = window.cancelAnimationFrame ||\n        window.webkitCancelAnimationFrame ||\n        window.mozCancelAnimationFrame;\n      if (caf) {\n        return caf(id);\n      } else {\n        return window.clearTimeout(id);\n      }\n    };\n\n    /**\n     * 创建 Node 数组\n     * @param selector 选择器或 html 字符串\n     * @returns {Array}\n     */\n    $.dom = function (selector) {\n      var tempParent;\n\n      if (!selector) {\n        return [];\n      }\n\n      // String\n      if (typeof selector === 'string') {\n        selector = selector.trim();\n        if (selector.indexOf('<') >= 0 && selector.indexOf('>') >= 0) {\n          // HTML\n          var toCreate = 'div';\n          if (selector.indexOf('<li') === 0) {\n            toCreate = 'ul';\n          }\n\n          if (selector.indexOf('<tr') === 0) {\n            toCreate = 'tbody';\n          }\n\n          if (selector.indexOf('<td') === 0 || selector.indexOf('<th') === 0) {\n            toCreate = 'tr';\n          }\n\n          if (selector.indexOf('<tbody') === 0) {\n            toCreate = 'table';\n          }\n\n          if (selector.indexOf('<option') === 0) {\n            toCreate = 'select';\n          }\n\n          tempParent = document.createElement(toCreate);\n          tempParent.innerHTML = selector;\n          return $.toArray(tempParent.childNodes);\n        } else {\n          if (selector[0] === '#' &&  !selector.match(/[ .<>:~]/)) {\n            // ID 选择器\n            return [$.queryId(selector.split('#')[1])];\n          } else {\n            // 其他选择器\n            return $.queryAll(selector);\n          }\n        }\n      }\n\n      // Node\n      else if (selector.nodeType || selector === window || selector === document) {\n        return [selector];\n      }\n\n      // Array of elements\n      else if (selector.length > 0 && selector[0].nodeType) {\n        return $.toArray(selector);\n      }\n\n      return [];\n    };\n\n    /**\n     * 获取含指定 css 的直接子元素数组\n     * @param dom\n     * @param selector\n     * @returns {Array}\n     */\n    $.children = function (dom, selector) {\n      var children = [];\n      var childNodes = dom.childNodes;\n\n      if (!selector) {\n        return $.toArray(childNodes);\n      }\n\n      for (var i = 0; i < childNodes.length; i++) {\n        if (childNodes[i].nodeType === 1 && $.is(childNodes[i], selector)) {\n          children.push(childNodes[i]);\n        }\n      }\n\n      return children.length ? children : null;\n    };\n\n    /**\n     * 获取含指定 css 的第一个直接子元素\n     * @param dom\n     * @param selector\n     * @returns {*}\n     */\n    $.child = function (dom, selector) {\n      var childNodes = dom.childNodes;\n\n      if (!selector) {\n        return childNodes[0];\n      }\n\n      for (var i = 0; i < childNodes.length; i++) {\n        if (childNodes[i].nodeType === 1 && $.is(childNodes[i], selector)) {\n          return childNodes[i];\n        }\n      }\n\n      return null;\n    };\n\n    /**\n     * 移除 dom 元素\n     * @param dom\n     */\n    $.remove = function (dom) {\n      if (dom) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n\n    /**\n     * 移除 dom 元素中所有的子元素\n     * @param dom\n     */\n    $.empty = function (dom) {\n      if (!dom) {\n        return;\n      }\n\n      if (dom.nodeType !== 1) {\n        return;\n      }\n\n      for (var i = 0; i < dom.childNodes.length; i++) {\n        $.remove(dom.childNodes[i]);\n      }\n\n      dom.textContent = '';\n    };\n\n    /**\n     * 把 newChild 添加到 dom 元素内的最前面\n     * @param dom\n     * @param newChild\n     */\n    $.prepend = function (dom, newChild) {\n      dom.insertBefore(newChild, dom.childNodes[0]);\n    };\n\n    /**\n     * Dom 加载完毕后\n     * @param fn\n     */\n    $.ready = function (fn) {\n      document.addEventListener('DOMContentLoaded', function () {\n        fn();\n      });\n    };\n\n    /**\n     * 解析 DATA API 参数\n     * @param str\n     * @returns {{}}\n     */\n    $.parseOptions = function (str) {\n      var options = {};\n\n      if (str === null || !str) {\n        return options;\n      }\n\n      if (typeof str === 'object') {\n        return str;\n      }\n\n      /* jshint ignore:start */\n      var start = str.indexOf('{');\n      try {\n        options = (new Function('',\n          'var json = ' + str.substr(start) +\n          '; return JSON.parse(JSON.stringify(json));'))();\n      } catch (e) {\n      }\n      /* jshint ignore:end */\n\n      return options;\n    };\n\n    /**\n     * 触发插件的事件\n     * @param eventName 事件名\n     * @param pluginName 插件名\n     * @param inst 插件实例\n     * @param trigger 在该元素上触发\n     * @param obj 事件参数\n     */\n    $.pluginEvent = function (eventName, pluginName, inst, trigger, obj) {\n      if (typeof obj === 'undefined') {\n        obj = {};\n      }\n\n      obj.inst = inst;\n\n      var fullEventName = eventName + '.mdui.' + pluginName;\n\n      // jQuery 事件\n      if (typeof jQuery !== 'undefined') {\n        jQuery(trigger).trigger(fullEventName, obj);\n      }\n\n      // 原生js事件\n      $.trigger(trigger, fullEventName, obj);\n    };\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   检测支持的特性   ************\n   * =============================================================================\n   */\n\n  (function () {\n    mdui.support = {\n      touch: !!('ontouchstart' in window),\n    };\n  })();\n\n\n  /**\n   * 触摸或鼠标事件\n   */\n  mdui.touchEvents = {\n    start: mdui.support.touch ? 'touchstart' : 'mousedown',\n    move: mdui.support.touch ? 'touchmove' : 'mousemove',\n    end: mdui.support.touch ? 'touchend' : 'mouseup',\n  };\n\n  /**\n   * 判断窗口大小\n   */\n  mdui.screen = {\n    xs: function () {\n      return window.innerWidth < 600;\n    },\n\n    sm: function () {\n      return window.innerWidth >= 600 && window.innerWidth < 1024;\n    },\n\n    md: function () {\n      return window.innerWidth >= 1024 && window.innerWidth < 1440;\n    },\n\n    lg: function () {\n      return window.innerWidth >= 1440 && window.innerWidth < 1920;\n    },\n\n    xl: function () {\n      return window.innerWidth >= 1920;\n    },\n\n    xsDown: function () {\n      return window.innerWidth < 600;\n    },\n\n    smDown: function () {\n      return window.innerWidth < 1024;\n    },\n\n    mdDown: function () {\n      return window.innerWidth < 1440;\n    },\n\n    lgDown: function () {\n      return window.innerWidth < 1920;\n    },\n\n    xlDown: function () {\n      return true;\n    },\n\n    xsUp: function () {\n      return true;\n    },\n\n    smUp: function () {\n      return window.innerWidth >= 600;\n    },\n\n    mdUp: function () {\n      return window.innerWidth >= 1024;\n    },\n\n    lgUp: function () {\n      return window.innerWidth >= 1440;\n    },\n\n    xlUp: function () {\n      return window.innerWidth >= 1920;\n    },\n\n  };\n\n  /**\n   * 创建遮罩层并显示\n   * @param zIndex 遮罩层的 z_index\n   * @returns {Element}\n   */\n  mdui.showOverlay = function (zIndex) {\n    var overlay = $.dom('<div class=\"mdui-overlay\">')[0];\n    document.body.appendChild(overlay);\n\n    $.relayout(overlay);\n\n    if (typeof zIndex === 'undefined') {\n      zIndex = 2000;\n    }\n\n    overlay.style['z-index'] = zIndex;\n    overlay.classList.add('mdui-overlay-show');\n\n    return overlay;\n  };\n\n  /**\n   * 隐藏遮罩层\n   * @param overlay 指定遮罩层元素，若没有该参数，则移除所有遮罩层\n   */\n  mdui.hideOverlay = function (overlay) {\n    var overlays;\n    if (typeof overlay === 'undefined') {\n      overlays = $.queryAll('.mdui-overlay');\n    } else {\n      overlays = [overlay];\n    }\n\n    $.each(overlays, function (i, overlay) {\n      overlay.classList.remove('mdui-overlay-show');\n      $.transitionEnd(overlay, function () {\n        $.remove(overlay);\n      });\n    });\n  };\n\n  /**\n   * 锁定屏幕\n   */\n  mdui.lockScreen = function () {\n    var body = document.body;\n    var oldWindowWidth = body.clientWidth;\n\n    // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n    var oldBodyPaddingLeft = parseFloat($.getStyle(body, 'padding-left'));\n    var oldBodyPaddingRight = parseFloat($.getStyle(body, 'padding-right'));\n\n    document.body.classList.add('mdui-locked');\n    document.body.style.width = oldWindowWidth - oldBodyPaddingLeft - oldBodyPaddingRight + 'px';\n  };\n\n  /**\n   * 解除屏幕锁定\n   */\n  mdui.unlockScreen = function () {\n    document.body.classList.remove('mdui-locked');\n    document.body.style.width = '';\n  };\n\n  /**\n   * 函数节流\n   * @param fn\n   * @param delay\n   * @returns {Function}\n   */\n  mdui.throttle = function (fn, delay) {\n    var timer = null;\n\n    return function () {\n      var _this = this;\n      var args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          fn.apply(_this, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  };\n\n  /**\n   * 生成唯一 id\n   * @param pluginName 插件名，若传入该参数，guid 将以该参数作为前缀\n   * @returns {string}\n   */\n  mdui.guid = function (pluginName) {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    var guid = s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    if (pluginName) {\n      guid = 'mdui-' + pluginName + '-' + guid;\n    }\n\n    return guid;\n  };\n\n  $.ready(function () {\n    // 避免页面加载完后直接执行css动画\n    // https://css-tricks.com/transitions-only-after-page-load/\n\n    setTimeout(function () {\n      document.body.classList.add('mdui-loaded');\n    }, 0);\n\n    // 支持触摸时在 body 添加 mdui-support-touch\n    if (mdui.support.touch) {\n      document.body.classList.add('mdui-support-touch');\n    }\n\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Headroom.js   ************\n   * =============================================================================\n   */\n\n  mdui.Headroom = (function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      tolerance: 5,                                // 滚动条滚动多少距离开始隐藏或显示元素，{down: num, up: num}，或数字\n      offset: 0,                                   // 在页面顶部多少距离内滚动不会隐藏元素\n      initialClass: 'mdui-headroom',               // 初始化时添加的类\n      pinnedClass: 'mdui-headroom-pinned-top',     // 元素固定时添加的类\n      unpinnedClass: 'mdui-headroom-unpinned-top', // 元素隐藏时添加的类\n    };\n\n    /**\n     * Headroom\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n    function Headroom(selector, opts) {\n      var _this = this;\n\n      _this.headroom = $.dom(selector)[0];\n      if (typeof _this.headroom === 'undefined') {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.headroom, 'mdui.headroom');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n\n      // 数值转为 {down: bum, up: num}\n      var tolerance = _this.options.tolerance;\n      if (tolerance !== Object(tolerance)) {\n        _this.options.tolerance = {\n          down: tolerance,\n          up: tolerance,\n        };\n      }\n\n      _this._init();\n    }\n\n    /**\n     * 初始化\n     * @private\n     */\n    Headroom.prototype._init = function () {\n      var _this = this;\n\n      _this.state = 'pinned';\n      _this.headroom.classList.add(_this.options.initialClass);\n      _this.headroom.classList.remove(\n        _this.options.pinnedClass,\n        _this.options.unpinnedClass\n      );\n\n      _this.inited = false;\n      _this.lastScrollY = 0;\n\n      _this._attachEvent();\n    };\n\n    /**\n     * 监听滚动事件\n     * @private\n     */\n    Headroom.prototype._attachEvent = function () {\n      var _this = this;\n\n      if (!_this.inited) {\n        _this.lastScrollY = window.pageYOffset;\n        _this.inited = true;\n        $.on(window, 'scroll', function () {\n          _this._scroll();\n        });\n      }\n    };\n\n    /**\n     * 滚动时的处理\n     * @private\n     */\n    Headroom.prototype._scroll = function () {\n      var _this = this;\n      _this.animationFrameId = $.requestAnimationFrame(function () {\n        var currentScrollY = window.pageYOffset;\n        var direction = currentScrollY > _this.lastScrollY ? 'down' : 'up';\n        var toleranceExceeded =\n          Math.abs(currentScrollY - _this.lastScrollY) >=\n          _this.options.tolerance[direction];\n\n        if (\n          currentScrollY > _this.lastScrollY &&\n          currentScrollY >= _this.options.offset &&\n          toleranceExceeded) {\n          _this.unpin();\n        } else if (\n          (currentScrollY < _this.lastScrollY && toleranceExceeded) ||\n          currentScrollY <= _this.options.offset\n        ) {\n          _this.pin();\n        }\n\n        _this.lastScrollY = currentScrollY;\n      });\n    };\n\n    /**\n     * 固定住\n     */\n    Headroom.prototype.pin = function () {\n      var _this = this;\n\n      if (\n        _this.state === 'pinning' ||\n        _this.state === 'pinned' ||\n        !_this.headroom.classList.contains(_this.options.initialClass)\n      ) {\n        return;\n      }\n\n      _this.state = 'pinning';\n      _this.headroom.classList.remove(_this.options.unpinnedClass);\n      _this.headroom.classList.add(_this.options.pinnedClass);\n      $.pluginEvent('pin', 'headroom', _this, _this.headroom);\n\n      $.transitionEnd(_this.headroom, function () {\n        if (_this.state === 'pinning') {\n          _this.state = 'pinned';\n          $.pluginEvent('pinned', 'headroom', _this, _this.headroom);\n        }\n      });\n    };\n\n    /**\n     * 不固定住\n     */\n    Headroom.prototype.unpin = function () {\n      var _this = this;\n\n      if (\n        _this.state === 'unpinning' ||\n        _this.state === 'unpinned' ||\n        !_this.headroom.classList.contains(_this.options.initialClass)\n      ) {\n        return;\n      }\n\n      _this.state = 'unpinning';\n      _this.headroom.classList.remove(_this.options.pinnedClass);\n      _this.headroom.classList.add(_this.options.unpinnedClass);\n      $.pluginEvent('unpin', 'headroom', _this, _this.headroom);\n\n      $.transitionEnd(_this.headroom, function () {\n        if (_this.state === 'unpinning') {\n          _this.state = 'unpinned';\n          $.pluginEvent('unpinned', 'headroom', _this, _this.headroom);\n        }\n      });\n    };\n\n    /**\n     * 启用\n     */\n    Headroom.prototype.enable = function () {\n      var _this = this;\n\n      if (!_this.inited) {\n        _this._init();\n      }\n    };\n\n    /**\n     * 禁用\n     */\n    Headroom.prototype.disable = function () {\n      var _this = this;\n\n      if (_this.inited) {\n        _this.inited = false;\n        _this.headroom.classList.remove(\n          _this.options.initialClass,\n          _this.options.pinnedClass,\n          _this.options.unpinnedClass\n        );\n        $.off(window, 'scroll', function () {\n          _this._scroll();\n        });\n\n        $.cancelAnimationFrame(_this.animationFrameId);\n      }\n    };\n\n    /**\n     * 获取当前状态 pinning | pinned | unpinning | unpinned\n     */\n    Headroom.prototype.getState = function () {\n      return this.state;\n    };\n\n    return Headroom;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Headroom 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    $.each($.queryAll('[mdui-headroom]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-headroom'));\n\n      var inst = $.data(target, 'mdui.headroom');\n      if (!inst) {\n        inst = new mdui.Headroom(target, options);\n        $.data(target, 'mdui.headroom', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   供 Collapse、 Panel 调用的折叠内容块插件   ************\n   * =============================================================================\n   */\n  $.Collapse = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      accordion: false,                             // 是否使用手风琴效果\n    };\n\n    // 类名\n    var CLASS = {\n      item: 'mdui-collapse-item',           // item 类名\n      itemOpen: 'mdui-collapse-item-open',  // 打开状态的 item\n      header: 'mdui-collapse-item-header',  // item 中的 header 类名\n      body: 'mdui-collapse-item-body',      // item 中的 body 类名\n    };\n\n    // 命名空间\n    var NAMESPACE = 'collapse';\n\n    /**\n     * 折叠内容块\n     * @param selector\n     * @param opts\n     * @param classes\n     * @param namespace\n     * @constructor\n     */\n    function Collapse(selector, opts, classes, namespace) {\n      var _this = this;\n\n      _this.classes = $.extend(CLASS, classes || {});\n      _this.namespace = (typeof namespace === 'undefined' || !namespace) ? NAMESPACE : namespace;\n\n      // 折叠面板元素\n      _this.collapse = $.dom(selector)[0];\n      if (typeof _this.collapse === 'undefined') {\n        return;\n      }\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.collapse, 'mdui.' + _this.namespace);\n      if (oldInst) {\n        return oldInst;\n      }\n\n      $.on(_this.collapse, 'click', '.' + _this.classes.header, function (e) {\n        var item = $.parent(this, '.' + _this.classes.item);\n        if ($.child(_this.collapse, item)) {\n          _this.toggle(item);\n        }\n      });\n    }\n\n    /**\n     * 指定 item 是否处于打开状态\n     * @param item\n     * @returns {boolean}\n     * @private\n     */\n    Collapse.prototype._isOpen = function (item) {\n      return item.classList.contains(this.classes.itemOpen);\n    };\n\n    /**\n     * 获取指定 item\n     * @param item\n     * @returns {*}\n     * @private\n     */\n    Collapse.prototype._getItem = function (item) {\n      var _this = this;\n\n      if (parseInt(item) === item) {\n        var items = $.children(_this.collapse, '.' + _this.classes.item);\n        return items[item];\n      }\n\n      return $.dom(item)[0];\n    };\n\n    /**\n     * 打开指定面板项\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n    Collapse.prototype.open = function (item) {\n      var _this = this;\n      item = _this._getItem(item);\n\n      if (_this._isOpen(item)) {\n        return;\n      }\n\n      // 关闭其他项\n      if (_this.options.accordion) {\n        $.each($.children(_this.collapse, '.' + _this.classes.itemOpen), function (i, temp) {\n          if (temp !== item) {\n            _this.close(temp);\n          }\n        });\n      }\n\n      var content = $.child(item, '.' + _this.classes.body);\n      content.style.height = content.scrollHeight + 'px';\n\n      $.transitionEnd(content, function () {\n        if (_this._isOpen(item)) {\n          $.transition(content, 0);\n          content.style.height = 'auto';\n          $.relayout(content);\n          $.transition(content, '');\n          $.pluginEvent('opened', _this.namespace, _this, item);\n        } else {\n          content.style.height = '';\n        }\n      });\n\n      $.pluginEvent('open', _this.namespace, _this, item);\n      item.classList.add(_this.classes.itemOpen);\n    };\n\n    /**\n     * 关闭指定项\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n    Collapse.prototype.close = function (item) {\n      var _this = this;\n      item = _this._getItem(item);\n\n      if (!_this._isOpen(item)) {\n        return;\n      }\n\n      var content = $.child(item, '.' + _this.classes.body);\n      item.classList.remove(_this.classes.itemOpen);\n      $.transition(content, 0);\n      content.style.height = content.scrollHeight + 'px';\n      $.relayout(content);\n\n      $.transition(content, '');\n      content.style.height = '';\n      $.pluginEvent('close', _this.namespace, _this, item);\n\n      $.transitionEnd(content, function () {\n        if (_this._isOpen(item)) {\n          $.transition(content, 0);\n          content.style.height = 'auto';\n          $.relayout(content);\n          $.transition(content, '');\n        } else {\n          content.style.height = '';\n          $.pluginEvent('closed', _this.namespace, _this, item);\n        }\n      });\n    };\n\n    /**\n     * 切换指定项的状态\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n    Collapse.prototype.toggle = function (item) {\n      var _this = this;\n      item = _this._getItem(item);\n\n      if (_this._isOpen(item)) {\n        _this.close(item);\n      } else {\n        _this.open(item);\n      }\n    };\n\n    /**\n     * 打开所有项\n     */\n    Collapse.prototype.openAll = function () {\n      var _this = this;\n\n      $.each($.children(_this.collapse, '.' + _this.classes.item), function (i, item) {\n        if (!_this._isOpen(item)) {\n          _this.open(item);\n        }\n      });\n    };\n\n    /**\n     * 关闭所有项\n     */\n    Collapse.prototype.closeAll = function () {\n      var _this = this;\n\n      $.each($.children(_this.collapse, '.' + _this.classes.item), function (i, item) {\n        if (_this._isOpen(item)) {\n          _this.close(item);\n        }\n      });\n    };\n\n    return Collapse;\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Collapse 折叠内容块插件   ************\n   * =============================================================================\n   */\n  mdui.Collapse = (function () {\n\n    function Collapse(selector, opts) {\n      return new $.Collapse(selector, opts);\n    }\n\n    return Collapse;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Collapse 自定义属性   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // 实例化插件\n    $.each($.queryAll('[mdui-collapse]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-collapse'));\n\n      var inst = $.data(target, 'mdui.collapse');\n      if (!inst) {\n        inst = new mdui.Collapse(target, options);\n        $.data(target, 'mdui.collapse', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Table 表格   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 生成 checkbox 的 HTML 结构\n     * @param tag\n     * @returns {string}\n     */\n    var checkboxHTML = function (tag) {\n      return '<' + tag + ' class=\"mdui-table-cell-checkbox\">' +\n               '<label class=\"mdui-checkbox\">' +\n                 '<input type=\"checkbox\"/>' +\n                 '<i class=\"mdui-checkbox-icon\"></i>' +\n               '</label>' +\n             '</' + tag + '>';\n    };\n\n    /**\n     * Table 表格\n     * @param selector\n     * @constructor\n     */\n    function Table(selector) {\n      var _this = this;\n      _this.table = $.dom(selector)[0];\n      _this.init();\n    }\n\n    /**\n     * 初始化\n     */\n    Table.prototype.init = function () {\n      var _this = this;\n\n      _this.thRow = $.query('thead tr', _this.table);\n      _this.tdRows = $.queryAll('tbody tr', _this.table);\n      _this.tdCheckboxs = [];\n      _this.selectable = _this.table.classList.contains('mdui-table-selectable');\n\n      _this.updateTdCheckbox();\n      _this.updateThCheckbox();\n      _this.updateNumericCol();\n    };\n\n    /**\n     * 更新表格行的 checkbox\n     */\n    Table.prototype.updateTdCheckbox = function () {\n      var _this = this;\n      var td;\n      var tdCheckbox;\n      _this.tdCheckboxs = [];\n\n      $.each(_this.tdRows, function (i, tdRow) {\n        // 移除旧的 checkbox\n        tdCheckbox = $.query('.mdui-table-cell-checkbox', tdRow);\n        if (tdCheckbox) {\n          $.remove(tdCheckbox);\n        }\n\n        // 创建新的 checkbox\n        if (_this.selectable) {\n          // 创建 DOM\n          td = $.dom(checkboxHTML('td'))[0];\n          $.prepend(tdRow, td);\n\n          var checkbox = $.query('input[type=\"checkbox\"]', td);\n\n          // 默认选中的行\n          if (tdRow.classList.contains('mdui-table-row-selected')) {\n            checkbox.checked = true;\n          }\n\n          // 绑定事件\n          $.on(checkbox, 'change', function () {\n            tdRow.classList[checkbox.checked ? 'add' : 'remove']('mdui-table-row-selected');\n          });\n\n          _this.tdCheckboxs.push(checkbox);\n        }\n      });\n    };\n\n    /**\n     * 更新表头的 checkbox\n     */\n    Table.prototype.updateThCheckbox = function () {\n      var _this = this;\n      var thCheckbox;\n\n      // 移除旧的 checkbox\n      thCheckbox = $.query('.mdui-table-cell-checkbox', _this.thRow);\n      if (thCheckbox) {\n        $.remove(thCheckbox);\n      }\n\n      if (!_this.selectable) {\n        return;\n      }\n\n      // 创建 DOM\n      var th = $.dom(checkboxHTML('th'))[0];\n      $.prepend(_this.thRow, th);\n\n      // 绑定事件\n      thCheckbox = $.query('input[type=\"checkbox\"]', th);\n      $.on(thCheckbox, 'change', function () {\n\n        $.each(_this.tdCheckboxs, function (i, checkbox) {\n          checkbox.checked = thCheckbox.checked;\n        });\n\n        $.each(_this.tdRows, function (i, row) {\n          row.classList[thCheckbox.checked ? 'add' : 'remove']('mdui-table-row-selected');\n        });\n\n      });\n    };\n\n    /**\n     * 更新数值列\n     */\n    Table.prototype.updateNumericCol = function () {\n      var _this = this;\n\n      var ths = $.queryAll('th', _this.thRow);\n      $.each(ths, function (i, th) {\n        $.each(_this.tdRows, function (j, tdRow) {\n          var method = th.classList.contains('mdui-table-col-numeric') ? 'add' : 'remove';\n          var td = $.queryAll('td', tdRow)[i];\n          if (td) {\n            td.classList[method]('mdui-table-col-numeric');\n          }\n        });\n      });\n    };\n\n    $.ready(function () {\n      // 实例化表格\n      var tables = $.queryAll('.mdui-table');\n      $.each(tables, function (i, table) {\n        var inst = new Table(table);\n        $.data(table, 'mdui.table', inst);\n      });\n    });\n\n    /**\n     * 更新表格\n     */\n    mdui.updateTables = function () {\n      var tables;\n\n      if (arguments.length === 1) {\n        tables = $.dom(arguments[0]);\n      } else {\n        tables = $.queryAll('.mdui-table');\n      }\n\n      $.each(tables, function (i, table) {\n        var inst = $.data(table, 'mdui.table');\n        inst.init();\n      });\n    };\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   涟漪   ************\n   * =============================================================================\n   *\n   * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n   * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n   *\n   * Inspired by https://github.com/fians/Waves\n   */\n\n  (function () {\n\n    var Ripple = {\n\n      /**\n       * 显示涟漪动画\n       * @param e\n       * @param element\n       */\n      show: function (e, element) {\n\n        // 鼠标右键不产生涟漪\n        if (e.button === 2) {\n          return;\n        }\n\n        // 点击位置坐标\n        var tmp;\n        if ('touches' in e && e.touches.length) {\n          tmp = e.touches[0];\n        } else {\n          tmp = e;\n        }\n\n        var touchStartX = tmp.pageX;\n        var touchStartY = tmp.pageY;\n\n        // 涟漪位置\n        var box = element.getBoundingClientRect();\n        var offset = $.offset(element);\n        var center = {\n          x: touchStartX - offset.left,\n          y: touchStartY - offset.top,\n        };\n\n        var height = box.height;\n        var width = box.width;\n        var diameter = Math.max(\n          Math.pow((Math.pow(height, 2) + Math.pow(width, 2)), 0.5), 48\n        );\n\n        // 涟漪扩散动画\n        var translate =\n          'translate3d(' + (-center.x + width / 2) + 'px, ' + (-center.y + height / 2) + 'px, 0) ' +\n          'scale(1)';\n\n        // 涟漪的 DOM 结构\n        var ripple = $.dom('<div class=\"mdui-ripple-wave\" style=\"' +\n          'width: ' + diameter + 'px; ' +\n          'height: ' + diameter + 'px; ' +\n          'margin-top:-' + diameter / 2 + 'px; ' +\n          'margin-left:-' + diameter / 2 + 'px; ' +\n          'left:' + center.x + 'px; ' +\n          'top:' + center.y + 'px;\">' +\n          '</div>')[0];\n\n        // 缓存动画效果\n        $.data(ripple, {\n          translate: translate,\n        });\n\n        $.prepend(element, ripple);\n        $.relayout(ripple);\n        $.transform(ripple, translate);\n      },\n\n      /**\n       * 隐藏涟漪动画\n       * @param e\n       * @param element\n       */\n      hide: function (e, element) {\n        element = element || this;\n\n        var ripples = $.children(element, '.mdui-ripple-wave');\n\n        $.each(ripples, function (i, ripple) {\n          removeRipple(ripple);\n        });\n\n        if (mdui.support.touch) {\n          $.off(element, 'touchmove touchend touchcancel', Ripple.hide);\n        }\n\n        $.off(element, 'mousemove mouseup mouseleave', Ripple.hide);\n      },\n    };\n\n    /**\n     * 隐藏并移除涟漪\n     * @param ripple\n     */\n    function removeRipple(ripple) {\n      if (!ripple || $.data(ripple, 'isRemoved')) {\n        return;\n      }\n\n      $.data(ripple, 'isRemoved', true);\n\n      var removeTimeout = setTimeout(function () {\n        $.remove(ripple);\n      }, 400);\n\n      ripple.classList.add('mdui-ripple-wave-fill');\n      var translate = $.data(ripple, 'translate');\n      $.transform(ripple, translate.replace('scale(1)', 'scale(1.01)'));\n      $.transitionEnd(ripple, function (e) {\n        clearTimeout(removeTimeout);\n\n        var ripple = e.target;\n        ripple.classList.add('mdui-ripple-wave-out');\n        $.transform(ripple, translate.replace('scale(1)', 'scale(1.01)'));\n\n        removeTimeout = setTimeout(function () {\n          $.remove(ripple);\n        }, 700);\n\n        setTimeout(function () {\n          $.transitionEnd(ripple, function (e) {\n            clearTimeout(removeTimeout);\n            $.remove(e.target);\n          });\n        }, 0);\n      });\n    }\n\n    /**\n     * touch 事件后的 500ms 内禁用 mousedown 事件\n     */\n    var TouchHandler = {\n      touches: 0,\n\n      allowEvent: function (e) {\n        var allow = true;\n\n        if (e.type === 'mousedown' && TouchHandler.touches) {\n          allow = false;\n        }\n\n        return allow;\n      },\n\n      registerEvent: function (e) {\n        var eType = e.type;\n\n        if (eType === 'touchstart') {\n          TouchHandler.touches += 1;\n        } else if (['touchmove', 'touchend', 'touchcancel'].indexOf(eType) > -1) {\n          setTimeout(function () {\n            if (TouchHandler.touches) {\n              TouchHandler.touches -= 1;\n            }\n          }, 500);\n        }\n      },\n    };\n\n    /**\n     * 找到含 .mdui-ripple 类的元素\n     * @param e\n     * @returns {*}\n     */\n    function getRippleElement(e) {\n      if (TouchHandler.allowEvent(e) === false) {\n        return null;\n      }\n\n      var element = null;\n      var target = e.target;\n      var rippleParents;\n\n      if (target.classList.contains('mdui-ripple')) {\n        element = target;\n      } else {\n        rippleParents = $.parents(target, '.mdui-ripple');\n        if (rippleParents.length) {\n          element = rippleParents[0];\n        }\n      }\n\n      return element;\n    }\n\n    /**\n     * 显示涟漪，并绑定 touchend 等事件\n     * @param e\n     */\n    function showRipple(e) {\n      var element = getRippleElement(e);\n\n      if (element !== null) {\n\n        // 禁用状态的元素上不产生涟漪效果\n        if (element.disabled || element.getAttribute('disabled')) {\n          return;\n        }\n\n        TouchHandler.registerEvent(e);\n\n        Ripple.show(e, element);\n\n        if (mdui.support.touch) {\n          $.on(element, 'touchmove touchend touchcancel', Ripple.hide);\n        }\n\n        $.on(element, 'mousemove mouseup mouseleave', Ripple.hide);\n      }\n    }\n\n    // 初始化绑定的事件\n    if (mdui.support.touch) {\n      $.on(document, 'touchstart', showRipple);\n      $.on(document, 'touchmove touchend touchcancel', TouchHandler.registerEvent);\n    }\n\n    $.on(document, 'mousedown', showRipple);\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Text Field 文本框   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    var notInputs = ['checkbox', 'button', 'submit', 'range', 'radio', 'image'];\n\n    var classNames = {\n      field: 'mdui-textfield',\n      input: 'mdui-textfield-input',\n      focus: 'mdui-textfield-focus',\n      notEmpty: 'mdui-textfield-not-empty',\n      disabled: 'mdui-textfield-disabled',\n      invalid: 'mdui-textfield-invalid',\n      expanded: 'mdui-textfield-expanded',\n    };\n\n    /**\n     * 输入框事件\n     * @param e\n     */\n    var inputEvent = function (e) {\n      var input = e.target;\n      var event = e.type;\n      var value = input.value;\n\n      // reInit 为 true 时，需要重新初始化文本框\n      var reInit;\n      if (\n        typeof e.detail === 'object' &&\n        typeof e.detail.reInit !== 'undefined' &&\n        e.detail.reInit\n      ) {\n        reInit = e.detail.reInit;\n      } else {\n        reInit = false;\n      }\n\n      // domLoadedEvent 为 true 时，为 DOM 加载完毕后自动触发的事件\n      var domLoadedEvent;\n      if (\n        typeof e.detail === 'object' &&\n        typeof e.detail.domLoadedEvent !== 'undefined' &&\n        e.detail.domLoadedEvent\n      ) {\n        domLoadedEvent = e.detail.domLoadedEvent;\n      } else {\n        domLoadedEvent = false;\n      }\n\n      // 文本框类型\n      var type = input.getAttribute('type') || '';\n      if (notInputs.indexOf(type) >= 0) {\n        return;\n      }\n\n      var textField = $.parents(input, '.' + classNames.field)[0];\n\n      // 输入框是否聚焦\n      if (event === 'focus') {\n        textField.classList.add(classNames.focus);\n      }\n\n      if (event === 'blur') {\n        textField.classList.remove(classNames.focus);\n      }\n\n      // 输入框是否为空\n      if (event === 'blur' || event === 'input') {\n        if (value && value !== '') {\n          textField.classList.add(classNames.notEmpty);\n        } else {\n          textField.classList.remove(classNames.notEmpty);\n        }\n      }\n\n      // 输入框是否禁用\n      if (input.disabled) {\n        textField.classList.add(classNames.disabled);\n      } else {\n        textField.classList.remove(classNames.disabled);\n      }\n\n      // 表单验证\n      if ((event === 'input' || event === 'blur') && !domLoadedEvent) {\n        if (input.validity) {\n          if (input.validity.valid) {\n            textField.classList.remove(classNames.invalid);\n          } else {\n            textField.classList.add(classNames.invalid);\n          }\n        }\n      }\n\n      // textarea 高度自动调整\n      if (e.target.nodeName.toLowerCase() === 'textarea') {\n        input.style.height = '';\n        var height = input.offsetHeight;\n        var diff = height - input.clientHeight;\n        var scrollHeight = input.scrollHeight;\n\n        if (scrollHeight + diff > height) {\n          var newAreaHeight = scrollHeight + diff;\n          input.style.height = newAreaHeight + 'px';\n        }\n      }\n\n      // 实时字数统计\n      var counter;\n      if (reInit) {\n        textField.classList.remove('mdui-textfield-has-counter');\n        counter = $.query('.mdui-textfield-counter', textField);\n        if (counter) {\n          $.remove(counter);\n        }\n      }\n\n      var maxlength = input.getAttribute('maxlength');\n      if (maxlength) {\n        if (reInit || domLoadedEvent) {\n          counter = $.dom(\n            '<div class=\"mdui-textfield-counter\">' +\n              '<span class=\"mdui-textfield-counter-inputed\"></span> / ' + maxlength +\n            '</div>'\n          )[0];\n          textField.appendChild(counter);\n\n          // 如果没有 .mdui-textfield-error 作为占位，需要增加 .mdui-textfield 的下边距，\n          // 使 .mdui-textfield-counter 不会覆盖在文本框上\n          if (!$.query('.mdui-textfield-error', textField)) {\n            textField.classList.add('mdui-textfield-has-counter');\n          }\n        }\n\n        // 字符长度，确保统计方式和 maxlength 一致\n        var inputed = input.value.length + input.value.split('\\n').length - 1;\n        $.query('.mdui-textfield-counter-inputed', textField).innerText = inputed.toString();\n      }\n\n    };\n\n    // 绑定事件\n    var inputSelector = '.' + classNames.field + ' input, .' + classNames.field + ' textarea';\n    $.on(document, 'input focus blur', inputSelector, inputEvent, true);\n\n    // 可展开文本框展开\n    $.on(document, 'click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n      var _this = this;\n      var textField = $.parents(_this, '.' + classNames.field)[0];\n      var input = $.query('.' + classNames.input, textField);\n\n      textField.classList.add(classNames.expanded);\n      input.focus();\n    });\n\n    // 可展开文本框关闭\n    $.on(document, 'click', '.mdui-textfield-expandable .mdui-textfield-close', function () {\n      var _this = this;\n      var textField = $.parents(_this, '.' + classNames.field)[0];\n      var input = $.query('.' + classNames.input, textField);\n\n      textField.classList.remove(classNames.expanded);\n      input.value = '';\n    });\n\n    /**\n     * 通过 JS 更新了表单内容，需要重新进行表单处理\n     * @param dom 如果传入了 .mdui-textfield 所在的 DOM 元素，则更新该文本框；否则，更新所有文本框\n     */\n    mdui.updateTextFields = function () {\n      var textfields;\n      var input;\n\n      if (arguments.length === 1) {\n        textfields = $.dom(arguments[0]);\n      } else {\n        textfields = $.queryAll('.mdui-textfield');\n      }\n\n      $.each(textfields, function (i, textfield) {\n        input = $.query('.mdui-textfield-input', textfield);\n        if (input) {\n          $.trigger(input, 'input', {\n            reInit: true,\n          });\n        }\n      });\n    };\n\n    $.ready(function () {\n\n      // DOM 加载完后自动执行\n      $.each($.queryAll('.mdui-textfield-input'), function (i, input) {\n        $.trigger(input, 'input', {\n          domLoadedEvent: true,\n        });\n      });\n\n    });\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Slider 滑块   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 滑块的值变更后修改滑块样式\n     * @param slider\n     */\n    var updateValueStyle = function (slider) {\n      var track = $.data(slider, 'track');\n      var fill = $.data(slider, 'fill');\n      var thumb = $.data(slider, 'thumb');\n      var input = $.data(slider, 'input');\n      var min = $.data(slider, 'min');\n      var max = $.data(slider, 'max');\n      var isDisabled = $.data(slider, 'disabled');\n      var isDiscrete = $.data(slider, 'discrete');\n      var thumbText = $.data(slider, 'thumbText');\n      var percent = (input.value - min) / (max - min) * 100;\n\n      fill.style.width = percent + '%';\n      track.style.width = 100 - percent + '%';\n\n      if (isDisabled) {\n        fill.style['padding-right'] = '6px';\n        track.style['padding-left'] = '6px';\n      }\n\n      thumb.style.left = percent + '%';\n\n      if (isDiscrete) {\n        thumbText.textContent = input.value;\n      }\n\n      slider.classList[parseFloat(percent) === 0 ? 'add' : 'remove']('mdui-slider-zero');\n    };\n\n    /**\n     * 重新初始化\n     * @param slider\n     */\n    var reInit = function (slider) {\n      var track = $.dom('<div class=\"mdui-slider-track\"></div>')[0];\n      var fill = $.dom('<div class=\"mdui-slider-fill\"></div>')[0];\n      var thumb = $.dom('<div class=\"mdui-slider-thumb\"></div>')[0];\n      var input = $.query('input[type=\"range\"]', slider);\n\n      // 禁用状态\n      var isDisabled = input.disabled;\n      slider.classList[isDisabled ? 'add' : 'remove']('mdui-slider-disabled');\n\n      // 重新填充 HTML\n      $.remove($.query('.mdui-slider-track', slider));\n      slider.appendChild(track);\n\n      $.remove($.query('.mdui-slider-fill', slider));\n      slider.appendChild(fill);\n\n      $.remove($.query('.mdui-slider-thumb', slider));\n      slider.appendChild(thumb);\n\n      // 间续型滑块\n      var isDiscrete = slider.classList.contains('mdui-slider-discrete');\n\n      var thumbText;\n      if (isDiscrete) {\n        thumbText = $.dom('<span></span>')[0];\n\n        $.empty(thumb);\n        thumb.appendChild(thumbText);\n      }\n\n      $.data(slider, {\n        track: track,\n        fill: fill,\n        thumb: thumb,\n        input: input,\n        min: input.getAttribute('min'),   // 滑块最小值\n        max: input.getAttribute('max'),   // 滑块最大值\n        disabled: isDisabled,             // 是否禁用状态\n        discrete: isDiscrete,             // 是否是间续型滑块\n        thumbText: thumbText,             // 间续型滑块的数值\n      });\n\n      // 设置默认值\n      updateValueStyle(slider);\n    };\n\n    /**\n     * 滑动滑块事件\n     */\n    $.on(document, 'input change', '.mdui-slider input[type=\"range\"]', function () {\n      var slider = $.parent(this, '.mdui-slider');\n      updateValueStyle(slider);\n    });\n\n    /**\n     * 开始触摸滑块事件\n     */\n    $.on(document, mdui.touchEvents.start, '.mdui-slider input[type=\"range\"]', function () {\n      var slider = $.parent(this, '.mdui-slider');\n      if (!this.disabled) {\n        slider.classList.add('mdui-slider-focus');\n      }\n    });\n\n    /**\n     * 结束触摸滑块事件\n     */\n    $.on(document, mdui.touchEvents.end, '.mdui-slider input[type=\"range\"]', function () {\n      var slider = $.parent(this, '.mdui-slider');\n      if (!this.disabled) {\n        slider.classList.remove('mdui-slider-focus');\n      }\n    });\n\n    /**\n     * 页面加载完后自动初始化\n     */\n    $.ready(function () {\n      var sliders = $.queryAll('.mdui-slider');\n      $.each(sliders, function (i, slider) {\n        reInit(slider);\n      });\n    });\n\n    /**\n     * 重新初始化滑块\n     */\n    mdui.updateSliders = function () {\n      var sliders;\n\n      if (arguments.length === 1) {\n        sliders = $.dom(arguments[0]);\n      } else {\n        sliders = $.queryAll('.mdui-slider');\n      }\n\n      $.each(sliders, function (i, slider) {\n        reInit(slider);\n      });\n    };\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Fab 浮动操作按钮   ************\n   * =============================================================================\n   */\n\n  mdui.Fab = (function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      trigger: 'hover',      // 触发方式 ['hover', 'click']\n    };\n\n    /**\n     * 浮动操作按钮实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n    function Fab(selector, opts) {\n      var _this = this;\n\n      _this.fab = $.dom(selector)[0];\n      if (typeof _this.fab === 'undefined') {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.fab, 'mdui.fab');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n      _this.state = 'closed';\n\n      _this.btn = $.child(_this.fab, '.mdui-fab');\n      _this.dial = $.child(_this.fab, '.mdui-fab-dial');\n      _this.dialBtns = $.queryAll('.mdui-fab', _this.dial);\n\n      // 支持 touch 时，始终在 touchstart 时切换，不受 trigger 参数影响\n      if (mdui.support.touch) {\n        $.on(_this.btn, 'touchstart', function () {\n          _this.open();\n        });\n\n        $.on(document, 'touchend', function (e) {\n          if (!$.parents(e.target, '.mdui-fab-wrapper').length) {\n            _this.close();\n          }\n        });\n      }\n\n      // 不支持touch\n      else {\n\n        // 点击切换\n        if (_this.options.trigger === 'click') {\n          $.on(_this.btn, 'click', function () {\n            _this.toggle();\n          });\n        }\n\n        // 鼠标悬浮切换\n        if (_this.options.trigger === 'hover') {\n          $.on(_this.fab, 'mouseenter', function () {\n            _this.open();\n          });\n\n          $.on(_this.fab, 'mouseleave', function () {\n            _this.close();\n          });\n        }\n      }\n    }\n\n    /**\n     * 打开菜单\n     */\n    Fab.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 为菜单中的按钮添加不同的 transition-delay\n      $.each(_this.dialBtns, function (index, btn) {\n        btn.style['transition-delay'] = 15 * (_this.dialBtns.length - index) + 'ms';\n      });\n\n      _this.dial.classList.add('mdui-fab-dial-show');\n\n      // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n      if ($.query('.mdui-fab-opened', _this.btn)) {\n        _this.btn.classList.add('mdui-fab-opened');\n      }\n\n      _this.state = 'opening';\n      $.pluginEvent('open', 'fab', _this, _this.fab);\n\n      // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n      $.transitionEnd(_this.dialBtns[0], function () {\n        if (_this.btn.classList.contains('mdui-fab-opened')) {\n          _this.state = 'opened';\n          $.pluginEvent('opened', 'fab', _this, _this.fab);\n        }\n      });\n    };\n\n    /**\n     * 关闭菜单\n     */\n    Fab.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      // 为菜单中的按钮添加不同的 transition-delay\n      $.each(_this.dialBtns, function (index, btn) {\n        btn.style['transition-delay'] = 15 * index + 'ms';\n      });\n\n      _this.dial.classList.remove('mdui-fab-dial-show');\n      _this.btn.classList.remove('mdui-fab-opened');\n      _this.state = 'closing';\n      $.pluginEvent('close', 'fab', _this, _this.fab);\n\n      // 从上往下依次关闭，最后一个关闭后才表示动画完成\n      $.transitionEnd(_this.dialBtns[_this.dialBtns.length - 1], function () {\n        if (!_this.btn.classList.contains('mdui-fab-opened')) {\n          _this.state = 'closed';\n          $.pluginEvent('closed', 'fab', _this, _this.fab);\n        }\n      });\n    };\n\n    /**\n     * 切换菜单的打开状态\n     */\n    Fab.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取当前菜单状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Fab.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 以动画的形式显示浮动操作按钮\n     */\n    Fab.prototype.show = function () {\n      this.fab.classList.remove('mdui-fab-hide');\n    };\n\n    /**\n     * 以动画的形式隐藏浮动操作按钮\n     */\n    Fab.prototype.hide = function () {\n      this.fab.classList.add('mdui-fab-hide');\n    };\n\n    return Fab;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Fab DATA API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n    // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n    var event = mdui.support.touch ? 'touchstart' : 'click mouseover';\n\n    $.on(document, event, '[mdui-fab]', function (e) {\n      var _this = this;\n      var eventType = e.type;\n\n      var inst = $.data(_this, 'mdui.fab');\n      if (!inst) {\n        var options = $.parseOptions(_this.getAttribute('mdui-fab'));\n        inst = new mdui.Fab(_this, options);\n        $.data(_this, 'mdui.fab', inst);\n\n        // 判断当前事件\n        if (eventType === 'touchstart') {\n          inst.open();\n        }else if (\n          (inst.options.trigger === 'click' && eventType === 'click') ||\n          (inst.options.trigger === 'hover' && eventType === 'mouseover')\n        ) {\n          inst.open();\n        }\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Appbar   ************\n   * =============================================================================\n   * 滚动时自动隐藏应用栏\n   * mdui-appbar-scroll-hide\n   * mdui-appbar-scroll-toolbar-hide\n   */\n\n  $.ready(function () {\n\n    // 滚动时隐藏应用栏\n    $.each($.queryAll('.mdui-appbar-scroll-hide'), function (i, appbar) {\n      $.data(appbar, 'mdui.headroom', new mdui.Headroom(appbar));\n    });\n\n    // 滚动时只隐藏应用栏中的工具栏\n    $.each($.queryAll('.mdui-appbar-scroll-toolbar-hide'), function (i, appbar) {\n      var inst = new mdui.Headroom('.mdui-appbar-scroll-toolbar-hide', {\n        pinnedClass: 'mdui-headroom-pinned-toolbar',\n        unpinnedClass: 'mdui-headroom-unpinned-toolbar',\n      });\n      $.data(appbar, 'mdui.headroom', inst);\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Tab   ************\n   * =============================================================================\n   */\n\n  mdui.Tab = (function () {\n\n    var DEFAULT = {\n      trigger: 'click',       // 触发方式 click: 鼠标点击切换 hover: 鼠标悬浮切换\n      //animation: false,       // 切换时是否显示动画\n      loop: false,            // 为true时，在最后一个选项卡时调用 next() 方法会回到第一个选项卡\n    };\n\n    /**\n     * 选项卡\n     * @param selector\n     * @param opts\n     * @returns {*}\n     * @constructor\n     */\n    function Tab(selector, opts) {\n      var _this = this;\n      var trigger;\n\n      _this.tab = $.dom(selector)[0];\n      if (typeof _this.tab === 'undefined') {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.tab, 'mdui.tab');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n      _this.tabs = $.children(_this.tab, 'a');\n\n      _this.indicator = $.dom('<div class=\"mdui-tab-indicator\"></div>')[0];\n\n      // 选项卡下面添加的指示符\n      _this.tab.appendChild(_this.indicator);\n\n      // 触发方式\n      if (mdui.support.touch) {\n        trigger = 'touchend';\n      } else if (_this.options.trigger === 'hover') {\n        trigger = 'mouseenter';\n      } else {\n        trigger = 'click';\n      }\n\n      // 根据 url hash 获取默认激活的选项卡\n      var hash = location.hash;\n      if (hash) {\n        $.each(_this.tabs, function (i, tab) {\n          if (tab.getAttribute('href') === hash) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      // 含 mdui-tab-active 的元素默认激活\n      if (typeof _this.activeIndex === 'undefined') {\n        $.each(_this.tabs, function (i, tab) {\n          if (tab.classList.contains('mdui-tab-active')) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      // 默认激活第一个选项卡\n      if (typeof _this.activeIndex === 'undefined') {\n        _this.activeIndex = 0;\n      }\n\n      // 设置激活状态选项卡\n      _this._setActive();\n\n      // 监听窗口大小变化事件，调整指示器位置\n      $.on(window, 'resize', mdui.throttle(function () {\n        _this._setIndicatorPosition();\n      }, 100));\n\n      // 监听点击选项卡事件\n      $.each(_this.tabs, function (i, tab) {\n        $.on(tab, trigger, function (e) {\n          if (tab.getAttribute('disabled') !== null) {\n            e.preventDefault();\n            return;\n          }\n\n          _this.activeIndex = i;\n          _this._setActive();\n        });\n\n        $.on(tab, 'click', function (e) {\n          // 阻止链接的默认点击动作\n          if (tab.getAttribute('href').indexOf('#') === 0) {\n            e.preventDefault();\n          }\n        });\n      });\n    }\n\n    /**\n     * 设置激活状态的选项卡\n     */\n    Tab.prototype._setActive = function () {\n      var _this = this;\n\n      $.each(_this.tabs, function (i, tab) {\n        var targetId = tab.getAttribute('href');\n        var targetContent;\n\n        if (tab.getAttribute('disabled') !== null) {\n          if (targetId.indexOf('#') === 0) {\n            targetContent = $.query(targetId);\n            if (targetContent) {\n              targetContent.style.display = 'none';\n            }\n          }\n\n          return;\n        }\n\n        // 选项卡激活状态\n        if (i === _this.activeIndex) {\n          $.pluginEvent('change', 'tab', _this, _this.tab, {\n            index: _this.activeIndex,\n            target: tab,\n          });\n          $.pluginEvent('show', 'tab', _this, tab);\n\n          if (!tab.classList.contains('mdui-tab-active')) {\n            tab.classList.add('mdui-tab-active');\n          }\n        } else {\n          if (tab.classList.contains('mdui-tab-active')) {\n            tab.classList.remove('mdui-tab-active');\n          }\n        }\n\n        // 选项卡内容显示切换\n        if (targetId.indexOf('#') === 0) {\n          targetContent = $.query(targetId);\n          if (targetContent) {\n            if (i === _this.activeIndex) {\n              targetContent.style.display = 'block';\n            } else {\n              targetContent.style.display = 'none';\n            }\n          }\n        }\n\n      });\n\n      _this._setIndicatorPosition();\n    };\n\n    /**\n     * 设置选项卡指示器的位置\n     */\n    Tab.prototype._setIndicatorPosition = function () {\n      var _this = this;\n\n      var activeTab = _this.tabs[_this.activeIndex];\n      if (activeTab.getAttribute('disabled') !== null) {\n        return;\n      }\n\n      var activeTabOffset = $.offset(activeTab);\n      _this.indicator.style.left =\n        activeTabOffset.left + _this.tab.scrollLeft - _this.tab.getBoundingClientRect().left + 'px';\n      _this.indicator.style.width = $.getStyle(activeTab, 'width');\n    };\n\n    /**\n     * 切换到下一个选项卡\n     */\n    Tab.prototype.next = function () {\n      var _this = this;\n\n      if (_this.tabs.length > _this.activeIndex + 1) {\n        _this.activeIndex++;\n      } else if (_this.options.loop) {\n        _this.activeIndex = 0;\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 切换到上一个选项卡\n     */\n    Tab.prototype.prev = function () {\n      var _this = this;\n\n      if (_this.activeIndex > 0) {\n        _this.activeIndex--;\n      } else if (_this.options.loop) {\n        _this.activeIndex = _this.tabs.length - 1;\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 显示指定序号或指定id的选项卡\n     * @param index 从0开始的序号，或以#开头的id\n     */\n    Tab.prototype.show = function (index) {\n      var _this = this;\n\n      if (parseInt(index) === index) {\n        _this.activeIndex = index;\n      } else {\n        $.each(_this.tabs, function (i, tab) {\n          if (tab.id === index) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n     */\n    Tab.prototype.handleUpdate = function () {\n      this._setIndicatorPosition();\n    };\n\n    return Tab;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Tab 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // 实例化插件\n    $.each($.queryAll('[mdui-tab]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-tab'));\n\n      var inst = $.data(target, 'mdui.tab');\n      if (!inst) {\n        inst = new mdui.Tab(target, options);\n        $.data(target, 'mdui.tab', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Drawer 抽屉栏   ************\n   * =============================================================================\n   *\n   * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n   * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n   */\n\n  mdui.Drawer = (function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      // 在桌面设备上是否显示遮罩层。手机和平板不受这个参数影响，始终会显示遮罩层\n      overlay: false,\n    };\n\n    /**\n     * 抽屉栏实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n    function Drawer(selector, opts) {\n      var _this = this;\n\n      _this.drawer = $.dom(selector)[0];\n      if (typeof _this.drawer === 'undefined') {\n        return;\n      }\n\n      var oldInst = $.data(_this.drawer, 'mdui.drawer');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n\n      _this.overlay = false; // 是否显示着遮罩层\n      _this.position = _this.drawer.classList.contains('mdui-drawer-right') ? 'right' : 'left';\n\n      if (_this.drawer.classList.contains('mdui-drawer-close')) {\n        _this.state = 'closed';\n      } else if (_this.drawer.classList.contains('mdui-drawer-open')) {\n        _this.state = 'opened';\n      } else if (mdui.screen.mdUp()) {\n        _this.state = 'opened';\n      } else {\n        _this.state = 'closed';\n      }\n\n      // 浏览器窗口大小调整时\n      $.on(window, 'resize', mdui.throttle(function () {\n        // 由手机平板切换到桌面时\n        if (mdui.screen.mdUp()) {\n          // 如果显示着遮罩，则隐藏遮罩\n          if (_this.overlay && !_this.options.overlay) {\n            mdui.hideOverlay();\n            _this.overlay = false;\n\n            mdui.unlockScreen();\n          }\n\n          // 没有强制关闭，则状态为打开状态\n          if (!_this.drawer.classList.contains('mdui-drawer-close')) {\n            _this.state = 'opened';\n          }\n        }\n\n        // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n        else {\n          if (!_this.overlay && _this.state === 'opened') {\n            // 抽屉栏处于强制打开状态，添加遮罩\n            if (_this.drawer.classList.contains('mdui-drawer-open')) {\n              mdui.showOverlay();\n              _this.overlay = true;\n\n              mdui.lockScreen();\n\n              $.one($.query('.mdui-overlay'), 'click', function () {\n                _this.close();\n              });\n            } else {\n              _this.state = 'closed';\n            }\n          }\n        }\n\n      }, 100));\n\n      // 不支持 touch 的设备默认隐藏滚动条，鼠标移入时显示滚动条；支持 touch 的设备会自动隐藏滚动条\n      if (!mdui.support.touch) {\n        _this.drawer.style['overflow-y'] = 'hidden';\n        _this.drawer.classList.add('mdui-drawer-scrollbar');\n      }\n\n      // 绑定关闭按钮事件\n      var closes = $.queryAll('[mdui-drawer-close]', _this.drawer);\n      $.each(closes, function (i, close) {\n        $.on(close, 'click', function () {\n          _this.close();\n        });\n      });\n    }\n\n    /**\n     * 打开抽屉栏\n     */\n    Drawer.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.drawer.classList.remove('mdui-drawer-close');\n      _this.drawer.classList.add('mdui-drawer-open');\n\n      _this.state = 'opening';\n      $.pluginEvent('open', 'drawer', _this, _this.drawer);\n\n      if (!_this.options.overlay) {\n        document.body.classList.add('mdui-drawer-body-' + _this.position);\n      }\n\n      $.transitionEnd(_this.drawer, function () {\n        if (_this.drawer.classList.contains('mdui-drawer-open')) {\n          _this.state = 'opened';\n          $.pluginEvent('opened', 'drawer', _this, _this.drawer);\n        }\n      });\n\n      if (!mdui.screen.mdUp() || _this.options.overlay) {\n        mdui.showOverlay();\n        _this.overlay = true;\n\n        mdui.lockScreen();\n\n        $.one($.query('.mdui-overlay'), 'click', function () {\n          _this.close();\n        });\n      }\n    };\n\n    /**\n     * 关闭抽屉栏\n     */\n    Drawer.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.drawer.classList.add('mdui-drawer-close');\n      _this.drawer.classList.remove('mdui-drawer-open');\n      _this.state = 'closing';\n      $.pluginEvent('close', 'drawer', _this, _this.drawer);\n\n      if (!_this.options.overlay) {\n        document.body.classList.remove('mdui-drawer-body-' + _this.position);\n      }\n\n      $.transitionEnd(_this.drawer, function () {\n        if (!_this.drawer.classList.contains('mdui-drawer-open')) {\n          _this.state = 'closed';\n          $.pluginEvent('closed', 'drawer', _this, _this.drawer);\n        }\n      });\n\n      if (_this.overlay) {\n        mdui.hideOverlay();\n        _this.overlay = false;\n\n        mdui.unlockScreen();\n      }\n    };\n\n    /**\n     * 切换抽屉栏打开/关闭状态\n     */\n    Drawer.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取抽屉栏状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Drawer.prototype.getState = function () {\n      return this.state;\n    };\n\n    return Drawer;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Drawer 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // 实例化插件\n    $.each($.queryAll('[mdui-drawer]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-drawer'));\n      var selector = options.target;\n      delete options.target;\n\n      var drawer = $.dom(selector)[0];\n\n      var inst = $.data(drawer, 'mdui.drawer');\n      if (!inst) {\n        inst = new mdui.Drawer(drawer, options);\n        $.data(drawer, 'mdui.drawer', inst);\n      }\n\n      $.on(target, 'click', function () {\n        inst.toggle();\n      });\n    });\n\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Dialog 提示框   ************\n   * =============================================================================\n   */\n\n  mdui.Dialog = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      history: true,                // 监听 hashchange 事件\n      overlay: true,                // 打开提示框时显示遮罩\n      modal: false,                 // 是否模态化提示框，为 false 时点击提示框外面区域关闭提示框，为 true 时不关闭\n      closeOnEsc: true,             // 按下 esc 关闭提示框\n      closeOnCancel: true,          // 按下取消按钮时关闭提示框\n      closeOnConfirm: true,         // 按下确认按钮时关闭提示框\n      destroyOnClosed: false,        // 关闭后销毁\n    };\n\n    /**\n     * 遮罩层元素\n     */\n    var overlay;\n\n    /**\n     * 当前提示框\n     */\n    var current;\n\n    /**\n     * 队列名\n     * @type {string}\n     */\n    var queueName = '__md_dialog';\n\n    /**\n     * 窗口宽度变化，或提示框内容变化时，调整提示框位置和提示框内的滚动条\n     */\n    var readjust = function () {\n      if (!current) {\n        return;\n      }\n\n      var dialog = current.dialog;\n\n      var dialogTitle = $.child(dialog, '.mdui-dialog-title');\n      var dialogContent = $.child(dialog, '.mdui-dialog-content');\n      var dialogActions = $.child(dialog, '.mdui-dialog-actions');\n\n      // 调整 dialog 的 top 和 height 值\n      dialog.style.height = '';\n      if (dialogContent) {\n        dialogContent.style.height = '';\n      }\n\n      var dialogHeight = dialog.clientHeight;\n      dialog.style.top = ((window.innerHeight - dialogHeight) / 2) + 'px';\n      dialog.style.height = dialogHeight + 'px';\n\n      // 调整 mdui-dialog-content 的高度\n      var dialogTitleHeight = dialogTitle ? dialogTitle.scrollHeight : 0;\n      var dialogActionsHeight = dialogActions ? dialogActions.scrollHeight : 0;\n      if (dialogContent) {\n        dialogContent.style.height = dialogHeight - dialogTitleHeight - dialogActionsHeight + 'px';\n      }\n    };\n\n    /**\n     * hashchange 事件触发时关闭提示框\n     */\n    var hashchangeEvent = function () {\n      if (location.hash.substring(1).indexOf('&mdui-dialog') < 0) {\n        current.close(true);\n      }\n    };\n\n    /**\n     * 点击遮罩层关闭提示框\n     * @param e\n     */\n    var overlayClick = function (e) {\n      if (e.target.classList.contains('mdui-overlay')) {\n        current.close();\n      }\n    };\n\n    /**\n     * 提示框实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n    function Dialog(selector, opts) {\n      var _this = this;\n\n      // 提示框元素\n      _this.dialog = $.dom(selector)[0];\n      if (typeof _this.dialog === 'undefined') {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.dialog, 'mdui.dialog');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      // 如果提示框元素没有在当前文档中，则需要添加\n      if (!document.body.contains(_this.dialog)) {\n        _this.append = true;\n        document.body.appendChild(_this.dialog);\n      }\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n      _this.state = 'closed';\n\n      // 在不支持触摸的设备上美化滚动条\n      if (!mdui.support.touch) {\n        var content = $.query('.mdui-dialog-content', _this.dialog);\n        if (content) {\n          content.classList.add('mdui-dialog-scrollbar');\n        }\n      }\n\n      // 绑定取消按钮事件\n      var cancels = $.queryAll('[mdui-dialog-cancel]', _this.dialog);\n      $.each(cancels, function (i, cancel) {\n        $.on(cancel, 'click', function () {\n          $.pluginEvent('cancel', 'dialog', _this, _this.dialog);\n          if (_this.options.closeOnCancel) {\n            _this.close();\n          }\n        });\n      });\n\n      // 绑定确认按钮事件\n      var confirms = $.queryAll('[mdui-dialog-confirm]', _this.dialog);\n      $.each(confirms, function (i, confirm) {\n        $.on(confirm, 'click', function () {\n          $.pluginEvent('confirm', 'dialog', _this, _this.dialog);\n          if (_this.options.closeOnConfirm) {\n            _this.close();\n          }\n        });\n      });\n\n      // 绑定关闭按钮事件\n      var closes = $.queryAll('[mdui-dialog-close]', _this.dialog);\n      $.each(closes, function (i, close) {\n        $.on(close, 'click', function () {\n          _this.close();\n        });\n      });\n    }\n\n    /**\n     * 打开提示框\n     */\n    Dialog.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n      if (\n        (current && (current.state === 'opening' || current.state === 'opened')) ||\n        $.queue(queueName).length\n      ) {\n        $.queue(queueName, function () {\n          _this.open();\n        });\n\n        return;\n      }\n\n      current = _this;\n\n      mdui.lockScreen();\n      _this.dialog.style.display = 'block';\n\n      readjust();\n      $.on(window, 'resize', mdui.throttle(function () {\n        readjust();\n      }, 100));\n\n      // 打开消息框\n      _this.dialog.classList.add('mdui-dialog-open');\n      _this.state = 'opening';\n      $.pluginEvent('open', 'dialog', _this, _this.dialog);\n\n      // 打开提示框动画完成后\n      $.transitionEnd(_this.dialog, function () {\n        if (_this.dialog.classList.contains('mdui-dialog-open')) {\n          _this.state = 'opened';\n          $.pluginEvent('opened', 'dialog', _this, _this.dialog);\n        }\n      });\n\n      // 不存在遮罩层元素时，添加遮罩层\n      if (!overlay) {\n        overlay = mdui.showOverlay();\n      }\n\n      // 点击遮罩层时是否关闭提示框\n      $[_this.options.modal ? 'off' : 'on'](overlay, 'click', overlayClick);\n\n      // 是否显示遮罩层，不显示时，把遮罩层背景透明\n      overlay.style.opacity = _this.options.overlay ? '' : 0;\n\n      if (_this.options.history) {\n        // 如果 hash 中原来就有 &mdui-dialog，先删除，避免后退历史纪录后仍然有 &mdui-dialog 导致无法关闭\n        var hash = location.hash.substring(1);\n        if (hash.indexOf('&mdui-dialog') > -1) {\n          hash = hash.replace(/&mdui-dialog/g, '');\n        }\n\n        // 后退按钮关闭对话框\n        location.hash = hash + '&mdui-dialog';\n        $.on(window, 'hashchange', hashchangeEvent);\n      }\n    };\n\n    /**\n     * 关闭提示框\n     */\n    Dialog.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      current = null;\n      _this.dialog.classList.remove('mdui-dialog-open');\n      _this.state = 'closing';\n      $.pluginEvent('close', 'dialog', _this, _this.dialog);\n\n      // 所有提示框都关闭，且当前没有打开的提示框时，隐藏遮罩\n      if ($.queue(queueName).length === 0) {\n        mdui.hideOverlay(overlay);\n        overlay = null;\n      }\n\n      $.transitionEnd(_this.dialog, function () {\n        if (!_this.dialog.classList.contains('mdui-dialog-open')) {\n\n          _this.state = 'closed';\n          $.pluginEvent('closed', 'dialog', _this, _this.dialog);\n\n          _this.dialog.style.display = 'none';\n\n          // 所有提示框都关闭，且当前没有打开的提示框时，解锁屏幕\n          if ($.queue(queueName).length === 0 && !current) {\n            mdui.unlockScreen();\n          }\n\n          $.off(window, 'resize', readjust);\n\n          if (_this.options.destroyOnClosed) {\n            _this.destroy();\n          }\n        }\n      });\n\n      if (_this.options.history && $.queue(queueName).length === 0) {\n        // 是否需要后退历史纪录，默认为 false。\n        // 为 false 时是通过 js 关闭，需要后退一个历史记录\n        // 为 true 时是通过后退按钮关闭，不需要后退历史记录\n        if (!arguments[0]) {\n          window.history.back();\n        }\n\n        $.off(window, 'hashchange', hashchangeEvent);\n      }\n\n      // 关闭旧对话框，打开新对话框。\n      // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n      setTimeout(function () {\n        $.dequeue(queueName);\n      }, 100);\n    };\n\n    /**\n     * 切换提示框打开/关闭状态\n     */\n    Dialog.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取提示框状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Dialog.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 销毁提示框\n     */\n    Dialog.prototype.destroy = function () {\n      var _this = this;\n\n      if (_this.append) {\n        $.remove(_this.dialog);\n      }\n\n      $.data(_this.dialog, 'mdui.dialog', null);\n\n      if (current === _this) {\n        mdui.unlockScreen();\n        mdui.hideOverlay();\n      }\n    };\n\n    /**\n     * 提示框内容变化时，需要调用该方法来调整提示框位置和滚动条高度\n     */\n    Dialog.prototype.handleUpdate = function () {\n      readjust();\n    };\n\n    // esc 按下时关闭对话框\n    $.on(document, 'keydown', function (e) {\n      if (current && current.options.closeOnEsc && current.state === 'opened' && e.keyCode === 27) {\n        current.close();\n      }\n    });\n\n    return Dialog;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Dialog DATA API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    $.on(document, 'click', '[mdui-dialog]', function () {\n      var _this = this;\n      var options = $.parseOptions(_this.getAttribute('mdui-dialog'));\n      var selector = options.target;\n      delete options.target;\n\n      var dialog = $.dom(selector)[0];\n\n      var inst = $.data(dialog, 'mdui.dialog');\n      if (!inst) {\n        inst = new mdui.Dialog(dialog, options);\n        $.data(dialog, 'mdui.dialog', inst);\n      }\n\n      inst.open();\n    });\n\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   mdui.dialog(options)   ************\n   * =============================================================================\n   */\n\n  mdui.dialog = function (options) {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      title: '',                // 标题\n      content: '',              // 文本\n      buttons: [],              // 按钮\n      stackedButtons: false,    // 垂直排列按钮\n      cssClass: '',             // 在 Dialog 上添加的 CSS 类\n      history: true,            // 监听 hashchange 事件\n      overlay: true,            // 是否显示遮罩\n      modal: false,             // 是否模态化提示框\n      closeOnEsc: true,         // 按下 esc 时关闭提示框\n      destroyOnClosed: true,    // 关闭后销毁\n      onOpen: function () {     // 打开动画开始时的回调\n      },\n\n      onOpened: function () {   // 打开动画结束后的回调\n      },\n\n      onClose: function () {    // 关闭动画开始时的回调\n      },\n\n      onClosed: function () {   // 关闭动画结束时的回调\n      },\n    };\n\n    /**\n     * 按钮的默认参数\n     */\n    var DEFAULT_BUTTON = {\n      text: '',                   // 按钮文本\n      bold: false,                // 按钮文本是否加粗\n      close: true,                // 点击按钮后关闭提示框\n      onClick: function (inst) {  // 点击按钮的回调\n      },\n    };\n\n    // 合并参数\n    options = $.extend(DEFAULT, (options || {}));\n    $.each(options.buttons, function (i, button) {\n      options.buttons[i] = $.extend(DEFAULT_BUTTON, button);\n    });\n\n    // 按钮的 HTML\n    var buttonsHTML = '';\n    if (options.buttons.length) {\n      buttonsHTML =\n        '<div class=\"mdui-dialog-actions ' +\n          (options.stackedButtons ? 'mdui-dialog-actions-stacked' : '') +\n        '\">';\n      $.each(options.buttons, function (i, button) {\n        buttonsHTML +=\n          '<a href=\"javascript:void(0)\" ' +\n            'class=\"mdui-btn mdui-ripple mdui-text-color-primary ' +\n            (button.bold ? 'mdui-btn-bold' : '') + '\">' +\n            button.text +\n          '</a>';\n      });\n\n      buttonsHTML += '</div>';\n    }\n\n    // Dialog 的 HTML\n    var HTML =\n      '<div class=\"mdui-dialog ' + options.cssClass + '\">' +\n        (options.title ? '<div class=\"mdui-dialog-title\">' + options.title + '</div>' : '') +\n        (options.content ? '<div class=\"mdui-dialog-content\">' + options.content + '</div>' : '') +\n        buttonsHTML +\n      '</div>';\n\n    // 实例化 Dialog\n    var inst = new mdui.Dialog(HTML, {\n      history: options.history,\n      overlay: options.overlay,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n      destroyOnClosed: options.destroyOnClosed,\n    });\n\n    // 绑定按钮事件\n    if (options.buttons.length) {\n      var buttons = $.queryAll('.mdui-dialog-actions .mdui-btn', inst.dialog);\n      $.each(buttons, function (i, button) {\n        $.on(button, 'click', function () {\n          if (typeof options.buttons[i].onClick === 'function') {\n            options.buttons[i].onClick(inst);\n          }\n\n          if (options.buttons[i].close) {\n            inst.close();\n          }\n        });\n      });\n    }\n\n    // 绑定打开关闭事件\n    if (typeof options.onOpen === 'function') {\n      $.on(inst.dialog, 'open.mdui.dialog', function () {\n        options.onOpen(inst);\n      });\n\n      $.on(inst.dialog, 'opened.mdui.dialog', function () {\n        options.onOpened(inst);\n      });\n\n      $.on(inst.dialog, 'close.mdui.dialog', function () {\n        options.onClose(inst);\n      });\n\n      $.on(inst.dialog, 'closed.mdui.dialog', function () {\n        options.onClosed(inst);\n      });\n    }\n\n    inst.open();\n\n    return inst;\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   mdui.alert(text, title, onConfirm, options)   ************\n   * ************   mdui.alert(text, onConfirm, options)   ************\n   * =============================================================================\n   */\n\n  mdui.alert = function (text, title, onConfirm, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      options = arguments[2];\n    }\n\n    if (typeof onConfirm === 'undefined') {\n      onConfirm = function () {};\n    }\n\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok',             // 按钮上的文本\n      history: true,                 // 监听 hashchange 事件\n      modal: false,                  // 是否模态化提示框，为 false 时点击提示框外面区域关闭提示框，为 true 时不关闭\n      closeOnEsc: true,              // 按下 esc 关闭提示框\n    };\n\n    options = $.extend(DEFAULT, options);\n\n    return mdui.dialog({\n      title: title,\n      content: text,\n      buttons: [\n        {\n          text: options.confirmText,\n          bold: false,\n          close: true,\n          onClick: onConfirm,\n        },\n      ],\n      cssClass: 'mdui-dialog-alert',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n    });\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   mdui.confirm(text, title, onConfirm, onCancel, options)   ************\n   * ************   mdui.confirm(text, onConfirm, onCancel, options)          ************\n   * =============================================================================\n   */\n\n  mdui.confirm = function (text, title, onConfirm, onCancel, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      onCancel = arguments[2];\n      options = arguments[3];\n    }\n\n    if (typeof onConfirm === 'undefined') {\n      onConfirm = function () {};\n    }\n\n    if (typeof onCancel === 'undefined') {\n      onCancel = function () {};\n    }\n\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok',            // 确认按钮的文本\n      cancelText: 'cancel',         // 取消按钮的文本\n      history: true,                // 监听 hashchange 事件\n      modal: false,                 // 是否模态化提示框，为 false 时点击提示框外面区域关闭提示框，为 true 时不关闭\n      closeOnEsc: true,             // 按下 esc 关闭提示框\n    };\n\n    options = $.extend(DEFAULT, options);\n\n    return mdui.dialog({\n      title: title,\n      content: text,\n      buttons: [\n        {\n          text: options.cancelText,\n          bold: false,\n          close: true,\n          onClick: onCancel,\n        },\n        {\n          text: options.confirmText,\n          bold: false,\n          close: true,\n          onClick: onConfirm,\n        },\n      ],\n      cssClass: 'mdui-dialog-confirm',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n    });\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   mdui.prompt(label, title, onConfirm, onCancel, options)   ************\n   * ************   mdui.prompt(label, onConfirm, onCancel, options)          ************\n   * =============================================================================\n   */\n\n  mdui.prompt = function (label, title, onConfirm, onCancel, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      onCancel = arguments[2];\n      options = arguments[3];\n    }\n\n    if (typeof onConfirm === 'undefined') {\n      onConfirm = function () {};\n    }\n\n    if (typeof onCancel === 'undefined') {\n      onCancel = function () {};\n    }\n\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok',        // 确认按钮的文本\n      cancelText: 'cancel',     // 取消按钮的文本\n      history: true,            // 监听 hashchange 事件\n      modal: false,             // 是否模态化提示框，为 false 时点击提示框外面区域关闭提示框，为 true 时不关闭\n      closeOnEsc: true,         // 按下 esc 关闭提示框\n      type: 'text',             // 输入框类型，text: 单行文本框 textarea: 多行文本框\n      maxlength: '',            // 最大输入字符数\n      defaultValue: '',         // 输入框中的默认文本\n    };\n\n    options = $.extend(DEFAULT, options);\n\n    var content =\n      '<div class=\"mdui-textfield\">' +\n        (label ? '<label class=\"mdui-textfield-label\">' + label + '</label>' : '') +\n        (options.type === 'text' ?\n          '<input class=\"mdui-textfield-input\" type=\"text\" ' +\n            'value=\"' + options.defaultValue + '\" ' +\n            (options.maxlength ? ('maxlength=\"' + options.maxlength + '\"') : '') + '/>' :\n          '') +\n        (options.type === 'textarea' ?\n          '<textarea class=\"mdui-textfield-input\" ' +\n            (options.maxlength ? ('maxlength=\"' + options.maxlength + '\"') : '') + '>' +\n              options.defaultValue +\n          '</textarea>' :\n          '') +\n      '</div>';\n\n    return mdui.dialog({\n      title: title,\n      content: content,\n      buttons: [\n        {\n          text: options.cancelText,\n          bold: false,\n          close: true,\n          onClick: function (inst) {\n            var value = $.query('.mdui-textfield-input', inst.dialog).value;\n            onCancel(value, inst);\n          },\n        },\n        {\n          text: options.confirmText,\n          bold: false,\n          close: true,\n          onClick: function (inst) {\n            var value = $.query('.mdui-textfield-input', inst.dialog).value;\n            onConfirm(value, inst);\n          },\n        },\n      ],\n      cssClass: 'mdui-dialog-prompt',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n      onOpen: function (inst) {\n\n        // 初始化输入框\n        var input = $.query('.mdui-textfield-input', inst.dialog);\n        mdui.updateTextFields(input);\n\n        // 聚焦到输入框\n        input.focus();\n\n        // 如果是多行输入框，监听输入框的 input 事件，更新提示框高度\n        if (options.type === 'textarea') {\n          $.on(input, 'input', function () {\n            inst.handleUpdate();\n          });\n        }\n\n        // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新提示框高度\n        if (options.maxlength) {\n          inst.handleUpdate();\n        }\n      },\n    });\n\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   ToolTip 工具提示   ************\n   * =============================================================================\n   */\n\n  mdui.Tooltip = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto',     // 提示所在位置\n      delay: 0,             // 延迟，单位毫秒\n      content: '',          // 提示文本，允许包含 HTML\n    };\n\n    /**\n     * 设置 Tooltip 的位置\n     * @param inst\n     */\n    function setPosition(inst) {\n      var marginLeft;\n      var marginTop;\n      var position;\n\n      // 触发的元素\n      var targetProps = inst.target.getBoundingClientRect();\n\n      // 触发的元素和 Tooltip 之间的距离\n      var targetMargin = (mdui.support.touch ? 24 : 14);\n\n      // Tooltip 的宽度和高度\n      var tooltipWidth = inst.tooltip.offsetWidth;\n      var tooltipHeight = inst.tooltip.offsetHeight;\n\n      // Tooltip 的方向\n      position = inst.options.position;\n\n      // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n      if (['bottom', 'top', 'left', 'right'].indexOf(position) === -1) {\n        if (\n          targetProps.top + targetProps.height + targetMargin + tooltipHeight + 2 <\n          document.documentElement.clientHeight\n        ) {\n          position = 'bottom';\n        } else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n          position = 'top';\n        } else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n          position = 'left';\n        } else if (\n          targetProps.width + targetMargin + tooltipWidth + 2 <\n          document.documentElement.clientWidth - targetProps.left\n        ) {\n          position = 'right';\n        } else {\n          position = 'bottom';\n        }\n      }\n\n      // 设置位置\n      switch (position) {\n        case 'bottom':\n          marginLeft = -1 * (tooltipWidth / 2);\n          marginTop = (targetProps.height / 2) + targetMargin;\n          $.transformOrigin(inst.tooltip, 'top center');\n          break;\n        case 'top':\n          marginLeft = -1 * (tooltipWidth / 2);\n          marginTop = -1 * (tooltipHeight + (targetProps.height / 2) + targetMargin);\n          $.transformOrigin(inst.tooltip, 'bottom center');\n          break;\n        case 'left':\n          marginLeft = -1 * (tooltipWidth + (targetProps.width / 2) + targetMargin);\n          marginTop = -1 * (tooltipHeight / 2);\n          $.transformOrigin(inst.tooltip, 'center right');\n          break;\n        case 'right':\n          marginLeft = (targetProps.width / 2) + targetMargin;\n          marginTop = -1 * (tooltipHeight / 2);\n          $.transformOrigin(inst.tooltip, 'center left');\n          break;\n      }\n\n      var targetOffset = $.offset(inst.target);\n      inst.tooltip.style.top = targetOffset.top + (targetProps.height / 2) + 'px';\n      inst.tooltip.style.left = targetOffset.left + (targetProps.width / 2) + 'px';\n      inst.tooltip.style['margin-left'] = marginLeft + 'px';\n      inst.tooltip.style['margin-top'] = marginTop + 'px';\n    }\n\n    /**\n     * Tooltip 实例\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n    function Tooltip(selector, opts) {\n      var _this = this;\n\n      _this.target = $.dom(selector)[0];\n      if (typeof _this.target === 'undefined') {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.target, 'mdui.tooltip');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n      _this.state = 'closed';\n\n      // 创建 Tooltip HTML\n      var guid = mdui.guid();\n      _this.tooltip = $.dom(\n        '<div class=\"mdui-tooltip ' +\n          (mdui.support.touch ? 'mdui-tooltip-mobile' : 'mdui-tooltip-desktop') +\n          '\" id=\"mdui-tooltip-' + guid + '\">' +\n          _this.options.content + '</div>'\n      )[0];\n      document.body.appendChild(_this.tooltip);\n\n      // 绑定事件\n      var openEvent = mdui.support.touch ? 'touchstart' : 'mouseenter';\n      var closeEvent = mdui.support.touch ? 'touchend' : 'mouseleave';\n      $.on(_this.target, openEvent, function () {\n        _this.open();\n      });\n\n      $.on(_this.target, closeEvent, function () {\n        _this.close();\n      });\n    }\n\n    /**\n     * 打开 Tooltip\n     * @param opts 允许每次打开时设置不同的参数\n     */\n    Tooltip.prototype.open = function (opts) {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      var oldOpts = _this.options;\n\n      // 合并 data 属性参数\n      var dataOpts = $.parseOptions(_this.target.getAttribute('mdui-tooltip'));\n      _this.options = $.extend(_this.options, dataOpts);\n\n      if (opts) {\n        _this.options = $.extend(_this.options, opts);\n      }\n\n      if (oldOpts.content !== _this.options.content) {\n        _this.tooltip.innerHTML = _this.options.content;\n      }\n\n      setPosition(_this);\n\n      _this.timeoutId = setTimeout(function () {\n        _this.tooltip.classList.add('mdui-tooltip-open');\n        _this.state = 'opening';\n        $.pluginEvent('open', 'tooltip', _this, _this.target);\n\n        $.transitionEnd(_this.tooltip, function () {\n          if (_this.tooltip.classList.contains('mdui-tooltip-open')) {\n            _this.state = 'opened';\n            $.pluginEvent('opened', 'tooltip', _this, _this.target);\n          }\n        });\n      }, _this.options.delay);\n    };\n\n    /**\n     * 关闭 Tooltip\n     */\n    Tooltip.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      clearTimeout(_this.timeoutId);\n      _this.tooltip.classList.remove('mdui-tooltip-open');\n      _this.state = 'closing';\n      $.pluginEvent('close', 'tooltip', _this, _this.target);\n\n      $.transitionEnd(_this.tooltip, function () {\n        if (!_this.tooltip.classList.contains('mdui-tooltip-open')) {\n          _this.state = 'closed';\n          $.pluginEvent('closed', 'tooltip', _this, _this.target);\n        }\n      });\n    };\n\n    /**\n     * 切换 Tooltip 状态\n     */\n    Tooltip.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取 Tooltip 状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Tooltip.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 销毁 Tooltip\n     */\n    /*Tooltip.prototype.destroy = function () {\n      var _this = this;\n      clearTimeout(_this.timeoutId);\n      $.data(_this.target, 'mdui.tooltip', null);\n      $.remove(_this.tooltip);\n    };*/\n\n    return Tooltip;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Tooltip DATA API   ************\n   * =============================================================================\n   */\n\n  (function () {\n    // mouseenter 不能冒泡，所以这里用 mouseover 代替\n    var event = mdui.support.touch ? 'touchstart' : 'mouseover';\n\n    $.on(document, event, '[mdui-tooltip]', function () {\n      var _this = this;\n\n      var inst = $.data(_this, 'mdui.tooltip');\n      if (!inst) {\n        var options = $.parseOptions(_this.getAttribute('mdui-tooltip'));\n        inst = new mdui.Tooltip(_this, options);\n        $.data(_this, 'mdui.tooltip', inst);\n\n        inst.open();\n      }\n    });\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Snackbar   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 当前打开着的 Snackbar\n     */\n    var current;\n\n    /**\n     * 对列名\n     * @type {string}\n     */\n    var queueName = '__md_snackbar';\n\n    var DEFAULT = {\n      message: '',                    // 文本内容\n      timeout: 4000,                  // 在用户没有操作时多长时间自动隐藏\n      buttonText: '',                 // 按钮的文本\n      buttonColor: '',                // 按钮的颜色，支持 blue #90caf9 rgba(...)\n      closeOnButtonClick: true,       // 点击按钮时关闭\n      closeOnOutsideClick: true,      // 触摸或点击屏幕其他地方时关闭\n      onClick: function () {          // 在 Snackbar 上点击的回调\n      },\n\n      onButtonClick: function () {    // 点击按钮的回调\n      },\n\n      onClose: function () {          // 关闭动画开始时的回调\n      },\n    };\n\n    /**\n     * 点击 Snackbar 外面的区域关闭\n     * @param e\n     */\n    var closeOnOutsideClick = function (e) {\n      if (\n        !e.target.classList.contains('mdui-snackbar') &&\n        !$.parents(e.target, '.mdui-snackbar').length\n      ) {\n        current.close();\n      }\n    };\n\n    /**\n     * Snackbar 实例\n     * @param opts\n     * @constructor\n     */\n    function Snackbar(opts) {\n      var _this = this;\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n\n      // message 参数必须\n      if (!_this.options.message) {\n        return;\n      }\n\n      _this.state = 'closed';\n\n      // 按钮颜色\n      var buttonColorStyle = '';\n      var buttonColorClass = '';\n\n      if (\n        _this.options.buttonColor.indexOf('#') === 0 ||\n        _this.options.buttonColor.indexOf('rgb') === 0\n      ) {\n        buttonColorStyle = 'style=\"color:' + _this.options.buttonColor + '\"';\n      }else if (_this.options.buttonColor !== '') {\n        buttonColorClass = 'mdui-text-color-' + _this.options.buttonColor;\n      }\n\n      // 添加 HTML\n      var tpl =\n        '<div class=\"mdui-snackbar ' +\n            (mdui.screen.mdUp() ? 'mdui-snackbar-desktop' : 'mdui-snackbar-mobile') +\n        '\">' +\n          '<div class=\"mdui-snackbar-text\">' +\n            _this.options.message +\n          '</div>' +\n          (_this.options.buttonText ?\n            ('<a href=\"javascript:void(0)\" ' +\n            'class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ' +\n              buttonColorClass + '\" ' +\n              buttonColorStyle + '>' +\n              _this.options.buttonText +\n            '</a>') :\n            ''\n          ) +\n        '</div>';\n      _this.snackbar = $.dom(tpl)[0];\n      document.body.appendChild(_this.snackbar);\n\n      // 设置位置\n      $.transform(_this.snackbar, 'translateY(' + _this.snackbar.clientHeight + 'px)');\n      _this.snackbar.style.left = (document.body.clientWidth - _this.snackbar.clientWidth) / 2 + 'px';\n      _this.snackbar.classList.add('mdui-snackbar-transition');\n    }\n\n    /**\n     * 打开 Snackbar\n     */\n    Snackbar.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n      if (current) {\n        $.queue(queueName, function () {\n          _this.open();\n        });\n\n        return;\n      }\n\n      current = _this;\n\n      // 开始打开\n      _this.state = 'opening';\n      $.transform(_this.snackbar, 'translateY(0)');\n\n      $.transitionEnd(_this.snackbar, function () {\n        if (_this.state !== 'opening') {\n          return;\n        }\n\n        _this.state = 'opened';\n\n        // 有按钮时绑定事件\n        if (_this.options.buttonText) {\n          var action = $.query('.mdui-snackbar-action', _this.snackbar);\n          $.on(action, 'click', function () {\n            _this.options.onButtonClick();\n            if (_this.options.closeOnButtonClick) {\n              _this.close();\n            }\n          });\n        }\n\n        // 点击 Snackbar 的事件\n        $.on(_this.snackbar, 'click', function (e) {\n          if (!e.target.classList.contains('mdui-snackbar-action')) {\n            _this.options.onClick();\n          }\n        });\n\n        // 点击 Snackbar 外面的区域关闭\n        if (_this.options.closeOnOutsideClick) {\n          $.on(document, mdui.support.touch ? 'touchstart' : 'click', closeOnOutsideClick);\n        }\n\n        // 超时后自动关闭\n        _this.timeoutId = setTimeout(function () {\n          _this.close();\n        }, _this.options.timeout);\n\n      });\n    };\n\n    /**\n     * 关闭 Snackbar\n     */\n    Snackbar.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      if (typeof _this.timeoutId !== 'undefined') {\n        clearTimeout(_this.timeoutId);\n      }\n\n      if (_this.options.closeOnOutsideClick) {\n        $.off(document, mdui.support.touch ? 'touchstart' : 'click', closeOnOutsideClick);\n      }\n\n      _this.state = 'closing';\n      $.transform(_this.snackbar, 'translateY(' + _this.snackbar.clientHeight + 'px)');\n      _this.options.onClose();\n\n      $.transitionEnd(_this.snackbar, function () {\n        if (_this.state !== 'closing') {\n          return;\n        }\n\n        current = null;\n        _this.state = 'closed';\n        $.remove(_this.snackbar);\n        $.dequeue(queueName);\n      });\n    };\n\n    /**\n     * 打开 Snackbar\n     * @param params\n     */\n    mdui.snackbar = function (params) {\n      var inst = new Snackbar(params);\n\n      inst.open();\n      return inst;\n    };\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Bottom navigation 底部导航栏   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    // 切换导航项\n    $.on(document, 'click', '.mdui-bottom-nav>a', function () {\n      var _this = this;\n      var bottomNav = $.parent(_this, '.mdui-bottom-nav');\n      var items = $.children(bottomNav, 'a');\n\n      $.each(items, function (i, curItem) {\n        if (_this === curItem) {\n          $.pluginEvent('change', 'bottomNav', null, bottomNav, {\n            index: i,\n          });\n\n          curItem.classList.add('mdui-bottom-nav-active');\n        } else {\n          curItem.classList.remove('mdui-bottom-nav-active');\n        }\n      });\n    });\n\n    // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n    $.each($.queryAll('.mdui-bottom-nav-scroll-hide'), function (i, bottomNav) {\n      var inst = new mdui.Headroom(bottomNav, {\n        pinnedClass: 'mdui-headroom-pinned-down',\n        unpinnedClass: 'mdui-headroom-unpinned-down',\n      });\n      $.data(bottomNav, 'mdui.headroom', inst);\n    });\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Spinner 圆形进度条   ************\n   * =============================================================================\n   */\n\n  (function () {\n    /**\n     * layer 的 HTML 结构\n     */\n    var layerHTML = function () {\n      var i = arguments.length === 1 ? arguments[0] : false;\n\n      return '<div class=\"mdui-spinner-layer ' + (i ? 'mdui-spinner-layer-' + i : '') + '\">' +\n                 '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' +\n               '<div class=\"mdui-spinner-circle\"></div>' +\n               '</div>' +\n               '<div class=\"mdui-spinner-gap-patch\">' +\n                 '<div class=\"mdui-spinner-circle\"></div>' +\n               '</div>' +\n               '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' +\n                 '<div class=\"mdui-spinner-circle\"></div>' +\n               '</div>' +\n             '</div>';\n    };\n\n    /**\n     * 填充 HTML\n     * @param spinner\n     */\n    var fillHTML = function (spinner) {\n      var layer;\n      if (spinner.classList.contains('mdui-spinner-colorful')) {\n        layer = layerHTML('1') + layerHTML('2') + layerHTML('3') + layerHTML('4');\n      } else {\n        layer = layerHTML();\n      }\n\n      spinner.innerHTML = layer;\n    };\n\n    /**\n     * 页面加载完后自动填充 HTML 结构\n     */\n    $.ready(function () {\n      var spinners = $.queryAll('.mdui-spinner');\n      $.each(spinners, function (i, spinner) {\n        fillHTML(spinner);\n      });\n    });\n\n    /**\n     * 更新圆形进度条\n     */\n    mdui.updateSpinners = function () {\n      var spinners;\n\n      if (arguments.length === 1) {\n        spinners = $.dom(arguments[0]);\n      } else {\n        spinners = $.queryAll('.mdui-spinner');\n      }\n\n      $.each(spinners, function (i, spinner) {\n        fillHTML(spinner);\n      });\n    };\n\n  })();\n\n\n\n  /**\n   * =============================================================================\n   * ************   Expansion panel 可扩展面板   ************\n   * =============================================================================\n   */\n\n  mdui.Panel = (function () {\n\n    function Panel(selector, opts) {\n      return new $.Collapse(selector, opts, {\n        item: 'mdui-panel-item',\n        itemOpen: 'mdui-panel-item-open',\n        header: 'mdui-panel-item-header',\n        body: 'mdui-panel-item-body',\n      }, 'panel');\n    }\n\n    return Panel;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Expansion panel 自定义属性   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    // 实例化插件\n    $.each($.queryAll('[mdui-panel]'), function (i, target) {\n      var options = $.parseOptions(target.getAttribute('mdui-panel'));\n\n      var inst = $.data(target, 'mdui.panel');\n      if (!inst) {\n        inst = new mdui.Panel(target, options);\n        $.data(target, 'mdui.panel', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Menu 菜单   ************\n   * =============================================================================\n   */\n\n  mdui.Menu = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto',         // 菜单位置 top、bottom、center、auto\n      align: 'auto',            // 菜单和触发它的元素的对齐方式 left、right、center、auto\n      gutter: 16,               // 菜单距离窗口边缘的最小距离，单位 px\n      fixed: false,             // 是否使菜单固定在窗口，不随滚动条滚动\n      covered: 'auto',          // 菜单是否覆盖在触发它的元素上，true、false。auto 时简单菜单覆盖，级联菜单不覆盖\n      subMenuTrigger: 'hover',  // 子菜单的触发方式 hover、click\n      subMenuDelay: 200,        // 子菜单的触发延时，仅在 submenuTrigger 为 hover 有效\n    };\n\n    /**\n     * 类名\n     */\n    var CLASS = {\n      menu: 'mdui-menu',                    // 菜单基础类\n      cascade: 'mdui-menu-cascade',         // 级联菜单\n      open: 'mdui-menu-open',               // 打开状态的菜单\n      item: 'mdui-menu-item',               // 菜单条目\n      active: 'mdui-menu-item-active',      // 激活状态的菜单\n      divider: 'mdui-divider',              // 分隔线\n    };\n\n    /**\n     * 调整主菜单位置\n     * @param _this 实例\n     */\n    var readjust = function (_this) {\n      var menuLeft;\n      var menuTop;\n\n      // 菜单位置和方向\n      var position;\n      var align;\n\n      // window 窗口的宽度和高度\n      var windowHeight = document.documentElement.clientHeight;\n      var windowWidth = document.documentElement.clientWidth;\n\n      // 配置参数\n      var gutter = _this.options.gutter;\n      var isCovered = _this.isCovered;\n      var isFixed = _this.options.fixed;\n\n      // 动画方向参数\n      var transformOriginX;\n      var transformOriginY;\n\n      // 菜单的原始宽度和高度\n      var menuWidth = parseFloat($.getStyle(_this.menu, 'width'));\n      var menuHeight = parseFloat($.getStyle(_this.menu, 'height'));\n\n      var anchor = _this.anchor;\n\n      // 触发菜单的元素在窗口中的位置\n      var anchorTmp = anchor.getBoundingClientRect();\n      var anchorTop = anchorTmp.top;\n      var anchorLeft = anchorTmp.left;\n      var anchorHeight = anchorTmp.height;\n      var anchorWidth = anchorTmp.width;\n      var anchorBottom = windowHeight - anchorTop - anchorHeight;\n      var anchorRight = windowWidth - anchorLeft - anchorWidth;\n\n      // 触发元素相对其拥有定位属性的父元素的位置\n      var anchorOffsetTop = anchor.offsetTop;\n      var anchorOffsetLeft = anchor.offsetLeft;\n\n      // ===============================\n      // ================= 自动判断菜单位置\n      // ===============================\n      if (_this.options.position === 'auto') {\n\n        // 判断下方是否放得下菜单\n        if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n          position = 'bottom';\n        }\n\n        // 判断上方是否放得下菜单\n        else if (anchorTop + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n          position = 'top';\n        }\n\n        // 上下都放不下，居中显示\n        else {\n          position = 'center';\n        }\n      } else {\n        position = _this.options.position;\n      }\n\n      // ===============================\n      // ============== 自动判断菜单对齐方式\n      // ===============================\n      if (_this.options.align === 'auto') {\n\n        // 判断右侧是否放得下菜单\n        if (anchorRight + anchorWidth > menuWidth + gutter) {\n          align = 'left';\n        }\n\n        // 判断左侧是否放得下菜单\n        else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n          align = 'right';\n        }\n\n        // 左右都放不下，居中显示\n        else {\n          align = 'center';\n        }\n      } else {\n        align = _this.options.align;\n      }\n\n      // ===============================\n      // ==================== 设置菜单位置\n      // ===============================\n      if (position === 'bottom') {\n        transformOriginY = '0';\n\n        menuTop =\n          (isCovered ? 0 : anchorHeight) +\n          (isFixed ? anchorTop : anchorOffsetTop);\n\n      } else if (position === 'top') {\n        transformOriginY = '100%';\n\n        menuTop =\n          (isCovered ? anchorHeight : 0) +\n          (isFixed ? (anchorTop - menuHeight) : (anchorOffsetTop - menuHeight));\n\n      } else {\n        transformOriginY = '50%';\n\n        // =====================在窗口中居中\n        // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n        // 级联菜单内部不允许出现滚动条\n        var menuHeightTemp = menuHeight;\n\n        // 简单菜单比窗口高时，限制菜单高度\n        if (!_this.menu.classList.contains('mdui-menu-cascade')) {\n          if (menuHeight + gutter * 2 > windowHeight) {\n            menuHeightTemp = windowHeight - gutter * 2;\n            _this.menu.style.height = menuHeightTemp + 'px';\n          }\n        }\n\n        menuTop =\n          (windowHeight - menuHeightTemp) / 2 +\n          (isFixed ? 0 : (anchorOffsetTop - anchorTop));\n      }\n\n      _this.menu.style.top = menuTop + 'px';\n\n      // ===============================\n      // ================= 设置菜单对齐方式\n      // ===============================\n      if (align === 'left') {\n        transformOriginX = '0';\n\n        menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n\n      } else if (align === 'right') {\n        transformOriginX = '100%';\n\n        menuLeft = isFixed ?\n          (anchorLeft + anchorWidth - menuWidth) :\n          (anchorOffsetLeft + anchorWidth - menuWidth);\n      } else {\n        transformOriginX = '50%';\n\n        //=======================在窗口中居中\n        // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n        var menuWidthTemp = menuWidth;\n\n        // 菜单比窗口宽，限制菜单宽度\n        if (menuWidth + gutter * 2 > windowWidth) {\n          menuWidthTemp = windowWidth - gutter * 2;\n          _this.menu.style.width = menuWidthTemp + 'px';\n        }\n\n        menuLeft =\n          (windowWidth - menuWidthTemp) / 2 +\n          (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n      }\n\n      _this.menu.style.left = menuLeft + 'px';\n\n      // 设置菜单动画方向\n      $.transformOrigin(_this.menu, transformOriginX + ' ' + transformOriginY);\n    };\n\n    /**\n     * 调整子菜单的位置\n     * @param submenu\n     */\n    var readjustSubmenu = function (submenu) {\n      var item = $.parent(submenu, '.' + CLASS.item);\n\n      var submenuTop;\n      var submenuLeft;\n\n      // 子菜单位置和方向\n      var position; // top、bottom\n      var align; // left、right\n\n      // window 窗口的宽度和高度\n      var windowHeight = document.documentElement.clientHeight;\n      var windowWidth = document.documentElement.clientWidth;\n\n      // 动画方向参数\n      var transformOriginX;\n      var transformOriginY;\n\n      // 子菜单的原始宽度和高度\n      var submenuWidth = parseFloat($.getStyle(submenu, 'width'));\n      var submenuHeight = parseFloat($.getStyle(submenu, 'height'));\n\n      // 触发子菜单的菜单项的宽度高度\n      var itemTmp = item.getBoundingClientRect();\n      var itemWidth = itemTmp.width;\n      var itemHeight = itemTmp.height;\n      var itemLeft = itemTmp.left;\n      var itemTop = itemTmp.top;\n\n      // ===================================\n      // ===================== 判断菜单上下位置\n      // ===================================\n\n      // 判断下方是否放得下菜单\n      if (windowHeight - itemTop > submenuHeight) {\n        position = 'bottom';\n      }\n\n      // 判断上方是否放得下菜单\n      else if (itemTop + itemHeight > submenuHeight) {\n        position = 'top';\n      }\n\n      // 默认放在下方\n      else {\n        position = 'bottom';\n      }\n\n      // ====================================\n      // ====================== 判断菜单左右位置\n      // ====================================\n\n      // 判断右侧是否放得下菜单\n      if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n        align = 'left';\n      }\n\n      // 判断左侧是否放得下菜单\n      else if (itemLeft > submenuWidth) {\n        align = 'right';\n      }\n\n      // 默认放在右侧\n      else {\n        align = 'left';\n      }\n\n      // ===================================\n      // ======================== 设置菜单位置\n      // ===================================\n      if (position === 'bottom') {\n        transformOriginY = '0';\n        submenuTop = '0';\n      } else if (position === 'top') {\n        transformOriginY = '100%';\n        submenuTop = -submenuHeight + itemHeight;\n      }\n\n      submenu.style.top = submenuTop + 'px';\n\n      // ===================================\n      // ===================== 设置菜单对齐方式\n      // ===================================\n      if (align === 'left') {\n        transformOriginX = '0';\n        submenuLeft = itemWidth;\n      } else if (align === 'right') {\n        transformOriginX = '100%';\n        submenuLeft = -submenuWidth;\n      }\n\n      submenu.style.left = submenuLeft + 'px';\n\n      // 设置菜单动画方向\n      $.transformOrigin(submenu, transformOriginX + ' ' + transformOriginY);\n    };\n\n    /**\n     * 打开子菜单\n     * @param submenu\n     */\n    var openSubMenu = function (submenu) {\n      readjustSubmenu(submenu);\n      submenu.classList.add(CLASS.open);\n\n      // 菜单项上添加激活状态的样式\n      var item = $.parent(submenu, '.' + CLASS.item);\n      item.classList.add(CLASS.active);\n    };\n\n    /**\n     * 关闭子菜单，及其嵌套的子菜单\n     * @param submenu\n     */\n    var closeSubMenu = function (submenu) {\n      var item;\n\n      // 关闭子菜单\n      submenu.classList.remove(CLASS.open);\n\n      // 移除激活状态的样式\n      item = $.parent(submenu, '.' + CLASS.item);\n      item.classList.remove(CLASS.active);\n\n      // 循环关闭嵌套的子菜单\n      var submenus = $.queryAll('.' + CLASS.menu, submenu);\n      $.each(submenus, function (i, tmp) {\n        tmp.classList.remove(CLASS.open);\n\n        // 移除激活状态的样式\n        item = $.parent(tmp, '.' + CLASS.item);\n        item.classList.remove(CLASS.active);\n      });\n    };\n\n    /**\n     * 切换子菜单状态\n     * @param submenu\n     */\n    var toggleSubMenu = function (submenu) {\n      if (submenu.classList.contains(CLASS.open)) {\n        closeSubMenu(submenu);\n      } else {\n        openSubMenu(submenu);\n      }\n    };\n\n    /**\n     * 绑定子菜单事件\n     * @param inst 实例\n     */\n    var bindSubMenuEvent = function (inst) {\n      var trigger;\n      var delay;\n\n      if (inst.options.subMenuTrigger === 'hover' && !mdui.support.touch) {\n        trigger = 'mouseover mouseout';\n        delay = inst.options.subMenuDelay;\n      } else {\n        trigger = 'click';\n        delay = 0;\n      }\n\n      // subMneuTrigger: 'click'\n      if (trigger === 'click') {\n        $.on(inst.menu, trigger, '.' + CLASS.item, function (e) {\n          var _this = this;\n\n          // 禁用状态菜单不操作\n          if (_this.getAttribute('disabled') !== null) {\n            return;\n          }\n\n          // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n          if ($.is(e.target, '.' + CLASS.menu) || $.is(e.target, '.' + CLASS.divider)) {\n            return;\n          }\n\n          // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n          if ($.parents(e.target, '.' + CLASS.item)[0] !== _this) {\n            return;\n          }\n\n          var submenu = $.child(_this, '.' + CLASS.menu);\n\n          // 先关闭除当前子菜单外的所有同级子菜单\n          var menu = $.parent(_this, '.' + CLASS.menu);\n          var items = $.children(menu, '.' + CLASS.item);\n          $.each(items, function (i, item) {\n            var tmpSubmenu = $.child(item, '.' + CLASS.menu);\n            if (\n              tmpSubmenu &&\n              (!submenu || !$.is(tmpSubmenu, submenu))\n            ) {\n              closeSubMenu(tmpSubmenu);\n            }\n          });\n\n          // 切换当前子菜单\n          if (submenu) {\n            toggleSubMenu(submenu);\n          }\n        });\n      }\n\n      // subMenuTrigger: 'hover'\n      else {\n\n        // 临时存储 setTimeout 对象\n        var timeout;\n\n        var timeoutOpen;\n        var timeoutClose;\n\n        $.on(inst.menu, trigger, '.' + CLASS.item, function (e) {\n          var _this = this;\n          var eventType = e.type;\n          var relatedTarget = e.relatedTarget;\n\n          // 禁用状态的菜单不操作\n          if (_this.getAttribute('disabled') !== null) {\n            return;\n          }\n\n          // 用 mouseover 模拟 mouseenter\n          if (eventType === 'mouseover') {\n            if (_this !== relatedTarget && $.contains(_this, relatedTarget)) {\n              return;\n            }\n          }\n\n          // 用 mouseout 模拟 mouseleave\n          else if (eventType === 'mouseout') {\n            if (_this === relatedTarget || $.contains(_this, relatedTarget)) {\n              return;\n            }\n          }\n\n          // 当前菜单项下的子菜单，未必存在\n          var submenu = $.child(_this, '.' + CLASS.menu);\n\n          // 鼠标移入菜单项时，显示菜单项下的子菜单\n          if (eventType === 'mouseover') {\n            if (submenu) {\n\n              // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n              var tmpClose = $.data(submenu, 'timeoutClose.mdui.menu');\n              if (tmpClose) {\n                clearTimeout(tmpClose);\n              }\n\n              // 如果当前子菜单已经打开，不操作\n              if (submenu.classList.contains(CLASS.open)) {\n                return;\n              }\n\n              // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n              clearTimeout(timeoutOpen);\n\n              // 准备打开当前子菜单\n              timeout = timeoutOpen = setTimeout(function () {\n                openSubMenu(submenu);\n              }, delay);\n\n              $.data(submenu, 'timeoutOpen.mdui.menu', timeout);\n            }\n          }\n\n          // 鼠标移出菜单项时，关闭菜单项下的子菜单\n          else if (eventType === 'mouseout') {\n            if (submenu) {\n\n              // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n              var tmpOpen = $.data(submenu, 'timeoutOpen.mdui.menu');\n              if (tmpOpen) {\n                clearTimeout(tmpOpen);\n              }\n\n              // 准备关闭当前子菜单\n              timeout = timeoutClose = setTimeout(function () {\n                closeSubMenu(submenu);\n              }, delay);\n\n              $.data(submenu, 'timeoutClose.mdui.menu', timeout);\n            }\n          }\n        });\n      }\n    };\n\n    /**\n     * 菜单\n     * @param anchorSelector 点击该元素触发菜单\n     * @param menuSelector 菜单\n     * @param opts 配置项\n     * @constructor\n     */\n    function Menu(anchorSelector, menuSelector, opts) {\n      var _this = this;\n\n      // 触发菜单的元素\n      _this.anchor = $.dom(anchorSelector)[0];\n      if (typeof _this.anchor === 'undefined') {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $.data(_this.anchor, 'mdui.menu');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.menu = $.dom(menuSelector)[0];\n\n      // 触发菜单的元素 和 菜单必须时同级的元素，否则菜单可能不能定位\n      if (!$.child(_this.anchor.parentNode, _this.menu)) {\n        return;\n      }\n\n      _this.options = $.extend(DEFAULT, (opts || {}));\n      _this.state = 'closed';\n\n      // 是否是级联菜单\n      _this.isCascade = _this.menu.classList.contains(CLASS.cascade);\n\n      // covered 参数处理\n      if (_this.options.covered === 'auto') {\n        _this.isCovered = !_this.isCascade;\n      } else {\n        _this.isCovered = _this.options.covered;\n      }\n\n      // 点击触发菜单切换\n      $.on(_this.anchor, 'click', function () {\n        _this.toggle();\n      });\n\n      // 点击菜单外面区域关闭菜单\n      $.on(document, 'click touchstart', function (e) {\n        if (\n          (_this.state === 'opening' || _this.state === 'opened') &&\n          !$.is(e.target, _this.menu) &&\n          !$.contains(_this.menu, e.target) &&\n          !$.is(e.target, _this.anchor) &&\n          !$.contains(_this.anchor, e.target)\n        ) {\n          _this.close();\n        }\n      });\n\n      // 点击不含子菜单的菜单条目关闭菜单\n      $.on(document, 'click', '.' + CLASS.item, function () {\n        if (!$.query('.' + CLASS.menu, this) && this.getAttribute('disabled') === null) {\n          _this.close();\n        }\n      });\n\n      // 绑定点击或鼠标移入含子菜单的条目的事件\n      bindSubMenuEvent(_this);\n\n      // 窗口大小变化时，重新调整菜单位置\n      $.on(window, 'resize', mdui.throttle(function () {\n        readjust(_this);\n      }, 100));\n    }\n\n    /**\n     * 切换菜单状态\n     */\n    Menu.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 打开菜单\n     */\n    Menu.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.state = 'opening';\n\n      // 调整菜单位置\n      readjust(_this);\n\n      // 菜单隐藏状态使用使用 fixed 定位。\n      _this.menu.style.position = _this.options.fixed ? 'fixed' : 'absolute';\n\n      // 打开菜单\n      _this.menu.classList.add(CLASS.open);\n      $.pluginEvent('open', 'menu', _this, _this.menu);\n\n      // 打开动画完成后\n      $.transitionEnd(_this.menu, function () {\n\n        // 如果打开动画结束前，菜单状态已经改变了，则不触发 opened 事件\n        if (_this.state !== 'opening') {\n          return;\n        }\n\n        _this.state = 'opened';\n        $.pluginEvent('opened', 'menu', _this, _this.menu);\n      });\n    };\n\n    /**\n     * 关闭菜单\n     */\n    Menu.prototype.close = function () {\n      var _this = this;\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.menu.classList.remove(CLASS.open);\n      _this.state = 'closing';\n      $.pluginEvent('close', 'menu', _this, _this.menu);\n\n      // 菜单开始关闭时，关闭所有子菜单\n      $.each($.queryAll('.mdui-menu', _this.menu), function (i, submenu) {\n        closeSubMenu(submenu);\n      });\n\n      // 关闭动画完成后\n      $.transitionEnd(_this.menu, function () {\n\n        // 如果关闭动画完成前，菜单状态又改变了，则不触发 closed 事件\n        if (_this.state !== 'closing') {\n          return;\n        }\n\n        _this.state = 'closed';\n        $.pluginEvent('closed', 'menu', _this, _this.menu);\n\n        // 关闭后，恢复菜单样式到默认状态\n        _this.menu.style.top = '';\n        _this.menu.style.left = '';\n        _this.menu.style.width = '';\n\n        // 关闭后，恢复 fixed 定位\n        _this.menu.style.position = 'fixed';\n      });\n    };\n\n    return Menu;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Menu 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $.ready(function () {\n\n    $.on(document, 'click', '[mdui-menu]', function () {\n      var _this = this;\n\n      var inst = $.data(_this, 'mdui.menu');\n      if (!inst) {\n        var options = $.parseOptions(_this.getAttribute('mdui-menu'));\n        var menuSelector = options.target;\n        delete options.target;\n\n        inst = new mdui.Menu(_this, menuSelector, options);\n        $.data(_this, 'mdui.menu', inst);\n\n        inst.toggle();\n      }\n    });\n  });\n\n\n  /* jshint ignore:start */\n  window.mdui = mdui;\n})(window, document);\n/* jshint ignore:end */\n\n\n\n// WEBPACK FOOTER //\n// ./src/3rd/mdui@v0.1.2/js/mdui.js","import Omic from '../Omic'\n\nexport default class OmicDivider extends Omic {\n  constructor(data) {\n    data = Object.assign({\n      inset: 'false',\n      theme: ''\n    }, data)\n    if ('light|dark'.indexOf(data.theme) < 0) {\n      data.theme = ''\n    }\n    super(data)\n  }\n  render() {\n    return `<div class='mdui-divider{{if \"true\" === inset}}-inset{{/if}}{{if theme}}-{{theme}}{{/if}}' style='{{style}}'></div>`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/divider/OmicDivider.js","import OmicDivider from './OmicDivider'\r\n\r\nexport default {\r\n  OmicDivider,\r\n  $isPkg: true\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/divider/index.js","import Omicx from '../Omicx'\r\n\r\nexport default class OmicCol extends Omicx {\r\n  constructor(data) {\r\n    data = Object.assign({\r\n      $__tag_closed_: false, //内部使用，标签是否闭合\r\n      $__tag_self_: OmicCol, //内部使用，未闭合标签需设定\r\n    }, data)\r\n    super(data)\r\n  }\r\n  render() {\r\n    return `<div ref='OmicCol-div-{{key}}'\r\n      class='mdui-col {{clazz}}'\r\n      style='{{style}}'\r\n    >`\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/grid/OmicCol.js","import Omicx from '../Omicx'\r\n\r\nexport default class OmicContainer extends Omicx {\r\n  constructor(data) {\r\n    data = Object.assign({\r\n      $__tag_closed_: false, //内部使用，标签是否闭合\r\n      $__tag_self_: OmicContainer, //内部使用，未闭合标签需设定\r\n      fluid: 'false'\r\n    }, data)\r\n    super(data)\r\n  }\r\n  render() {\r\n    return `<div ref='OmicContainer-div-{{key}}' class='mdui-container{{if \"true\"===fluid}}-fluid{{/if}} {{clazz}}' style='{{style}}'>`\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/grid/OmicContainer.js","import Omicx from '../Omicx'\r\n\r\nexport default class OmicRow extends Omicx {\r\n  constructor(data) {\r\n    data = Object.assign({\r\n      $__tag_closed_: false, //内部使用，标签是否闭合\r\n      $__tag_self_: OmicRow, //内部使用，未闭合标签需设定\r\n      gapless: 'false', //消除列间距\r\n      xs: 0, //等分1-12，>0\r\n      sm: 0, //等分1-12，>600px\r\n      md: 0, //等分1-12，>1024px\r\n      lg: 0, //等分1-12，>1440px\r\n      xl: 0 //等分1-12，>1920px\r\n    }, data)\r\n    super(data)\r\n  }\r\n  render() {\r\n    return `<div ref='OmicRow-div-{{key}}'\r\n      class='mdui-row{{if \"true\"===gapless}}mdui-row-gapless{{/if}}\r\n      {{if xs > 0 && xs <= 12}}mdui-row-xs-{{xs}}{{/if}}\r\n      {{if sm > 0 && sm <= 12}}mdui-row-sm-{{sm}}{{/if}}\r\n      {{if md > 0 && md <= 12}}mdui-row-md-{{md}}{{/if}}\r\n      {{if lg > 0 && lg <= 12}}mdui-row-lg-{{lg}}{{/if}}\r\n      {{if xl > 0 && xl <= 12}}mdui-row-xl-{{xl}}{{/if}} {{clazz}}'\r\n      style='{{style}}'\r\n    >`\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/grid/OmicRow.js","import OmicContainer from './OmicContainer'\r\nimport OmicRow from './OmicRow'\r\nimport OmicCol from './OmicCol'\r\n\r\nexport default {\r\n  OmicContainer,\r\n  OmicRow,\r\n  OmicCol,\r\n  $isPkg: true\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/grid/index.js","export default {\n  email: '&#xe0be;',\n  account_circle: '&#xe853;'\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/icon/Icons.js","import OmicIcon from './OmicIcon'\r\n\r\nexport default {\r\n  OmicIcon,\r\n  $isPkg: true\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/icon/index.js","import OmicInput from './OmicInput'\r\n\r\nexport default class OmicNumber extends OmicInput {\r\n  constructor(data) {\r\n    data = data ? data : {}\r\n    data.type = 'number'\r\n    data.clazz = data.clazz ? 'mdui-text-right ' + data.clazz : 'mdui-text-right'\r\n    super(data)\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/input/OmicNumber.js","import OmicInput from './OmicInput'\r\nimport OmicNumber from './OmicNumber'\r\n\r\nexport default {\r\n  OmicInput,\r\n  OmicNumber,\r\n  $isPkg: true\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/input/index.js","import Omic from '../Omic'\r\n\r\nexport default class OmicEnd extends Omic {\r\n  constructor(data) {\r\n    data = Object.assign({\r\n      $__all_closed_: true\r\n    }, data)\r\n    super(data)\r\n  }\r\n  beforeRender() {\r\n    let sbilings = this.parent.children\r\n    let len = sbilings.length\r\n    for (var i = len - 1; i > 0; i--) {\r\n      let t = sbilings[i]\r\n      if (!t.data.$__tag_closed_) {\r\n        t.data.$__tag_closed_ = true\r\n        this.data.$__all_closed_ = false\r\n        break\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return `{{if !$__all_closed_}}</div>{{/if}}`\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/other/OmicEnd.js","import OmicEnd from './OmicEnd'\r\n\r\nexport default {\r\n  OmicEnd,\r\n  $isPkg: true\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/other/index.js","import Omi from 'omi'\nimport artTemplate from './3rd/artTemplate@3.1.0/template-debug.js'\n\nimport Components from './components'\nimport Omic from './components/Omic'\nimport Omicx from './components/Omicx'\nimport Utils from './utils/Utils'\n\nOmi.template = function (tpl, data) {\n  return artTemplate.compile(tpl)(data)\n}\n\nconst components = {\n  Components\n}\n\nconst install = function (Omi) {\n  Utils.eachInstall(Omi, components, '')\n}\n\n// auto install\nif (typeof window !== 'undefined' && window.Omi) {\n  install(window.Omi)\n}\n\nexport default {\n  Omic,\n  Omicx,\n  Utils,\n  install\n}\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Omic from './Omic'\r\n\r\nimport OmicUitls from './utils/OmicUitls'\r\n\r\nexport default class Omicx extends Omic {\r\n  constructor(data) {\r\n    data = Object.assign({\r\n      $__tag_closed_: false, //内部使用，标签是否闭合\r\n      $__tag_self_: Omicx //内部使用，未闭合标签需设定\r\n    }, data)\r\n    super(data)\r\n  }\r\n  beforeRender() {\r\n    //渲染内容前调用,非自闭合标签需先执行super.beforeRender()\r\n    OmicUitls.injectEndTag(this) // 闭合兄弟层div\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/Omicx.js","import Omic from '../Omic'\nimport Icons from './Icons'\n\nexport default class OmicIcon extends Omic {\n  constructor(data) {\n    data = Object.assign({\n      icon: '',\n      align: ''\n    }, data)\n    super(data)\n  }\n  install() {\n    if (Icons[this.data.icon]) {\n      this.data.icon = Icons[this.data.icon]\n    }\n  }\n  render() {\n    return `{{if icon}} <i class='mdui-icon material-icons {{if align}}mdui-icon-{{align}}{{/if}} {{clazz}}' style='{{style}}'>{{icon}}</i> {{/if}}`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/icon/OmicIcon.js","import Omic from '../Omic'\nimport OmicIcon from '../icon/OmicIcon'\n\nexport default class OmicInput extends Omic {\n  constructor(data) {\n    data = Object.assign({\n      value: '',\n      type: 'text',\n      label: null,\n      icon: null,\n      multiple: false,\n      maxlength: null,\n      placeholder: null,\n      floating: false,\n      required: false,\n      pattern: null,\n      msg: null\n    }, data)\n    super(data)\n  }\n  install() {\n    super.$makeHTML('omic-icon', OmicIcon)\n  }\n  installed() {\n    if (this.data.pattern) {\n      this.refs['OmicInput-input-' + this.data.key].pattern = this.data.pattern\n    }\n  }\n  style() {\n    return `\n      .icon-middle {\n        top: 36%;\n      }\n    `\n  }\n  handleChange(target, event) {\n    this.data.value = target.value\n    if (this.onchange) {\n      this.onchange(target, event, this.data)\n    }\n  }\n  handleBlur(target, event) {\n    if (this.onblur) {\n      this.onblur(target, event, this.data)\n    }\n  }\n  render() {\n    return `<div class='mdui-textfield {{if 'true'===floating}}mdui-textfield-floating-label{{/if}}'>\n      {{if icon}} <omic-icon data-icon='{{icon}}' data-clazz='icon-middle'/> {{/if}}\n      {{if label}} <label class='mdui-textfield-label'>{{label}}</label> {{/if}}\n      {{if 'true'===multiple}}\n        <textarea ref='OmicInput-input-{{key}}' id='{{id}}' name='{{name}}' placeholder='{{placeholder}}'\n          class='mdui-textfield-input {{clazz}}' style='{{style}}'\n          onchange='handleChange(this, event)' onblur='handleBlur(this,event)'\n          {{if maxlength&&maxlength>0}} maxlength='{{maxlength}}' {{/if}}\n          {{if 'true'===disabled}} disabled {{/if}}\n          {{if 'true'===required}} required {{/if}}\n          value='{{value}}'\n        ></textarea>\n      {{else}}\n        <input ref='OmicInput-input-{{key}}' id='{{id}}' name='{{name}}' value='{{value}}'\n          type='{{type}}' placeholder='{{placeholder}}' class='mdui-textfield-input {{clazz}}'\n          style='{{style}}' onchange='handleChange(this, event)' onblur='handleBlur(this,event)'\n          {{if maxlength&&maxlength>0}} maxlength='{{maxlength}}' {{/if}}\n          {{if 'true'===disabled}} disabled {{/if}}\n          {{if 'true'===required}} required {{/if}}\n        />\n      {{/if}}\n      {{if msg}}\n        <div class=\"mdui-textfield-error\">{{msg}}</div>\n      {{/if}}\n    </div>`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/input/OmicInput.js","import Omic from '../Omic'\n\nexport default {\n  copyEvent(target) {\n    // data中事件方法copy到组件\n    if (target && target instanceof Omic) {\n      let data = target.data\n      for (let key in data) {\n        if (data.hasOwnProperty(key) &&\n          key.indexOf('on') === 0 &&\n          data[key] instanceof Function) {\n          target[key] = data[key]\n        }\n      }\n    }\n  },\n  injectEndTag(target) {\n    // 插入</div>\n    if (!target.data.$__tag_closed_) {\n      let sbilings = target.parent.children\n      let len = sbilings.length\n      for (var i = len - 2; i > 0; i--) {\n        let t = sbilings[i]\n        if (!t.data.$__tag_closed_) {\n          if (t instanceof target.data.$__tag_self_) {\n            t.data.$__tag_closed_ = true\n            let old = target.render;\n            target.render = function () {\n              return `</div>` + old()\n            }\n          }\n          break\n        }\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/utils/OmicUitls.js","/*!\n * artTemplate - Template Engine\n * https://github.com/aui/artTemplate\n * Released under the MIT, BSD, and GPL Licenses\n */\n \n!(function () {\n\n\n/**\n * 模板引擎\n * @name    template\n * @param   {String}            模板名\n * @param   {Object, String}    数据。如果为字符串则编译并缓存编译结果\n * @return  {String, Function}  渲染好的HTML字符串或者渲染方法\n */\nvar template = function (filename, content) {\n    return typeof content === 'string'\n    ?   compile(content, {\n            filename: filename\n        })\n    :   renderFile(filename, content);\n};\n\n\ntemplate.version = '3.0.0';\n\n\n/**\n * 设置全局配置\n * @name    template.config\n * @param   {String}    名称\n * @param   {Any}       值\n */\ntemplate.config = function (name, value) {\n    defaults[name] = value;\n};\n\n\n\nvar defaults = template.defaults = {\n    openTag: '<%',    // 逻辑语法开始标签\n    closeTag: '%>',   // 逻辑语法结束标签\n    escape: true,     // 是否编码输出变量的 HTML 字符\n    cache: true,      // 是否开启缓存（依赖 options 的 filename 字段）\n    compress: false,  // 是否压缩输出\n    parser: null      // 自定义语法格式器 @see: template-syntax.js\n};\n\n\nvar cacheStore = template.cache = {};\n\n\n/**\n * 渲染模板\n * @name    template.render\n * @param   {String}    模板\n * @param   {Object}    数据\n * @return  {String}    渲染好的字符串\n */\ntemplate.render = function (source, options) {\n    return compile(source)(options);\n};\n\n\n/**\n * 渲染模板(根据模板名)\n * @name    template.render\n * @param   {String}    模板名\n * @param   {Object}    数据\n * @return  {String}    渲染好的字符串\n */\nvar renderFile = template.renderFile = function (filename, data) {\n    var fn = template.get(filename) || showDebugInfo({\n        filename: filename,\n        name: 'Render Error',\n        message: 'Template not found'\n    });\n    return data ? fn(data) : fn;\n};\n\n\n/**\n * 获取编译缓存（可由外部重写此方法）\n * @param   {String}    模板名\n * @param   {Function}  编译好的函数\n */\ntemplate.get = function (filename) {\n\n    var cache;\n    \n    if (cacheStore[filename]) {\n        // 使用内存缓存\n        cache = cacheStore[filename];\n    } else if (typeof document === 'object') {\n        // 加载模板并编译\n        var elem = document.getElementById(filename);\n        \n        if (elem) {\n            var source = (elem.value || elem.innerHTML)\n            .replace(/^\\s*|\\s*$/g, '');\n            cache = compile(source, {\n                filename: filename\n            });\n        }\n    }\n\n    return cache;\n};\n\n\nvar toString = function (value, type) {\n\n    if (typeof value !== 'string') {\n\n        type = typeof value;\n        if (type === 'number') {\n            value += '';\n        } else if (type === 'function') {\n            value = toString(value.call(value));\n        } else {\n            value = '';\n        }\n    }\n\n    return value;\n\n};\n\n\nvar escapeMap = {\n    \"<\": \"&#60;\",\n    \">\": \"&#62;\",\n    '\"': \"&#34;\",\n    \"'\": \"&#39;\",\n    \"&\": \"&#38;\"\n};\n\n\nvar escapeFn = function (s) {\n    return escapeMap[s];\n};\n\nvar escapeHTML = function (content) {\n    return toString(content)\n    .replace(/&(?![\\w#]+;)|[<>\"']/g, escapeFn);\n};\n\n\nvar isArray = Array.isArray || function (obj) {\n    return ({}).toString.call(obj) === '[object Array]';\n};\n\n\nvar each = function (data, callback) {\n    var i, len;        \n    if (isArray(data)) {\n        for (i = 0, len = data.length; i < len; i++) {\n            callback.call(data, data[i], i, data);\n        }\n    } else {\n        for (i in data) {\n            callback.call(data, data[i], i);\n        }\n    }\n};\n\n\nvar utils = template.utils = {\n\n\t$helpers: {},\n\n    $include: renderFile,\n\n    $string: toString,\n\n    $escape: escapeHTML,\n\n    $each: each\n    \n};/**\n * 添加模板辅助方法\n * @name    template.helper\n * @param   {String}    名称\n * @param   {Function}  方法\n */\ntemplate.helper = function (name, helper) {\n    helpers[name] = helper;\n};\n\nvar helpers = template.helpers = utils.$helpers;\n\n\n\n\n/**\n * 模板错误事件（可由外部重写此方法）\n * @name    template.onerror\n * @event\n */\ntemplate.onerror = function (e) {\n    var message = 'Template Error\\n\\n';\n    for (var name in e) {\n        message += '<' + name + '>\\n' + e[name] + '\\n\\n';\n    }\n    \n    if (typeof console === 'object') {\n        console.error(message);\n    }\n};\n\n\n// 模板调试器\nvar showDebugInfo = function (e) {\n\n    template.onerror(e);\n    \n    return function () {\n        return '{Template Error}';\n    };\n};\n\n\n/**\n * 编译模板\n * 2012-6-6 @TooBug: define 方法名改为 compile，与 Node Express 保持一致\n * @name    template.compile\n * @param   {String}    模板字符串\n * @param   {Object}    编译选项\n *\n *      - openTag       {String}\n *      - closeTag      {String}\n *      - filename      {String}\n *      - escape        {Boolean}\n *      - compress      {Boolean}\n *      - debug         {Boolean}\n *      - cache         {Boolean}\n *      - parser        {Function}\n *\n * @return  {Function}  渲染方法\n */\nvar compile = template.compile = function (source, options) {\n    \n    // 合并默认配置\n    options = options || {};\n    for (var name in defaults) {\n        if (options[name] === undefined) {\n            options[name] = defaults[name];\n        }\n    }\n\n\n    var filename = options.filename;\n\n\n    try {\n        \n        var Render = compiler(source, options);\n        \n    } catch (e) {\n    \n        e.filename = filename || 'anonymous';\n        e.name = 'Syntax Error';\n\n        return showDebugInfo(e);\n        \n    }\n    \n    \n    // 对编译结果进行一次包装\n\n    function render (data) {\n        \n        try {\n            \n            return new Render(data, filename) + '';\n            \n        } catch (e) {\n            \n            // 运行时出错后自动开启调试模式重新编译\n            if (!options.debug) {\n                options.debug = true;\n                return compile(source, options)(data);\n            }\n            \n            return showDebugInfo(e)();\n            \n        }\n        \n    }\n    \n\n    render.prototype = Render.prototype;\n    render.toString = function () {\n        return Render.toString();\n    };\n\n\n    if (filename && options.cache) {\n        cacheStore[filename] = render;\n    }\n\n    \n    return render;\n\n};\n\n\n\n\n// 数组迭代\nvar forEach = utils.$each;\n\n\n// 静态分析模板变量\nvar KEYWORDS =\n    // 关键字\n    'break,case,catch,continue,debugger,default,delete,do,else,false'\n    + ',finally,for,function,if,in,instanceof,new,null,return,switch,this'\n    + ',throw,true,try,typeof,var,void,while,with'\n\n    // 保留字\n    + ',abstract,boolean,byte,char,class,const,double,enum,export,extends'\n    + ',final,float,goto,implements,import,int,interface,long,native'\n    + ',package,private,protected,public,short,static,super,synchronized'\n    + ',throws,transient,volatile'\n\n    // ECMA 5 - use strict\n    + ',arguments,let,yield'\n\n    + ',undefined';\n\nvar REMOVE_RE = /\\/\\*[\\w\\W]*?\\*\\/|\\/\\/[^\\n]*\\n|\\/\\/[^\\n]*$|\"(?:[^\"\\\\]|\\\\[\\w\\W])*\"|'(?:[^'\\\\]|\\\\[\\w\\W])*'|\\s*\\.\\s*[$\\w\\.]+/g;\nvar SPLIT_RE = /[^\\w$]+/g;\nvar KEYWORDS_RE = new RegExp([\"\\\\b\" + KEYWORDS.replace(/,/g, '\\\\b|\\\\b') + \"\\\\b\"].join('|'), 'g');\nvar NUMBER_RE = /^\\d[^,]*|,\\d[^,]*/g;\nvar BOUNDARY_RE = /^,+|,+$/g;\nvar SPLIT2_RE = /^$|,+/;\n\n\n// 获取变量\nfunction getVariable (code) {\n    return code\n    .replace(REMOVE_RE, '')\n    .replace(SPLIT_RE, ',')\n    .replace(KEYWORDS_RE, '')\n    .replace(NUMBER_RE, '')\n    .replace(BOUNDARY_RE, '')\n    .split(SPLIT2_RE);\n};\n\n\n// 字符串转义\nfunction stringify (code) {\n    return \"'\" + code\n    // 单引号与反斜杠转义\n    .replace(/('|\\\\)/g, '\\\\$1')\n    // 换行符转义(windows + linux)\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\n/g, '\\\\n') + \"'\";\n}\n\n\nfunction compiler (source, options) {\n    \n    var debug = options.debug;\n    var openTag = options.openTag;\n    var closeTag = options.closeTag;\n    var parser = options.parser;\n    var compress = options.compress;\n    var escape = options.escape;\n    \n\n    \n    var line = 1;\n    var uniq = {$data:1,$filename:1,$utils:1,$helpers:1,$out:1,$line:1};\n    \n\n\n    var isNewEngine = ''.trim;// '__proto__' in {}\n    var replaces = isNewEngine\n    ? [\"$out='';\", \"$out+=\", \";\", \"$out\"]\n    : [\"$out=[];\", \"$out.push(\", \");\", \"$out.join('')\"];\n\n    var concat = isNewEngine\n        ? \"$out+=text;return $out;\"\n        : \"$out.push(text);\";\n          \n    var print = \"function(){\"\n    +      \"var text=''.concat.apply('',arguments);\"\n    +       concat\n    +  \"}\";\n\n    var include = \"function(filename,data){\"\n    +      \"data=data||$data;\"\n    +      \"var text=$utils.$include(filename,data,$filename);\"\n    +       concat\n    +   \"}\";\n\n    var headerCode = \"'use strict';\"\n    + \"var $utils=this,$helpers=$utils.$helpers,\"\n    + (debug ? \"$line=0,\" : \"\");\n    \n    var mainCode = replaces[0];\n\n    var footerCode = \"return new String(\" + replaces[3] + \");\"\n    \n    // html与逻辑语法分离\n    forEach(source.split(openTag), function (code) {\n        code = code.split(closeTag);\n        \n        var $0 = code[0];\n        var $1 = code[1];\n        \n        // code: [html]\n        if (code.length === 1) {\n            \n            mainCode += html($0);\n         \n        // code: [logic, html]\n        } else {\n            \n            mainCode += logic($0);\n            \n            if ($1) {\n                mainCode += html($1);\n            }\n        }\n        \n\n    });\n    \n    var code = headerCode + mainCode + footerCode;\n    \n    // 调试语句\n    if (debug) {\n        code = \"try{\" + code + \"}catch(e){\"\n        +       \"throw {\"\n        +           \"filename:$filename,\"\n        +           \"name:'Render Error',\"\n        +           \"message:e.message,\"\n        +           \"line:$line,\"\n        +           \"source:\" + stringify(source)\n        +           \".split(/\\\\n/)[$line-1].replace(/^\\\\s+/,'')\"\n        +       \"};\"\n        + \"}\";\n    }\n    \n    \n    \n    try {\n        \n        \n        var Render = new Function(\"$data\", \"$filename\", code);\n        Render.prototype = utils;\n\n        return Render;\n        \n    } catch (e) {\n        e.temp = \"function anonymous($data,$filename) {\" + code + \"}\";\n        throw e;\n    }\n\n\n\n    \n    // 处理 HTML 语句\n    function html (code) {\n        \n        // 记录行号\n        line += code.split(/\\n/).length - 1;\n\n        // 压缩多余空白与注释\n        if (compress) {\n            code = code\n            .replace(/\\s+/g, ' ')\n            .replace(/<!--[\\w\\W]*?-->/g, '');\n        }\n        \n        if (code) {\n            code = replaces[1] + stringify(code) + replaces[2] + \"\\n\";\n        }\n\n        return code;\n    }\n    \n    \n    // 处理逻辑语句\n    function logic (code) {\n\n        var thisLine = line;\n       \n        if (parser) {\n        \n             // 语法转换插件钩子\n            code = parser(code, options);\n            \n        } else if (debug) {\n        \n            // 记录行号\n            code = code.replace(/\\n/g, function () {\n                line ++;\n                return \"$line=\" + line +  \";\";\n            });\n            \n        }\n        \n        \n        // 输出语句. 编码: <%=value%> 不编码:<%=#value%>\n        // <%=#value%> 等同 v2.0.3 之前的 <%==value%>\n        if (code.indexOf('=') === 0) {\n\n            var escapeSyntax = escape && !/^=[=#]/.test(code);\n\n            code = code.replace(/^=[=#]?|[\\s;]*$/g, '');\n\n            // 对内容编码\n            if (escapeSyntax) {\n\n                var name = code.replace(/\\s*\\([^\\)]+\\)/, '');\n\n                // 排除 utils.* | include | print\n                \n                if (!utils[name] && !/^(include|print)$/.test(name)) {\n                    code = \"$escape(\" + code + \")\";\n                }\n\n            // 不编码\n            } else {\n                code = \"$string(\" + code + \")\";\n            }\n            \n\n            code = replaces[1] + code + replaces[2];\n\n        }\n        \n        if (debug) {\n            code = \"$line=\" + thisLine + \";\" + code;\n        }\n        \n        // 提取模板中的变量名\n        forEach(getVariable(code), function (name) {\n            \n            // name 值可能为空，在安卓低版本浏览器下\n            if (!name || uniq[name]) {\n                return;\n            }\n\n            var value;\n\n            // 声明模板变量\n            // 赋值优先级:\n            // [include, print] > utils > helpers > data\n            if (name === 'print') {\n\n                value = print;\n\n            } else if (name === 'include') {\n                \n                value = include;\n                \n            } else if (utils[name]) {\n\n                value = \"$utils.\" + name;\n\n            } else if (helpers[name]) {\n\n                value = \"$helpers.\" + name;\n\n            } else {\n\n                value = \"$data.\" + name;\n            }\n            \n            headerCode += name + \"=\" + value + \",\";\n            uniq[name] = true;\n            \n            \n        });\n        \n        return code + \"\\n\";\n    }\n    \n    \n};\n\n\n\n// 定义模板引擎的语法\n\n\ndefaults.openTag = '{{';\ndefaults.closeTag = '}}';\n\n\nvar filtered = function (js, filter) {\n    var parts = filter.split(':');\n    var name = parts.shift();\n    var args = parts.join(':') || '';\n\n    if (args) {\n        args = ', ' + args;\n    }\n\n    return '$helpers.' + name + '(' + js + args + ')';\n}\n\n\ndefaults.parser = function (code, options) {\n\n    // var match = code.match(/([\\w\\$]*)(\\b.*)/);\n    // var key = match[1];\n    // var args = match[2];\n    // var split = args.split(' ');\n    // split.shift();\n\n    code = code.replace(/^\\s/, '');\n\n    var split = code.split(' ');\n    var key = split.shift();\n    var args = split.join(' ');\n\n    \n\n    switch (key) {\n\n        case 'if':\n\n            code = 'if(' + args + '){';\n            break;\n\n        case 'else':\n            \n            if (split.shift() === 'if') {\n                split = ' if(' + split.join(' ') + ')';\n            } else {\n                split = '';\n            }\n\n            code = '}else' + split + '{';\n            break;\n\n        case '/if':\n\n            code = '}';\n            break;\n\n        case 'each':\n            \n            var object = split[0] || '$data';\n            var as     = split[1] || 'as';\n            var value  = split[2] || '$value';\n            var index  = split[3] || '$index';\n            \n            var param   = value + ',' + index;\n            \n            if (as !== 'as') {\n                object = '[]';\n            }\n            \n            code =  '$each(' + object + ',function(' + param + '){';\n            break;\n\n        case '/each':\n\n            code = '});';\n            break;\n\n        case 'echo':\n\n            code = 'print(' + args + ');';\n            break;\n\n        case 'print':\n        case 'include':\n\n            code = key + '(' + split.join(',') + ');';\n            break;\n\n        default:\n\n            // 过滤器（辅助方法）\n            // {{value | filterA:'abcd' | filterB}}\n            // >>> $helpers.filterB($helpers.filterA(value, 'abcd'))\n            // TODO: {{ddd||aaa}} 不包含空格\n            if (/^\\s*\\|\\s*[\\w\\$]/.test(args)) {\n\n                var escape = true;\n\n                // {{#value | link}}\n                if (code.indexOf('#') === 0) {\n                    code = code.substr(1);\n                    escape = false;\n                }\n\n                var i = 0;\n                var array = code.split('|');\n                var len = array.length;\n                var val = array[i++];\n\n                for (; i < len; i ++) {\n                    val = filtered(val, array[i]);\n                }\n\n                code = (escape ? '=' : '=#') + val;\n\n            // 即将弃用 {{helperName value}}\n            } else if (template.helpers[key]) {\n                \n                code = '=#' + key + '(' + split.join(',') + ');';\n            \n            // 内容直接输出 {{value}}\n            } else {\n\n                code = '=' + code;\n            }\n\n            break;\n    }\n    \n    \n    return code;\n};\n\n\n\n// RequireJS && SeaJS\nif (typeof define === 'function') {\n    define(function() {\n        return template;\n    });\n\n// NodeJS\n} else if (typeof exports !== 'undefined') {\n    module.exports = template;\n} else {\n    this.template = template;\n}\n\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/3rd/artTemplate@3.1.0/template-debug.js","import OmicIcon from './icon'\r\nimport OmicInput from './input'\r\nimport OmicGrid from './grid'\r\nimport OmicOther from './other'\r\nimport OmicDivider from './divider'\r\n\r\nexport default {\r\n  OmicIcon,\r\n  OmicInput,\r\n  OmicGrid,\r\n  OmicOther,\r\n  OmicDivider,\r\n  $isPkg: true\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/index.js","import Omic from '../components/Omic'\n\nexport default {\n  toPascalCase(original) {\n    // 连字符转Pascal命名\n    original = this.toCamelCase(original)\n    if (original) {\n      return original.slice(0, 1).toUpperCase() + original.slice(1)\n    }\n  },\n  toCamelCase(original) {\n    // 连字符转为驼峰命名\n    if (original) {\n      return original.replace(/-(\\w)/g, function (all, letter) {\n        return letter.toUpperCase()\n      })\n    }\n  },\n  toHyphenCase(original) {\n    // Pascal或驼峰转为连字符\n    if (original) {\n      original = original.slice(0, 1).toLowerCase() + original.slice(1)\n      return original.replace(/([A-Z])/g, \"-$1\").toLowerCase()\n    }\n  },\n  eachInstall(Omi, components, prefix = '') {\n    if (Omi && Omi.makeHTML) {\n      Object.keys(components).forEach((key) => {\n        let subComponent = components[key]\n        if (subComponent.$isPkg) {\n          this.eachInstall(Omi, subComponent, prefix)\n        } else if (subComponent instanceof Function) {\n          if (prefix && !(prefix.lastIndexOf('-') === (prefix.length - 1))) {\n            prefix = prefix + '-'\n          }\n          let name = prefix + this.toHyphenCase(key)\n          Omi.makeHTML(name, subComponent)\n        }\n      })\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Utils.js","import Omi from 'omi'\n\nimport '../3rd/mdui@v0.1.2/css/mdui.css'\nimport '../3rd/mdui@v0.1.2/js/mdui.js'\nimport '../css/index.less'\n\nimport OmicUitls from './utils/OmicUitls'\n\nexport default class Omic extends Omi.Component {\n  constructor(data) {\n    //构造函数\n    let key = Math.round(10000000000000000 * Math.random()) //随机数，组件唯一标识\n    data = Object.assign({\n      $__tag_closed_: true, //内部使用，标签是否闭合\n      $__tag_self_: Omic, //内部使用，未闭合标签需设定\n      key: key,\n      id: 'Omic-' + key,\n      name: 'Omic-' + key,\n      clazz: '',\n      style: '',\n      disabled: ''\n    }, data);\n    super(data)\n    OmicUitls.copyEvent(this) //data中事件方法copy到组件\n  }\n  install() {} //初始化安装，传入数据处理\n  installed() {} //安装完成，HTML插入页面后执行\n  uninstall() {} //卸载，执行remove时触发\n  beforeUpdate() {} //更新前\n  afterUpdate() {} //更新后\n  style() {} //样式\n  beforeRender() {} //渲染内容前调用\n  render() {} //渲染内容\n  $makeHTML(name, ctor) {\n    Omi.makeHTML(name, ctor) //制作成可以声明式的标签\n  }\n  $get(omiId) {\n    return Omi.get(omiId) //通过组件声明的omi-id获取到对应的实例\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/Omic.js"],"sourceRoot":""}